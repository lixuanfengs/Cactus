import{_ as i,c as a,a as e,o as t}from"./app-BcTj92Yq.js";const n={};function l(h,s){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="java私有仓库nexus搭建" tabindex="-1"><a class="header-anchor" href="#java私有仓库nexus搭建"><span>Java私有仓库Nexus搭建</span></a></h1><h2 id="为什么需要搭建私有仓库" tabindex="-1"><a class="header-anchor" href="#为什么需要搭建私有仓库"><span>为什么需要搭建私有仓库？</span></a></h2><p>1、有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。而且自己maven私服更容易维护，由于在内网，公司的开发人员从maven私服迁出jar到本地仓库更快。<br> 2、当需要上传第三方或者自己的jar到maven仓库时，就需要私服了。</p><h2 id="如何部署和使用" tabindex="-1"><a class="header-anchor" href="#如何部署和使用"><span>如何部署和使用？</span></a></h2><ul><li>操作系统：Ubuntu18 （虚拟机和云服务器均可）</li><li>Maven版本：apache-maven-3.6.0 （下载地址：<a href="https://archive.apache.org/dist/maven/maven-3/3.6.0/binaries/" target="_blank" rel="noopener noreferrer">https://archive.apache.org/dist/maven/maven-3/3.6.0/binaries/</a>）</li><li>Nexus版本：nexus-3.58.0 (下载地址：<a href="https://www.sonatype.com/products/sonatype-nexus-oss-download" target="_blank" rel="noopener noreferrer">https://www.sonatype.com/products/sonatype-nexus-oss-download</a>)</li></ul><h3 id="配置maven" tabindex="-1"><a class="header-anchor" href="#配置maven"><span>配置Maven</span></a></h3><p>将下载好的maven和nexus上传到服务器上（建议软件都安装在/usr/local目录下），下面解压maven</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tar -zxvf apache-maven-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">tar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.gz</span></span></code></pre></div><p>配置环境变量</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vim /etc/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">profile</span></span></code></pre></div><p>在最末尾加上</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># maven</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MAVEN_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/usr/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/apache-maven-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">export MAVEN_HOME</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">export </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}:\${MAVEN_HOME}/bin</span></span></code></pre></div><p>然后再使用下面命令使配置生效</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">source /etc/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">profile</span></span></code></pre></div><p>查看是否生效</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mvn -v</span></span></code></pre></div><h3 id="部署nexus" tabindex="-1"><a class="header-anchor" href="#部署nexus"><span>部署Nexus</span></a></h3><p>解压Nexus</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -zxvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nexus-3.58.0-04-unix.tar.gz</span></span></code></pre></div><p>启动</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd /usr/local/nexus-3.58.0-04/bin</span></span>
<span class="line"><span>./nexus start</span></span></code></pre></div><p>默认端口：<code>8081</code><br> 默认账号密码:<code>admin/admin123</code></p><h4 id="修改默认端口" tabindex="-1"><a class="header-anchor" href="#修改默认端口"><span>修改默认端口</span></a></h4><p>新版本的Nexus的配置文件是在Nexus根目录的<code>/etc</code>下的<code>nexus-default.properties</code>要修改Nexus的端口，就修改配置文件中的<code>application-port</code>，然后重启Nexus服务。</p><h2 id="nexus简单功能介绍" tabindex="-1"><a class="header-anchor" href="#nexus简单功能介绍"><span>Nexus简单功能介绍</span></a></h2><figure><img src="https://beauties.eu.org/blogimg/main/img1/1689838049503-966a9628-636e-4687-821e-367c2a847d10-958162.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="搜索功能" tabindex="-1"><a class="header-anchor" href="#搜索功能"><span>搜索功能</span></a></h3><p>这个就是类似Maven仓库上的搜索功能，就是从私服上查找是否有哪些包。</p><blockquote><p>**注意：**在Search这级是支持模糊搜索的</p></blockquote><h3 id="浏览" tabindex="-1"><a class="header-anchor" href="#浏览"><span>浏览</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/1689838154020-26904c03-a388-4971-b8b9-7d731fa6584f-129823.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="上传" tabindex="-1"><a class="header-anchor" href="#上传"><span>上传</span></a></h3><p>顾名思义就是上传jar包到私服中，可以选择其中一个hosted仓库。通过页面直接上传的方式只是上传了jar包，若这个jar通过Maven依赖了其他jar，那其他项目在下载这个jar时无法取得它的依赖。所以，除非这个jar没有任何依赖，否则还是推荐通过命令行或者IDE的方式上传jar包，这样才会把pom一并上传。<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838218654-5d864c2f-45d7-459b-8180-30647e8535c9-752727.png" alt="image.png" loading="lazy"></p><h3 id="服务器管理和配置" tabindex="-1"><a class="header-anchor" href="#服务器管理和配置"><span>服务器管理和配置</span></a></h3><p>看到这选项是要进行登录的，在右上角点击“Sign In”的登录按钮，输入admin/admin123，登录成功之后，即可看到此功能，如图所示：<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838261182-c81a7b18-6d4e-4d98-9d63-0e550e7e5b63-029418.png" alt="image.png" loading="lazy"></p><h3 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库"><span>仓库</span></a></h3><h4 id="blob-stores" tabindex="-1"><a class="header-anchor" href="#blob-stores"><span>Blob Stores</span></a></h4><p>文件存储的地方，创建一个目录的话，对应文件系统的一个目录。<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838320614-711982f6-9c51-4378-b97d-ddf6dba0d682-813724.png" alt="image.png" loading="lazy"><br><img src="https://beauties.eu.org/blogimg/main/img1/1689838344131-e015556d-5f8f-49e7-94be-11dfc2956ec8-145621.png" alt="1689838344131-e015556d-5f8f-49e7-94be-11dfc2956ec8-145621" loading="lazy"></p><h4 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories"><span>Repositories</span></a></h4><p>仓库分为三种：Proxy、hosted、group</p><h5 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy"><span>Proxy</span></a></h5><p>这里就是代理的意思，代理中央Maven仓库，当PC访问中央库的时候，先通过Proxy下载到Nexus仓库，然后再从Nexus仓库下载到PC本地。<br> 这样的优势只要其中一个人从中央库下来了，以后大家都是从Nexus私服上进行下来，私服一般部署在内网，这样大大节约的宽带。<br> 创建Proxy的具体步骤：</p><ol><li>点击左上角的“Create Repositories”按钮</li><li>选择要创建的类型</li><li>填写详细信息</li></ol><p>Name：就是为代理起个名字，我取名为“aliyun” Remote Storage: 代理的地址，Maven的地址为: <a href="https://repo1.maven.org/maven2/" target="_blank" rel="noopener noreferrer">https://repo1.maven.org/maven2/</a>，但Maven官方的代理访问速度太慢了，使用阿里云的Maven代理更好，<a href="http://maven.aliyun.com/nexus/content/groups/public" target="_blank" rel="noopener noreferrer">http://maven.aliyun.com/nexus/content/groups/public</a> Blob Store: 选择代理下载包的存放路径，我选择的是之前创建的一个。<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838481703-ec111e21-2be7-4a21-85a0-716516f51059-076238.png" alt="image.png" loading="lazy"></p><h4 id="hosted" tabindex="-1"><a class="header-anchor" href="#hosted"><span>Hosted</span></a></h4><p>Hosted是宿主机的意思，用于将第三方的Jar或者我们自己的jar放到私服上。Hosted有三种方式，Releases、SNAPSHOT、Mixed</p><ul><li>Releases: 一般是已经发布的Jar包</li><li>Snapshot: 未发布的版本</li><li>Mixed：混合的</li></ul><p>Hosted的创建和Proxy类似，类型需选择maven2(hosted)。注意：Deployment Pollcy，我们需要把策略改成“Allow redeploy”，以允许重复发布覆盖同版本的jar包。<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838570845-1ad5cf72-9e60-4054-ad63-e17377436c4e-217353.png" alt="image.png" loading="lazy"></p><h4 id="group" tabindex="-1"><a class="header-anchor" href="#group"><span><strong>Group</strong></span></a></h4><p>能把多个仓库合成一个仓库来使用，把上几步创建的代理仓库和宿主仓库都加入到“maven-public”仓库组中：<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838642381-b85a0b27-b17b-42c1-a860-88359de0922f-527749.png" alt="image.png" loading="lazy"></p><h4 id="security" tabindex="-1"><a class="header-anchor" href="#security"><span>Security</span></a></h4><p>包含用户、角色、权限的配置。</p><h4 id="support" tabindex="-1"><a class="header-anchor" href="#support"><span>Support</span></a></h4><p>包含日志及数据分析。</p><h4 id="system" tabindex="-1"><a class="header-anchor" href="#system"><span>System</span></a></h4><p>包含API（Nexus这个API文档貌似是用swagger做的）、邮件服务器，设置调度任务等。</p><h2 id="maven结合nexus配置私有仓库" tabindex="-1"><a class="header-anchor" href="#maven结合nexus配置私有仓库"><span>Maven结合Nexus配置私有仓库</span></a></h2><h3 id="配置maven的settings-xml" tabindex="-1"><a class="header-anchor" href="#配置maven的settings-xml"><span>配置Maven的settings.xml</span></a></h3><p>在idea、eclipse等IDE中配置好maven的settings文件路径后，在mirrors标签中增加一个mirror</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mirror</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;nexus-aliyun&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mirrorOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;*&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mirrorOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Nexus aliyun&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;http://你的IP:你的端口/repository/aliyun/&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mirror</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>url中填入之前在Nexus中自己创建的代理中央仓库<br><img src="https://beauties.eu.org/blogimg/main/img1/1689838963123-b61e61c0-d420-43e7-a841-ca5ba2982a0d-999252.png" alt="image.png" loading="lazy"></p><h3 id="配置项目中的pom-xml" tabindex="-1"><a class="header-anchor" href="#配置项目中的pom-xml"><span>配置项目中的pom.xml</span></a></h3><p>在pom文件中增加一个repository，注意id和name需和代理中央仓库的Name一致。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;aliyun&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;aliyun&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;http://192.168.2.109:8888/repository/aliyun/&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>上面的配置方法选择其中一种即可。<br> 如此一来，项目在下载jar包时会从私服的代理中央仓库中获取，如果代理仓库没有该jar，就会去代理仓库配置的远程仓库中下载到私服中，再从私服下载到项目本地。</p>`,65)])])}const r=i(n,[["render",l]]),k=JSON.parse(`{"path":"/tutorials/tools/maven/Java%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93Nexus%E6%90%AD%E5%BB%BA.html","title":"Java私有仓库Nexus搭建","lang":"zh-CN","frontmatter":{"title":"Java私有仓库Nexus搭建","subtitle":"Java私有仓库Nexus搭建","date":"2025-04-01T17:33:30.000Z","category":["Nexus"],"tag":["Nexus"],"order":2,"description":"Java私有仓库Nexus搭建 为什么需要搭建私有仓库？ 1、有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。而且自己maven私服更容易维护，由于在内网，...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorials/tools/maven/Java%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93Nexus%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"Java私有仓库Nexus搭建"}],["meta",{"property":"og:description","content":"Java私有仓库Nexus搭建 为什么需要搭建私有仓库？ 1、有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。而且自己maven私服更容易维护，由于在内网，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://beauties.eu.org/blogimg/main/img1/1689838049503-966a9628-636e-4687-821e-367c2a847d10-958162.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-19T07:43:33.000Z"}],["meta",{"property":"article:tag","content":"Nexus"}],["meta",{"property":"article:published_time","content":"2025-04-01T17:33:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-19T07:43:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java私有仓库Nexus搭建\\",\\"image\\":[\\"https://beauties.eu.org/blogimg/main/img1/1689838049503-966a9628-636e-4687-821e-367c2a847d10-958162.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838154020-26904c03-a388-4971-b8b9-7d731fa6584f-129823.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838218654-5d864c2f-45d7-459b-8180-30647e8535c9-752727.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838261182-c81a7b18-6d4e-4d98-9d63-0e550e7e5b63-029418.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838320614-711982f6-9c51-4378-b97d-ddf6dba0d682-813724.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838344131-e015556d-5f8f-49e7-94be-11dfc2956ec8-145621.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838481703-ec111e21-2be7-4a21-85a0-716516f51059-076238.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838570845-1ad5cf72-9e60-4054-ad63-e17377436c4e-217353.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838642381-b85a0b27-b17b-42c1-a860-88359de0922f-527749.png\\",\\"https://beauties.eu.org/blogimg/main/img1/1689838963123-b61e61c0-d420-43e7-a841-ca5ba2982a0d-999252.png\\"],\\"datePublished\\":\\"2025-04-01T17:33:30.000Z\\",\\"dateModified\\":\\"2025-08-19T07:43:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"为什么需要搭建私有仓库？","slug":"为什么需要搭建私有仓库","link":"#为什么需要搭建私有仓库","children":[]},{"level":2,"title":"如何部署和使用？","slug":"如何部署和使用","link":"#如何部署和使用","children":[{"level":3,"title":"配置Maven","slug":"配置maven","link":"#配置maven","children":[]},{"level":3,"title":"部署Nexus","slug":"部署nexus","link":"#部署nexus","children":[]}]},{"level":2,"title":"Nexus简单功能介绍","slug":"nexus简单功能介绍","link":"#nexus简单功能介绍","children":[{"level":3,"title":"搜索功能","slug":"搜索功能","link":"#搜索功能","children":[]},{"level":3,"title":"浏览","slug":"浏览","link":"#浏览","children":[]},{"level":3,"title":"上传","slug":"上传","link":"#上传","children":[]},{"level":3,"title":"服务器管理和配置","slug":"服务器管理和配置","link":"#服务器管理和配置","children":[]},{"level":3,"title":"仓库","slug":"仓库","link":"#仓库","children":[]}]},{"level":2,"title":"Maven结合Nexus配置私有仓库","slug":"maven结合nexus配置私有仓库","link":"#maven结合nexus配置私有仓库","children":[{"level":3,"title":"配置Maven的settings.xml","slug":"配置maven的settings-xml","link":"#配置maven的settings-xml","children":[]},{"level":3,"title":"配置项目中的pom.xml","slug":"配置项目中的pom-xml","link":"#配置项目中的pom-xml","children":[]}]}],"git":{"createdTime":1755510566000,"updatedTime":1755589413000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":2,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":4.91,"words":1474},"filePathRelative":"tutorials/tools/maven/Java私有仓库Nexus搭建.md","localizedDate":"2025年4月1日","excerpt":"\\n<h2>为什么需要搭建私有仓库？</h2>\\n<p>1、有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。而且自己maven私服更容易维护，由于在内网，公司的开发人员从maven私服迁出jar到本地仓库更快。<br>\\n2、当需要上传第三方或者自己的jar到maven仓库时，就需要私服了。</p>\\n<h2>如何部署和使用？</h2>\\n<ul>\\n<li>操作系统：Ubuntu18 （虚拟机和云服务器均可）</li>\\n<li>Maven版本：apache-maven-3.6.0 （下载地址：<a href=\\"https://archive.apache.org/dist/maven/maven-3/3.6.0/binaries/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://archive.apache.org/dist/maven/maven-3/3.6.0/binaries/</a>）</li>\\n<li>Nexus版本：nexus-3.58.0 (下载地址：<a href=\\"https://www.sonatype.com/products/sonatype-nexus-oss-download\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.sonatype.com/products/sonatype-nexus-oss-download</a>)</li>\\n</ul>","autoDesc":true}`);export{r as comp,k as data};
