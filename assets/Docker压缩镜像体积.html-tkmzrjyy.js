import{_ as e,c as a,f as l,o as n}from"./app-cT001TM_.js";const i={};function o(r,s){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-手动优化镜像体积【推荐】" tabindex="-1"><a class="header-anchor" href="#_1-手动优化镜像体积【推荐】"><span>1. 手动优化镜像体积【推荐】</span></a></h2><h3 id="_1-1-新建-dockerfile-并-build-为镜像" tabindex="-1"><a class="header-anchor" href="#_1-1-新建-dockerfile-并-build-为镜像"><span>1.1 新建 Dockerfile 并 build 为镜像</span></a></h3><p>新建 Dockerfile文件，用于制作后端项目的 Docker 镜像。编写内容如下：</p><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">## AdoptOpenJDK 停止发布 OpenJDK 二进制，而 Eclipse Temurin 是伸，提供更好的稳定性</span></span>
<span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> eclipse-temurin:17</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 创建目录，并使用它作为工作目录</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> mkdir -p /cactus-server</span></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /cactus-server</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 将后端项目的 Jar 文件，复制到镜像中</span></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> cactus-server.jar app.jar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 设置 TZ 时区</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 设置 JAVA_OPTS 环境变量，可通过 docker run -e &quot;JAVA_OPTS=&quot; 进行覆盖</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> TZ=Asia/Shanghai JAVA_OPTS=</span><span style="color:#98C379;">&quot;-Xms512m -Xmx512m&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 暴露后端项目的 48080 端口</span></span>
<span class="line"><span style="color:#61AFEF;">EXPOSE</span><span style="color:#ABB2BF;"> 48080</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 启动后端项目</span></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> java \${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar app.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件中 cactus-server.jar 的大小如图：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20241015105045146.png" alt="image-20241015105045146" tabindex="0" loading="lazy"><figcaption>image-20241015105045146</figcaption></figure><p>执行如下命令，构建名字为 <code>cactus-server-offline-a</code> 的 Docker 镜像。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> --no-cache</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> cactus-server-offline-a:latest</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打包镜像完成后使用命令 <code>docker images</code> 来查看镜像的体积：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20241015105446540.png" alt="image-20241015105446540" tabindex="0" loading="lazy"><figcaption>image-20241015105446540</figcaption></figure><blockquote><p>可以看到此时的镜像体积是593MB。</p></blockquote><h3 id="_1-2-压缩减小镜像体积" tabindex="-1"><a class="header-anchor" href="#_1-2-压缩减小镜像体积"><span>1.2 压缩减小镜像体积</span></a></h3><p>首先优化镜像体积有以下几个步骤：</p><ul><li><p><strong>使用 Alpine 作为基础镜像</strong>：Alpine Linux 是一个轻量级的 Linux 发行版，可以显著减少镜像体积。</p></li><li><p><strong>多阶段构建</strong>：在第一阶段进行构建和打包，在第二阶段只保留运行时所需的内容。</p></li><li><p><strong>删除无用文件和缓存</strong>：安装软件包后，清理缓存和临时文件。</p></li><li><p><strong>确保字体文件可用</strong>：如果 Java 需要特定字体，明确安装它们。</p></li></ul><p>根据以上步骤，优化好的 Dockerfile 如下：</p><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> eclipse-temurin:17-jre-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 安装字体和配置文件（尽量减少包）</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apk add --no-cache ttf-dejavu fontconfig &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    rm -rf /var/cache/apk/*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 创建工作目录并复制 jar 文件</span></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /cactus-server</span></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> cactus-server.jar app.jar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 设置环境变量</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> TZ=Asia/Shanghai \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    JAVA_OPTS=</span><span style="color:#98C379;">&quot;-Xms512m -Xmx512m&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 暴露端口</span></span>
<span class="line"><span style="color:#61AFEF;">EXPOSE</span><span style="color:#ABB2BF;"> 48800</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 启动服务</span></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> java \${JAVA_OPTS} -Dfile.encoding=UTF-8 \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    -jar app.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行如下命令，构建名字为 <code>cactus-server-offline-a</code> 的 Docker 镜像。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> --no-cache</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> cactus-server-offline-a:latest</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时通过使用命令 <code>docker images</code> 再来查看镜像的体积：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20241015110302796.png" alt="image-20241015110302796" tabindex="0" loading="lazy"><figcaption>image-20241015110302796</figcaption></figure><p>如图所示，镜像体积从一开始的593MB成功减少到了346MB。</p><h2 id="_2-docker-slim压缩镜像体积" tabindex="-1"><a class="header-anchor" href="#_2-docker-slim压缩镜像体积"><span>2. Docker-Slim压缩镜像体积</span></a></h2><p>Docker-Slim 不会更改 Docker 容器映像中的任何内容并将其缩小多达 30 倍。 Docker-Slim 将通过使用各种分析技术了解您的应用程序及其需求来优化和保护您的容器。它会丢弃你不需要的东西,减少容器的攻击面。</p><p>Github：<a href="https://github.com/slimtoolkit/slim" target="_blank" rel="noopener noreferrer">Docker-Slim</a></p><h3 id="_2-1-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-安装"><span>2.1 安装</span></a></h3><h4 id="_2-1-1-手动安装" tabindex="-1"><a class="header-anchor" href="#_2-1-1-手动安装"><span>2.1.1 手动安装</span></a></h4><ol><li>下载对应平台的包。 <ul><li><a href="https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_mac.zip" target="_blank" rel="noopener noreferrer">Latest Mac binaries</a> (<code>curl -L -o ds.zip https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_mac.zip</code>)</li><li><a href="https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_mac_m1.zip" target="_blank" rel="noopener noreferrer">Latest Mac M1 binaries</a> (<code>curl -L -o ds.zip https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_mac_m1.zip)</code>)</li><li><a href="https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux.tar.gz" target="_blank" rel="noopener noreferrer">Latest Linux binaries</a> (<code>curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux.tar.gz</code>)</li><li><a href="https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux_arm.tar.gz" target="_blank" rel="noopener noreferrer">Latest Linux ARM binaries</a> (<code>curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux_arm.tar.gz</code>)</li><li><a href="https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux_arm64.tar.gz" target="_blank" rel="noopener noreferrer">Latest Linux ARM64 binaries</a> (<code>curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux_arm64.tar.gz</code>)</li></ul></li><li>解压缩包，并选择性的将其移动到 bin 目录。</li></ol><p><strong>Linux：dist_linux</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">tar</span><span style="color:#D19A66;"> -xvf</span><span style="color:#98C379;"> dist_linux.tar.gz</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#98C379;">  dist_linux/docker-slim</span><span style="color:#98C379;"> /usr/local/bin/</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#98C379;">  dist_linux/slim-sensor</span><span style="color:#98C379;"> /usr/local/bin/</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#98C379;">  dist_linux/slim</span><span style="color:#98C379;"> /usr/local/bin/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>苹果Mac：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">unzip</span><span style="color:#98C379;"> ds.zip</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#98C379;">  dist_mac/docker-slim</span><span style="color:#98C379;"> /usr/local/bin/</span></span>
<span class="line"><span style="color:#61AFEF;">mv</span><span style="color:#98C379;">  dist_mac/docker-slim-sensor</span><span style="color:#98C379;"> /usr/local/bin/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>将解压缩包的位置添加到 PATH 环境变量中(可选)。</li></ol><blockquote><p>如果提取二进制文件的目录不在 PATH 中，则需要从该目录运行 Slim 应用二进制文件。</p></blockquote><h4 id="_2-1-2-脚本安装" tabindex="-1"><a class="header-anchor" href="#_2-1-2-脚本安装"><span>2.1.2 脚本安装</span></a></h4><p><strong>脚本</strong></p><p>你可以使用此脚本在Linux（x86和ARM）和macOS（x86和Apple Silicon）上安装当前版本的Slim。</p><div class="language-ruby line-numbers-mode" data-highlighter="shiki" data-ext="ruby" data-title="ruby" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">curl </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">sL </span><span style="color:#56B6C2;">https</span><span style="color:#D19A66;">:</span><span style="color:#E06C75;">//</span><span style="color:#ABB2BF;">raw.githubusercontent.com</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">slimtoolkit</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">slim</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">master</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">scripts</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">install</span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;">slim.sh | sudo </span><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;"> bash </span><span style="color:#56B6C2;">-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Mac：</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">brew</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> docker-slim</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Docker:</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> pull</span><span style="color:#98C379;"> dslim/slim</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-2-如何使用" tabindex="-1"><a class="header-anchor" href="#_2-2-如何使用"><span>2.2 如何使用</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> images</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#98C379;"> offline</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240925111156650.png" alt="image-20240925111156650" tabindex="0" loading="lazy"><figcaption>image-20240925111156650</figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">docker-slim</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -http-probe=false</span><span style="color:#D19A66;"> --target</span><span style="color:#98C379;"> cactus-server-offline:latest</span><span style="color:#D19A66;"> --tag</span><span style="color:#98C379;"> cactus-server-offline:slim</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240925111948723.png" alt="image-20240925111948723" tabindex="0" loading="lazy"><figcaption>image-20240925111948723</figcaption></figure><blockquote><p><em>默认会开启http的探测(--http-probe)。我们build的时候给他关上</em></p></blockquote><p>我们看到 cactus-server-offline:lates 镜像从 596MB 减少到了 352MB，至此，本次教程就到这里了。</p>`,48)]))}const c=e(i,[["render",o],["__file","Docker压缩镜像体积.html.vue"]]),p=JSON.parse('{"path":"/linuxs/Docker/Docker%E5%8E%8B%E7%BC%A9%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF.html","title":"Docker压缩镜像体积","lang":"zh-CN","frontmatter":{"title":"Docker压缩镜像体积","subtitle":"Docker压缩镜像体积","date":"2024-09-25T11:15:26.000Z","category":["Docker"],"tag":["Docker"],"order":2,"description":"1. 手动优化镜像体积【推荐】 1.1 新建 Dockerfile 并 build 为镜像 新建 Dockerfile文件，用于制作后端项目的 Docker 镜像。编写内容如下： 文件中 cactus-server.jar 的大小如图： image-20241015105045146image-20241015105045146 执行如下命令，构建名字...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/linuxs/Docker/Docker%E5%8E%8B%E7%BC%A9%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF.html"}],["meta",{"property":"og:site_name","content":"Cactus\'s Blog"}],["meta",{"property":"og:title","content":"Docker压缩镜像体积"}],["meta",{"property":"og:description","content":"1. 手动优化镜像体积【推荐】 1.1 新建 Dockerfile 并 build 为镜像 新建 Dockerfile文件，用于制作后端项目的 Docker 镜像。编写内容如下： 文件中 cactus-server.jar 的大小如图： image-20241015105045146image-20241015105045146 执行如下命令，构建名字..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/image-20241015105045146.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-15T03:19:04.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2024-09-25T11:15:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-15T03:19:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker压缩镜像体积\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20241015105045146.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20241015105446540.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20241015110302796.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240925111156650.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240925111948723.png\\"],\\"datePublished\\":\\"2024-09-25T11:15:26.000Z\\",\\"dateModified\\":\\"2024-10-15T03:19:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"1. 手动优化镜像体积【推荐】","slug":"_1-手动优化镜像体积【推荐】","link":"#_1-手动优化镜像体积【推荐】","children":[{"level":3,"title":"1.1 新建 Dockerfile 并 build 为镜像","slug":"_1-1-新建-dockerfile-并-build-为镜像","link":"#_1-1-新建-dockerfile-并-build-为镜像","children":[]},{"level":3,"title":"1.2 压缩减小镜像体积","slug":"_1-2-压缩减小镜像体积","link":"#_1-2-压缩减小镜像体积","children":[]}]},{"level":2,"title":"2. Docker-Slim压缩镜像体积","slug":"_2-docker-slim压缩镜像体积","link":"#_2-docker-slim压缩镜像体积","children":[{"level":3,"title":"2.1 安装","slug":"_2-1-安装","link":"#_2-1-安装","children":[]},{"level":3,"title":"2.2 如何使用","slug":"_2-2-如何使用","link":"#_2-2-如何使用","children":[]}]}],"git":{"createdTime":1728962264000,"updatedTime":1728962344000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":2}]},"readingTime":{"minutes":3.36,"words":1009},"filePathRelative":"linuxs/Docker/Docker压缩镜像体积.md","localizedDate":"2024年9月25日","excerpt":"<h2>1. 手动优化镜像体积【推荐】</h2>\\n<h3>1.1 新建 Dockerfile 并 build 为镜像</h3>\\n<p>新建 Dockerfile文件，用于制作后端项目的 Docker 镜像。编写内容如下：</p>\\n<div class=\\"language-dockerfile line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"dockerfile\\" data-title=\\"dockerfile\\" style=\\"background-color:#282c34;color:#abb2bf\\"><pre class=\\"shiki one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## AdoptOpenJDK 停止发布 OpenJDK 二进制，而 Eclipse Temurin 是伸，提供更好的稳定性</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">FROM</span><span style=\\"color:#ABB2BF\\"> eclipse-temurin:17</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 创建目录，并使用它作为工作目录</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">RUN</span><span style=\\"color:#ABB2BF\\"> mkdir -p /cactus-server</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">WORKDIR</span><span style=\\"color:#ABB2BF\\"> /cactus-server</span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 将后端项目的 Jar 文件，复制到镜像中</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">COPY</span><span style=\\"color:#ABB2BF\\"> cactus-server.jar app.jar</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 设置 TZ 时区</span></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 设置 JAVA_OPTS 环境变量，可通过 docker run -e \\"JAVA_OPTS=\\" 进行覆盖</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">ENV</span><span style=\\"color:#ABB2BF\\"> TZ=Asia/Shanghai JAVA_OPTS=</span><span style=\\"color:#98C379\\">\\"-Xms512m -Xmx512m\\"</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 暴露后端项目的 48080 端口</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">EXPOSE</span><span style=\\"color:#ABB2BF\\"> 48080</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## 启动后端项目</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">ENTRYPOINT</span><span style=\\"color:#ABB2BF\\"> java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar app.jar</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,p as data};
