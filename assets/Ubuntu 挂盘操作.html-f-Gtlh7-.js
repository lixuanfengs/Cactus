import{_ as s,c as a,f as l,o as n}from"./app-B-YdtcQC.js";const o={};function i(r,e){return n(),a("div",null,e[0]||(e[0]=[l(`<h2 id="检查硬盘-首先需要查看新硬盘能否被机器识别" tabindex="-1"><a class="header-anchor" href="#检查硬盘-首先需要查看新硬盘能否被机器识别"><span>检查硬盘，首先需要查看新硬盘能否被机器识别</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> lsblk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905161439566.png" alt="image-20240905161439566" tabindex="0" loading="lazy"><figcaption>image-20240905161439566</figcaption></figure><p>可以看见我们系统盘里有一个vdb1 的新硬盘500GB 被识别到。</p><h2 id="找到新硬盘的设备名称" tabindex="-1"><a class="header-anchor" href="#找到新硬盘的设备名称"><span>找到新硬盘的设备名称</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> fdisk</span><span style="color:#D19A66;"> -l</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905161750214.png" alt="image-20240905161750214" tabindex="0" loading="lazy"><figcaption>image-20240905161750214</figcaption></figure><p>我们可以看到新硬盘名称 /dev/vdb1 里面是有内容的。</p><h2 id="创建一个挂载点" tabindex="-1"><a class="header-anchor" href="#创建一个挂载点"><span>创建一个挂载点</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> work</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905162926662.png" alt="image-20240905162926662" tabindex="0" loading="lazy"><figcaption>image-20240905162926662</figcaption></figure><h2 id="格式化硬盘" tabindex="-1"><a class="header-anchor" href="#格式化硬盘"><span>格式化硬盘</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 注意：此操作将删除分区上的所有数据，请确保数据已备份。</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mkfs.xfs</span><span style="color:#98C379;"> /dev/vdb1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如果需要格式化的盘里有文件运行以下命令" tabindex="-1"><a class="header-anchor" href="#如果需要格式化的盘里有文件运行以下命令"><span>如果需要格式化的盘里有文件运行以下命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">mkfs.xfs</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> /dev/vdb1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905163520692.png" alt="image-20240905163520692" tabindex="0" loading="lazy"><figcaption>image-20240905163520692</figcaption></figure><h3 id="验证文件系统格式" tabindex="-1"><a class="header-anchor" href="#验证文件系统格式"><span>验证文件系统格式</span></a></h3><p>要再次确认 <code>/dev/vdb1</code> 的文件系统格式是否为 <code>XFS</code>，可以使用以下命令：</p><ul><li><p>使用 <code>lsblk -f</code> 检查文件系统类型：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sblk</span><span style="color:#D19A66;"> -f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>或者使用 <code>file</code> 命令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">file</span><span style="color:#D19A66;"> -s</span><span style="color:#98C379;"> /dev/vdb1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>输出应该显示 <code>XFS</code> 文件系统。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905162800175.png" alt="image-20240905162800175" tabindex="0" loading="lazy"><figcaption>image-20240905162800175</figcaption></figure><h2 id="挂载分区" tabindex="-1"><a class="header-anchor" href="#挂载分区"><span>挂载分区</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mount</span><span style="color:#98C379;"> /dev/vdb1</span><span style="color:#98C379;"> /work</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="验证挂载" tabindex="-1"><a class="header-anchor" href="#验证挂载"><span>验证挂载</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> df</span><span style="color:#D19A66;"> -h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240905164055935.png" alt="image-20240905164055935" tabindex="0" loading="lazy"><figcaption>image-20240905164055935</figcaption></figure><h3 id="配置开机自动挂载" tabindex="-1"><a class="header-anchor" href="#配置开机自动挂载"><span>配置开机自动挂载</span></a></h3><p>获取分区的 UUID：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">root@kejipingshen-zygx-8new:/work#</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> blkid</span><span style="color:#98C379;"> /dev/vdb1</span></span>
<span class="line"><span style="color:#61AFEF;">/dev/vdb1:</span><span style="color:#98C379;"> UUID=&quot;8c420242-b791-49fe-bbe3-614ee08be462&quot;</span><span style="color:#98C379;"> TYPE=&quot;xfs&quot;</span><span style="color:#98C379;"> PARTUUID=&quot;f3c842ff-01&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">root@kejipingshen-zygx-8new:/work#</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后将以下内容添加到 <code>/etc/fstab</code>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">UUID</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;8c420242-b791-49fe-bbe3-614ee08be462&quot;</span><span style="color:#61AFEF;"> /work</span><span style="color:#98C379;"> xfs</span><span style="color:#98C379;"> defaults</span><span style="color:#D19A66;"> 0</span><span style="color:#D19A66;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_1-确保-etc-fstab-中的配置正确" tabindex="-1"><a class="header-anchor" href="#_1-确保-etc-fstab-中的配置正确"><span>1.确保 <code>/etc/fstab</code> 中的配置正确：</span></a></h4><p>假设您已经在 <code>/etc/fstab</code> 中配置了如下条目：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">UUID</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</span><span style="color:#61AFEF;"> /work/data</span><span style="color:#98C379;"> xfs</span><span style="color:#98C379;"> defaults</span><span style="color:#D19A66;"> 0</span><span style="color:#D19A66;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li><p><strong>运行 <code>mount -a</code></strong>：</p><p>运行以下命令来检查并应用 <code>/etc/fstab</code> 中的配置：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mount</span><span style="color:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果 <code>/etc/fstab</code> 配置正确，系统将自动挂载尚未挂载的分区。</p></li><li><p><strong>验证挂载情况</strong>：</p><p>使用 <code>df -h</code> 或 <code>mount | grep /mnt/data</code> 来验证挂载是否成功：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> df</span><span style="color:#D19A66;"> -h</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mount</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#98C379;"> /mnt/data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h4 id="_2-手动卸载并重新挂载分区" tabindex="-1"><a class="header-anchor" href="#_2-手动卸载并重新挂载分区"><span>2. 手动卸载并重新挂载分区</span></a></h4><p>如果已经手动挂载了该分区，可以先卸载它，然后使用 <code>mount -a</code> 来验证 <code>/etc/fstab</code> 的配置。</p><p>步骤：</p><ol><li><p><strong>卸载分区</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> umount</span><span style="color:#98C379;"> /mnt/data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>使用 <code>mount -a</code> 挂载分区</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mount</span><span style="color:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>检查挂载是否成功</strong>：</p><p>使用 <code>df -h</code> 或 <code>mount</code> 命令检查挂载情况。</p></li></ol><h4 id="_3-检查-etc-fstab-语法是否正确" tabindex="-1"><a class="header-anchor" href="#_3-检查-etc-fstab-语法是否正确"><span>3. 检查 <code>/etc/fstab</code> 语法是否正确</span></a></h4><p>在使用 <code>mount -a</code> 之前，您可以先检查 <code>/etc/fstab</code> 文件的语法是否正确，避免挂载时出现问题。可以使用以下命令来验证：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mount</span><span style="color:#D19A66;"> -fav</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中：</p><ul><li><code>-f</code> 选项表示只检查但不实际挂载（dry-run）。</li><li><code>-a</code> 表示挂载 <code>/etc/fstab</code> 中的所有分区。</li><li><code>-v</code> 表示输出详细信息。</li></ul><h2 id="迁移-docker-的-overlay2-文件夹" tabindex="-1"><a class="header-anchor" href="#迁移-docker-的-overlay2-文件夹"><span>迁移 Docker 的 <code>overlay2</code> 文件夹</span></a></h2><p>要将 Docker 的 <code>overlay2</code> 文件夹迁移到另一个文件夹下，可以按照以下步骤操作。假设你想把 Docker 的数据迁移到一个新的目录，比如 <code>/new-docker-data</code>。</p><h3 id="_1-停止-docker-服务" tabindex="-1"><a class="header-anchor" href="#_1-停止-docker-服务"><span>1. 停止 Docker 服务</span></a></h3><p>首先，确保所有容器都停止运行，并停止 Docker 服务。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> systemctl</span><span style="color:#98C379;"> stop</span><span style="color:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-创建新目录" tabindex="-1"><a class="header-anchor" href="#_2-创建新目录"><span>2. 创建新目录</span></a></h3><p>在目标位置创建一个新目录，用于存放 Docker 数据。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /new-docker-data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-移动-docker-数据" tabindex="-1"><a class="header-anchor" href="#_3-移动-docker-数据"><span>3. 移动 Docker 数据</span></a></h3><p>将现有的 Docker 数据从 <code>/var/lib/docker</code> 迁移到新的目录。这里需要使用 <code>rsync</code> 或 <code>mv</code> 来移动数据。</p><p>使用 <code>rsync</code> 的好处是能够保证文件权限、属性等信息被完整迁移，推荐使用 <code>rsync</code>。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> rsync</span><span style="color:#D19A66;"> -aP</span><span style="color:#98C379;"> /var/lib/docker/</span><span style="color:#98C379;"> /new-docker-data/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-修改-docker-配置文件" tabindex="-1"><a class="header-anchor" href="#_4-修改-docker-配置文件"><span>4. 修改 Docker 配置文件</span></a></h3><p>Docker 的默认数据目录是 <code>/var/lib/docker</code>，我们需要修改 Docker 的配置文件，指向新的目录。</p><p>编辑 Docker 的配置文件 <code>/etc/docker/daemon.json</code>，如果文件不存在，你可以新建这个文件。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> vim</span><span style="color:#98C379;"> /etc/docker/daemon.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加以下内容：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;data-root&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;/new-docker-data&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存并退出编辑器。</p><h3 id="_5-重启-docker-服务" tabindex="-1"><a class="header-anchor" href="#_5-重启-docker-服务"><span>5. 重启 Docker 服务</span></a></h3><p>现在可以重新启动 Docker 服务，并检查它是否正确运行。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> systemctl</span><span style="color:#98C379;"> start</span><span style="color:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_6-验证" tabindex="-1"><a class="header-anchor" href="#_6-验证"><span>6. 验证</span></a></h3><p>使用 <code>docker info</code> 命令查看 Docker 的数据目录是否已经生效：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> info</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#98C379;"> &quot;Docker Root Dir&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你应该看到 <code>Docker Root Dir</code> 指向你指定的新目录 <code>/new-docker-data</code>。</p><p>如果一切正常，且旧的数据目录没有任何问题，你可以安全地删除旧的 <code>/var/lib/docker</code> 目录。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> rm</span><span style="color:#D19A66;"> -rf</span><span style="color:#98C379;"> /var/lib/docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按照以上步骤，你就能成功地将 Docker 的数据目录迁移到另一个文件夹下了。</p><h2 id="ubuntu-20-04-中进行磁盘分区" tabindex="-1"><a class="header-anchor" href="#ubuntu-20-04-中进行磁盘分区"><span>Ubuntu 20.04 中进行磁盘分区</span></a></h2><p>1.<strong>使用 <code>fdisk</code> 创建新分区：</strong> 输入以下命令进入 <code>fdisk</code> 界面：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">fdisk</span><span style="color:#98C379;"> /dev/vdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后执行以下步骤：</p><ul><li>输入 <code>n</code> 创建新分区。</li><li>输入 <code>p</code> 创建主分区。</li><li>选择分区号，例如 1（默认）。</li><li>按回车键以接受默认的第一个和最后一个扇区（或根据需要自定义大小）。</li><li>输入 <code>w</code> 保存并退出 <code>fdisk</code>。</li></ul><p><strong>刷新分区表：</strong> 运行以下命令确保内核更新了分区表：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>partprobe /dev/vdb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>格式化分区为 <code>xfs</code> 文件系统：</strong> 使用以下命令将新创建的分区格式化为 <code>xfs</code> 文件系统：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>mkfs.xfs /dev/vdb1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>挂载分区（可选）：</strong> 创建挂载点并将分区挂载：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>bash复制代码mkdir /mnt/vdb1</span></span>
<span class="line"><span>mount /dev/vdb1 /mnt/vdb1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,84)]))}const t=s(o,[["render",i],["__file","Ubuntu 挂盘操作.html.vue"]]),c=JSON.parse(`{"path":"/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/Ubuntu%20%E6%8C%82%E7%9B%98%E6%93%8D%E4%BD%9C.html","title":"Ubuntu 挂盘操作","lang":"zh-CN","frontmatter":{"title":"Ubuntu 挂盘操作","subtitle":"Ubuntu 挂盘操作","date":"2024-04-03T15:36:20.000Z","category":["Ubuntu 挂盘操作"],"tag":["Ubuntu 挂盘操作"],"order":4,"description":"检查硬盘，首先需要查看新硬盘能否被机器识别 image-20240905161439566image-20240905161439566 可以看见我们系统盘里有一个vdb1 的新硬盘500GB 被识别到。 找到新硬盘的设备名称 image-20240905161750214image-20240905161750214 我们可以看到新硬盘名称 /dev...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/Ubuntu%20%E6%8C%82%E7%9B%98%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"Ubuntu 挂盘操作"}],["meta",{"property":"og:description","content":"检查硬盘，首先需要查看新硬盘能否被机器识别 image-20240905161439566image-20240905161439566 可以看见我们系统盘里有一个vdb1 的新硬盘500GB 被识别到。 找到新硬盘的设备名称 image-20240905161750214image-20240905161750214 我们可以看到新硬盘名称 /dev..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905161439566.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-12T09:40:12.000Z"}],["meta",{"property":"article:tag","content":"Ubuntu 挂盘操作"}],["meta",{"property":"article:published_time","content":"2024-04-03T15:36:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-12T09:40:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ubuntu 挂盘操作\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905161439566.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905161750214.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905162926662.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905163520692.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905162800175.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240905164055935.png\\"],\\"datePublished\\":\\"2024-04-03T15:36:20.000Z\\",\\"dateModified\\":\\"2024-09-12T09:40:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"检查硬盘，首先需要查看新硬盘能否被机器识别","slug":"检查硬盘-首先需要查看新硬盘能否被机器识别","link":"#检查硬盘-首先需要查看新硬盘能否被机器识别","children":[]},{"level":2,"title":"找到新硬盘的设备名称","slug":"找到新硬盘的设备名称","link":"#找到新硬盘的设备名称","children":[]},{"level":2,"title":"创建一个挂载点","slug":"创建一个挂载点","link":"#创建一个挂载点","children":[]},{"level":2,"title":"格式化硬盘","slug":"格式化硬盘","link":"#格式化硬盘","children":[{"level":3,"title":"如果需要格式化的盘里有文件运行以下命令","slug":"如果需要格式化的盘里有文件运行以下命令","link":"#如果需要格式化的盘里有文件运行以下命令","children":[]},{"level":3,"title":"验证文件系统格式","slug":"验证文件系统格式","link":"#验证文件系统格式","children":[]}]},{"level":2,"title":"挂载分区","slug":"挂载分区","link":"#挂载分区","children":[{"level":3,"title":"验证挂载","slug":"验证挂载","link":"#验证挂载","children":[]},{"level":3,"title":"配置开机自动挂载","slug":"配置开机自动挂载","link":"#配置开机自动挂载","children":[]}]},{"level":2,"title":"迁移 Docker 的 overlay2 文件夹","slug":"迁移-docker-的-overlay2-文件夹","link":"#迁移-docker-的-overlay2-文件夹","children":[{"level":3,"title":"1. 停止 Docker 服务","slug":"_1-停止-docker-服务","link":"#_1-停止-docker-服务","children":[]},{"level":3,"title":"2. 创建新目录","slug":"_2-创建新目录","link":"#_2-创建新目录","children":[]},{"level":3,"title":"3. 移动 Docker 数据","slug":"_3-移动-docker-数据","link":"#_3-移动-docker-数据","children":[]},{"level":3,"title":"4. 修改 Docker 配置文件","slug":"_4-修改-docker-配置文件","link":"#_4-修改-docker-配置文件","children":[]},{"level":3,"title":"5. 重启 Docker 服务","slug":"_5-重启-docker-服务","link":"#_5-重启-docker-服务","children":[]},{"level":3,"title":"6. 验证","slug":"_6-验证","link":"#_6-验证","children":[]}]},{"level":2,"title":"Ubuntu 20.04 中进行磁盘分区","slug":"ubuntu-20-04-中进行磁盘分区","link":"#ubuntu-20-04-中进行磁盘分区","children":[]}],"git":{"createdTime":1725530815000,"updatedTime":1726134012000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":2}]},"readingTime":{"minutes":4.3,"words":1289},"filePathRelative":"tutorial/系统开发部署/Ubuntu 挂盘操作.md","localizedDate":"2024年4月3日","excerpt":"<h2>检查硬盘，首先需要查看新硬盘能否被机器识别</h2>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"background-color:#282c34;color:#abb2bf\\"><pre class=\\"shiki one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF\\">sudo</span><span style=\\"color:#98C379\\"> lsblk</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as comp,c as data};
