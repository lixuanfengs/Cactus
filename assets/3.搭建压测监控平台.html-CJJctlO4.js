import{_ as s,c as a,a as e,o as t}from"./app-BcTj92Yq.js";const l={};function n(h,i){return t(),a("div",null,[...i[0]||(i[0]=[e(`<p>本章介绍如何使用Docker 容器来搭建压力测试监控平台。</p><h2 id="_1-安装容器及服务" tabindex="-1"><a class="header-anchor" href="#_1-安装容器及服务"><span>1. 安装容器及服务</span></a></h2><h3 id="_1-1-安装docker容器" tabindex="-1"><a class="header-anchor" href="#_1-1-安装docker容器"><span>1.1 安装Docker容器</span></a></h3><p><strong>利用脚本进行安装</strong>：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.docker.com/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 777</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/run/docker.sock</span></span></code></pre></div><blockquote><p>关于Docker 相关内容请看 <a href="https://cactusli.net/linuxs/Docker/Docker%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95.html" target="_blank" rel="noopener noreferrer">Docker命令记录</a></p></blockquote><h3 id="_1-2-安装配置influxdb" tabindex="-1"><a class="header-anchor" href="#_1-2-安装配置influxdb"><span>1.2 安装配置InfluxDB</span></a></h3><h4 id="_1-2-1-启动influxdb" tabindex="-1"><a class="header-anchor" href="#_1-2-1-启动influxdb"><span>1.2.1 启动InfluxDB</span></a></h4><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> influxdb:latest</span></span></code></pre></div><p>启动InfluxDB的容器，并将端口 8083 和 8086 映射出来：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> influxdb</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8086:8086</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8083:8083</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sg-work/influxDB/influxdb_data:/var/lib/influxdb</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> influxdb:latest</span></span></code></pre></div><blockquote><p>-d：在后台运行容器。</p><p>--name influxdb：为容器指定一个名称。</p><p>-p 8086:8086：将主机的 8086 端口映射到容器的 8086 端口。</p><p>-v influxdb_data:/var/lib/influxdb：将数据持久化到 Docker 卷中。</p></blockquote><p>创建完成后在浏览器输入：<a href="http://192.168.1.20:8086/" target="_blank" rel="noopener noreferrer">http://192.168.1.20:8086/</a> 进入访问控制，创建用户、创建组织和桶。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128160050037.png" alt="image-20241128160050037" tabindex="0" loading="lazy"><figcaption>image-20241128160050037</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128160350616.png" alt="image-20241128160350616" tabindex="0" loading="lazy"><figcaption>image-20241128160350616</figcaption></figure><p>把密钥复制下来进行保存。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128160754857.png" alt="image-20241128160754857" tabindex="0" loading="lazy"><figcaption>image-20241128160754857</figcaption></figure><p>红框标记处就是在初始化用户时创建的桶。</p><h4 id="_1-2-2-安装-influx-cli-并创建-jmeter-数据库" tabindex="-1"><a class="header-anchor" href="#_1-2-2-安装-influx-cli-并创建-jmeter-数据库"><span>1.2.2 安装 influx-cli 并创建 jmeter 数据库</span></a></h4><p>创建相应目录，下载压缩包，解压包获取二进制运行文件 <code>flux</code>:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ../influx-cli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> $_</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># amd64</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://download.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> influxdb2-client-2.7.5-linux-amd64.tar.gz</span></span></code></pre></div><p>创建 <code>config</code> 方便操作 InfluxDB，创建 jmeter 数据库。</p><p>官方文档：<a href="https://docs.influxdata.com/influxdb/v2/reference/cli/influx/config/create/" target="_blank" rel="noopener noreferrer">https://docs.influxdata.com/influxdb/v2/reference/cli/influx/config/create/</a></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./influx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config-name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> influx-cli-config</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--host-url </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http://127.0.0.1:8086</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--org </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cactusli</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--token </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">682j0djW8fYZre1Qv6Oczp1JlXmDqjpzSNXX2NIXRLkQfzksK9F98arSB3HSbTSYdVQhF5lbi0Wnwtj8u6yi4w==</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--active</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># bucket-id桶的id 在控制面板中获取</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./influx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dbrp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --bucket-id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1496dfd1f8047672</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --db</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jmeter</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --rp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jmeter</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --default</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查询现有数据库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./influx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dbrp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据数据库ID删除数据库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./influx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dbrp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0e08848aa8d8b000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-3-配置jmeter脚本后置监听器" tabindex="-1"><a class="header-anchor" href="#_1-2-3-配置jmeter脚本后置监听器"><span>1.2.3 配置JMeter脚本后置监听器</span></a></h4><p>配置后置监听器，把 jmeter 性能测试数据写入 influxdb桶中，目前使用的 InfluxDB 2.x 版本，需要配置后端监听器支持 InfluxDB 2.x 的实现。</p><p>访问 Github 下载实现支持的 Jar, 然后放入到 <code>/jmeter-xxx/lib/ext</code> 目录下，最后重启 Jmeter，操作步骤如下。</p><p>下载地址：<a href="https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/releases/download/v2.8/jmeter-plugins-influxdb2-listener-2.8.jar" target="_blank" rel="noopener noreferrer">jmeter-influxdb2-listener-plugin</a></p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129142639405.png" alt="image-20241129142639405" tabindex="0" loading="lazy"><figcaption>image-20241129142639405</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128172431400.png" alt="image-20241128172431400" tabindex="0" loading="lazy"><figcaption>image-20241128172431400</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129152206030.png" alt="image-20241129152206030" tabindex="0" loading="lazy"><figcaption>image-20241129152206030</figcaption></figure><p>配置参数含义详细见：<a href="https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin" target="_blank" rel="noopener noreferrer">https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin</a></p><h4 id="_1-2-4-运行压测脚本验证" tabindex="-1"><a class="header-anchor" href="#_1-2-4-运行压测脚本验证"><span>1.2.4 运行压测脚本验证</span></a></h4><p>运行 Jmeter 脚本，然后再次在 influxdb 中查看数据，发现类似下面的数据说明输入导入成功：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># orgID是 通过 ./influx v1 dbrp list 命令查询出来的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --request</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POST</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  http://192.168.1.20:8086/api/v2/query?orgID=cb6ceb3bf996931e</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Authorization: Token IU5YpbBDiFOI7Oby99vdpEjRwgZpL1H2x33dmQXj29rQpYMKfMsC7LrbDaZNwZB609xekP0aGN7KTq_98Wtc0w==&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Accept: application/csv&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Content-type: application/vnd.flux&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;from(bucket:&quot;jmeter&quot;)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        |&gt; range(start: -35m)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        |&gt; limit(n: 2)&#39;</span></span></code></pre></div><blockquote><p>官方文档：<a href="https://docs.influxdata.com/influxdb/v2/query-data/execute-queries/influx-api/" target="_blank" rel="noopener noreferrer">https://docs.influxdata.com/influxdb/v2/query-data/execute-queries/influx-api/</a></p></blockquote><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129150259752.png" alt="image-20241129150259752" tabindex="0" loading="lazy"><figcaption>image-20241129150259752</figcaption></figure><p>可以查看到写入数据库中的最新数据:</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129150904294.png" alt="image-20241129150904294" tabindex="0" loading="lazy"><figcaption>image-20241129150904294</figcaption></figure><p>删除指定范围的数据：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./influx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --bucket</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jmeter</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2024-11-28T00:00:00Z</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2025-11-30T00:00:00Z</span></span></code></pre></div><h3 id="_1-3-安装配grafana" tabindex="-1"><a class="header-anchor" href="#_1-3-安装配grafana"><span>1.3 安装配Grafana</span></a></h3><p>下载Grafana镜像：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grafana/grafana</span></span></code></pre></div><p>启动Grafana容器:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grafana</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3000:3000</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grafana/grafana</span></span></code></pre></div><p>浏览器访问: <a href="http://192.168.1.20:3000/login" target="_blank" rel="noopener noreferrer">http://192.168.1.20:3000/login</a></p><p>默认账户密码：admin / admin</p><p>选择添加数据源：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128175042660.png" alt="image-20241128175042660" tabindex="0" loading="lazy"><figcaption>image-20241128175042660</figcaption></figure><p>找到并选择 influxdb :</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128175142944.png" alt="image-20241128175142944" tabindex="0" loading="lazy"><figcaption>image-20241128175142944</figcaption></figure><p>配置数据源：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128175830270.png" alt="image-20241128175830270" tabindex="0" loading="lazy"><figcaption>image-20241128175830270</figcaption></figure><p>导入模板：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128180954478.png" alt="image-20241128180954478" tabindex="0" loading="lazy"><figcaption>image-20241128180954478</figcaption></figure><p>模板导入的3种方式：</p><ul><li>直接上传模板json文件</li><li>直接输入模板id号</li><li>直接输入模板json内容</li></ul><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241128181157165.png" alt="image-20241128181157165" tabindex="0" loading="lazy"><figcaption>image-20241128181157165</figcaption></figure><p>在Grafana的官网找到我们需要的展示模板：</p><ul><li>JMeter Report InfluxDB2.0 <ul><li>dashboad-ID：17440</li></ul></li><li>JMeter Load Test (org.md.jmeter.influxdb2.visualizer) - influxdb v2.0 (Flux) <ul><li>dashboad-ID：13644</li></ul></li></ul><p>输入模板ID 13644进行 load, 选中创建的数据源进行导入。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129151320234.png" alt="image-20241129151320234" tabindex="0" loading="lazy"><figcaption>image-20241129151320234</figcaption></figure><p>导入模板成功后就会看到如下界面：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129152106248.png" alt="image-20241129152106248" tabindex="0" loading="lazy"><figcaption>image-20241129152106248</figcaption></figure><h3 id="_1-4-安装安装-node-exporter" tabindex="-1"><a class="header-anchor" href="#_1-4-安装安装-node-exporter"><span>1.4 安装安装 node_exporter</span></a></h3><p>node-exporter使用Go语言编写，它主要用来监控主机系统的各项性能参数，可收集各种主机指标的库，还提供了textfile功能，用于自定义指标。</p><h4 id="_1-4-1-二进制安装" tabindex="-1"><a class="header-anchor" href="#_1-4-1-二进制安装"><span>1.4.1 二进制安装</span></a></h4><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_exporter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_exporter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载二进制包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解压并进入目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_exporter-1.8.2.linux-amd64.tar.gz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_exporter-1.8.2.linux-amd64</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 后台运行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./node_exporter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span></code></pre></div><p>访问 ：<a href="http://192.168.1.20:9100/metrics" target="_blank" rel="noopener noreferrer">http://192.168.1.20:9100/metrics</a></p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129162121988.png" alt="image-20241129162121988" tabindex="0" loading="lazy"><figcaption>image-20241129162121988</figcaption></figure><h4 id="_1-4-2-docker安装" tabindex="-1"><a class="header-anchor" href="#_1-4-2-docker安装"><span>1.4.2 Docker安装</span></a></h4><p>官方不建议通过Docker方式部署node-exporter，因为它需要访问主机系统。 通过docker部署的方式，需要把任何非根安装点都绑定到容器中，并通过--path.rootfs参数指定。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --net=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --pid=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/:/host:ro,rslave&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prom/node-exporter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --path.rootfs=/host</span></span></code></pre></div><p>部署完成后，访问节点地址：<a href="http://ip:9100/metrics" target="_blank" rel="noopener noreferrer">http://ip:9100/metrics</a> ，可看到node-exporter获取的指标。</p><h4 id="_1-4-3-配置node-exporter" tabindex="-1"><a class="header-anchor" href="#_1-4-3-配置node-exporter"><span>1.4.3 配置node-exporter</span></a></h4><p>node-exporter提供不少配置参数，可使用 --help 进行查看。 <code>$ ./node_exporter --help</code></p><p>例如：通过--web.listen-address 改变监听的端口</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./node_exporter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --web.listen-address=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;:8080&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span></code></pre></div><p>如果需要收集主机上面运行服务的状态，可启用systemd收集器。由于systemd指标较多，可以用--collector.systemd.unit-include参数配置只收集指定的服务，减少无用数据，该参数支持正则表达式匹配。如docker和ssh服务状态，</p><p>示例：<code>./node_exporter --collector.systemd --collector.systemd.unit-include=&quot;(docker|sshd).service&quot; &amp;</code></p><p>如果只想启用需要的收集器，其他的全部禁用，可用如下格式配置</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--collector.disable-defaults</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --collector.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h3 id="_1-5-安装prometheus" tabindex="-1"><a class="header-anchor" href="#_1-5-安装prometheus"><span>1.5 安装Prometheus</span></a></h3><p>Prometheus是一款近年来非常火热的容器监控系统，它使用go语言开发，设计思路来源于Google的Borgmom(一个监控容器平台的系统）。</p><p>产品由前谷歌SRE Matt T.Proudd发起开发，并在其加入SoundCloud公司后，与另一位工程师Julius Volz合伙推出，将其开源发布。</p><p>2016年，由Google发起的原生云基金会（Cloud Native Computing Foundation）将Prometheus纳入麾下，成为该基金会继Kubernetes后第二大开源项目。</p><p>Prometheus天然具有对容器的适配性，可非常方便的满足容器的监控需求，也可用来监控传统资源。近年来随着kubernetes容器平台的火爆，Prometheus的热度也在不断上升，大有超越老牌监控系统Zabbix成为No.1的趋势，目前已在众多公司得到广泛的使用。</p><h4 id="_1-5-1-二进制安装" tabindex="-1"><a class="header-anchor" href="#_1-5-1-二进制安装"><span>1.5.1 二进制安装</span></a></h4><p>创建目录：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载安装包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  https://github.com/prometheus/prometheus/releases/download/v3.0.1/prometheus-3.0.1.linux-386.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 解压tar包并进入目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus-3.0.1.linux-386.tar.gz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus-3.0.1.linux-386</span></span></code></pre></div><p>运行--version 检查版本</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@xx:/sg-work/prometheus/prometheus-3.0.1.linux-386#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./prometheus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">prometheus,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (branch: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HEAD,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> revision:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1f56e8492c31a558ccea833027db4bd7f8b6d0e9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       root@e249152d3bff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> date:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       20241128-17:26:10</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       go1.23.3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  platform:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         linux/386</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tags:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             netgo,builtinassets,stringlabels</span></span></code></pre></div><p>编辑配置文件：</p><div class="language-yml" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">vim /sg-work/prometheus/prometheus-3.0.1.linux-386/prometheus.yml</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  scrape_interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:     </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">15s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  evaluation_interval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">15s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">alerting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  alertmanagers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">static_configs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">targets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rule_files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scrape_configs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">job_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;prometheus&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    static_configs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">targets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;localhost:9090&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre></div><p>启动Prometheus，并指定配置文件:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./prometheus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config.file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sg-work/prometheus/prometheus-3.0.1.linux-386/prometheus.yml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;  </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">prometheus.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span></code></pre></div><blockquote><p>注意：Prometheus默认只保留15天的监控数据，可通过--storage.tsdb.retention选项控制时间序列的保留时间；--storage.tsdb.path选项可用于控制时间序列数据库位置，默认数据目录位于运行Prometheus的目录中。</p></blockquote><h4 id="_1-5-2-docker安装" tabindex="-1"><a class="header-anchor" href="#_1-5-2-docker安装"><span>1.5.2 Docker安装</span></a></h4><p>docker的安装方式很简单，只需要一条命令即可</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9090:9090</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prom/prometheus</span></span></code></pre></div><p>如果要将配置文件与容器分离，可将prometheus.yml文件保存在本地目录 ，在启动时通过-v参数挂载到容器上面</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/prometheus/prometheus.yml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">global:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  scrape_interval:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     15s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  evaluation_interval:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 15s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">alerting:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  alertmanagers:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> static_configs:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> targets:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rule_files:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">scrape_configs:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> job_name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;prometheus&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    static_configs:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> targets:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;localhost:9090&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动容器：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9090:9090</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/sg-work/prometheus/prometheus-3.0.1.linux-386/prometheus.yml:/etc/prometheus/prometheus.yml</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prom/prometheus</span></span></code></pre></div><p>启动完成后，打开浏览器，访问<a href="http://192.168.1.20:9090/targets" target="_blank" rel="noopener noreferrer">http://192.168.1.20:9090/targets</a> 可看到系统界面。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129170505585.png" alt="image-20241129170505585" tabindex="0" loading="lazy"><figcaption>image-20241129170505585</figcaption></figure><h3 id="_1-6-在grafana中配置prometheus的数据源" tabindex="-1"><a class="header-anchor" href="#_1-6-在grafana中配置prometheus的数据源"><span>1.6 在Grafana中配置Prometheus的数据源</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241129170820256.png" alt="image-20241129170820256" tabindex="0" loading="lazy"><figcaption>image-20241129170820256</figcaption></figure><p>Grafana导入Linux展示模板 :</p><ul><li><p>导入Linux系统dashboard</p><ul><li><p>Node Exporter for Prometheus Dashboard based on 11074</p><ul><li>dashboard-ID: 15172</li></ul></li><li><p>K8s Node Metrics / Multi Clusters (Node Exporter, Prometheus, Grafana11, 2024, EN)</p><ul><li>dashboard-ID: 22413</li></ul></li></ul></li></ul><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241204093310917.png" alt="image-20241204093310917" tabindex="0" loading="lazy"><figcaption>image-20241204093310917</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241203172729811.png" alt="image-20241203172729811" tabindex="0" loading="lazy"><figcaption>image-20241203172729811</figcaption></figure><h2 id="_2-梯度压测-分析接口性能瓶颈" tabindex="-1"><a class="header-anchor" href="#_2-梯度压测-分析接口性能瓶颈"><span>2. 梯度压测：分析接口性能瓶颈</span></a></h2><p>分析接口性能瓶颈，主要指标有【响应时间、并发用户数、吞吐量、资源使用率】她们之间存在一定的相关性，共同感应出性能的不同方面。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20241204163244728.png" alt="image-20241204163244728" tabindex="0" loading="lazy"><figcaption>image-20241204163244728</figcaption></figure><p>在 Jmeter 中执行一次测试接口如下：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://218.249.73.244:48080/web-api/web/gateway/newsPage?userId</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pageNo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pageSize</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">6</span></span></code></pre></div><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250116093624886.png" alt="image-20250116093624886" tabindex="0" loading="lazy"><figcaption>image-20250116093624886</figcaption></figure><p>响应时间30ms，响应数据包190.23kb，请求数据包19.49kb</p><h3 id="_2-1-模拟低延时场景" tabindex="-1"><a class="header-anchor" href="#_2-1-模拟低延时场景"><span>2.1 模拟低延时场景</span></a></h3><p>用户访问接口并发逐渐增加的过程，预计接口的响应时间为30ms.</p><ul><li><p>线程梯度：5、10、15、20、25、30、35、40个线程</p></li><li><p>循环请求次数5000次</p></li><li><p>时间设置：Ramp-up period(inseconds)的值设为对应线程数</p><ul><li><p>测试总时长：约等于30ms x 5000次 x 8 = 800s = 13.3分</p><p>测试时长（秒）=单次请求时间（秒）×请求次数×Ramp-up 时间的线程倍数</p><p>0.02×5000=100秒, 8×100=800秒=13.3分钟</p></li></ul></li><li><p>配置断言：超过3s，响应状态码不为200，则为无效请求</p></li></ul><h3 id="_2-2-压测机器环境配置" tabindex="-1"><a class="header-anchor" href="#_2-2-压测机器环境配置"><span>2.2 压测机器环境配置</span></a></h3><ul><li>应用服务器配置：8C18G <ul><li>外网-网络带宽100 Mbps （峰值）</li><li>内网-网络带宽基础1.5/最高10Gbit/s</li></ul></li><li>集群规模：单节点</li><li>数据库服务器配置：8C16G</li></ul><table><thead><tr><th>单位</th><th>全称</th><th>换算关系</th></tr></thead><tbody><tr><td><strong>Mbps</strong></td><td>Megabit per second</td><td>网络速度的单位</td></tr><tr><td><strong>MB/s</strong></td><td>Megabyte per second</td><td>数据传输的单位</td></tr><tr><td><strong>1 byte</strong></td><td>1 字节</td><td>等于 8 bits</td></tr><tr><td><strong>1 bit</strong></td><td>1 位</td><td>等于 0.125 bytes</td></tr><tr><td><strong>1 megabit</strong></td><td>1 兆位</td><td>等于 1,000,000 bits</td></tr><tr><td><strong>1 megabyte</strong></td><td>1 兆字节</td><td>等于 1,000,000 bytes</td></tr><tr><td><strong>1 megabit</strong></td><td>转换为 megabytes</td><td>等于 0.125 megabytes</td></tr><tr><td><strong>1 Mbps</strong></td><td>转换为 MB/s</td><td>等于 0.125 MB/s</td></tr></tbody></table><blockquote><p>结论：</p><p>1 Gbit/s = 1 Gbps = 125 MB/s</p><p>1 Mbps = 0.125 MB/s</p></blockquote><h3 id="_2-3-配置监听器" tabindex="-1"><a class="header-anchor" href="#_2-3-配置监听器"><span>2.3 配置监听器</span></a></h3><p><strong>聚合报告</strong></p><ul><li>添加聚合报告，汇总统计结果。</li></ul><p><strong>查看结果树</strong></p><ul><li>添加“查看结果树”监听器，便于查看压测结果。</li></ul><p><strong>活动线程数</strong></p><ul><li>显示压力机中当前活动的线程数。</li></ul><p><strong>TPS统计分析</strong></p><ul><li>每秒事务数（Transactions Per Second，TPS）统计分析。</li></ul><p><strong>RT统计分析</strong></p><ul><li>响应时间（Response Time，RT）的统计分析。</li></ul><p><strong>配置监听器</strong></p><ul><li>将压测信息汇总到 InfluxDB，并在 Grafana 中可视化展示。</li></ul><p><strong>压测监控平台</strong>：</p><ul><li><strong>JMeter Dashboard</strong>：全面监控压测过程中的各项指标。</li><li><strong>应用服务器监控</strong>：内存、网络、磁盘、系统负载情况等性能指标。</li><li><strong>MySQL服务器监控</strong>：内存、网络、磁盘、系统负载情况等性能指标。</li></ul><h3 id="_2-4-性能瓶颈剖析" tabindex="-1"><a class="header-anchor" href="#_2-4-性能瓶颈剖析"><span>2.4 性能瓶颈剖析</span></a></h3><h4 id="_2-4-1-梯度压测-测出瓶颈" tabindex="-1"><a class="header-anchor" href="#_2-4-1-梯度压测-测出瓶颈"><span>2.4.1 梯度压测，测出瓶颈</span></a></h4><p>通过逐步提升压力，测试性能瓶颈：</p><table><thead><tr><th><strong>线程数</strong></th><th><strong>循环次数</strong></th><th><strong>样本总数</strong></th></tr></thead><tbody><tr><td>5</td><td>5000</td><td>2.5 万个样本</td></tr><tr><td>10</td><td>5000</td><td>5 万个样本</td></tr><tr><td>15</td><td>5000</td><td>7.5 万个样本</td></tr><tr><td>20</td><td>5000</td><td>10 万个样本</td></tr><tr><td>25</td><td>5000</td><td>12.5 万个样本</td></tr><tr><td>30</td><td>5000</td><td>15 万个样本</td></tr><tr><td>35</td><td>5000</td><td>17.5 万个样本</td></tr><tr><td>40</td><td>5000</td><td>20 万个样本</td></tr></tbody></table><p>梯度压测后的聚合报告</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171117493.png" alt="image-20250110171117493" tabindex="0" loading="lazy"><figcaption>image-20250110171117493</figcaption></figure><p>Active Threads</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171325749.png" alt="image-20250110171325749" tabindex="0" loading="lazy"><figcaption>image-20250110171325749</figcaption></figure><p>RT</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171403407.png" alt="image-20250110171403407" tabindex="0" loading="lazy"><figcaption>image-20250110171403407</figcaption></figure><p>TPS</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171505422.png" alt="image-20250110171505422" tabindex="0" loading="lazy"><figcaption>image-20250110171505422</figcaption></figure><p>压测监控平台与JMeter压测结果一致</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171647474.png" alt="image-20250110171647474" tabindex="0" loading="lazy"><figcaption>image-20250110171647474</figcaption></figure><p>压测中服务器监控指标</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171815666.png" alt="image-20250110171815666" tabindex="0" loading="lazy"><figcaption>image-20250110171815666</figcaption></figure><h4 id="_2-4-2-问题1-网络到达瓶颈" tabindex="-1"><a class="header-anchor" href="#_2-4-2-问题1-网络到达瓶颈"><span>2.4.2 问题1：网络到达瓶颈</span></a></h4><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110171854643.png" alt="image-20250110171854643" tabindex="0" loading="lazy"><figcaption>image-20250110171854643</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250110172016136.png" alt="image-20250110172016136" tabindex="0" loading="lazy"><figcaption>image-20250110172016136</figcaption></figure><p>**结论：**随着压力的上升，TPS不再增加，接口响应时间逐渐在增加，偶尔出现异常，瓶颈凸显。系统的 负载不高。CPU、内存正常，说明系统这部分资源利用率不高。带宽带宽显然已经触顶了。</p><p>优化之后的解决方案：</p><ul><li><p>方案01-降低接口响应数据包大小</p><ul><li><p>调整接口请求和返回的数据量大小，响应数据包73kb，请求数据包42kb</p><div class="language-http" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://218.249.73.244:48080/web-api/web/gateway/newsPage?userId=&amp;pageNo=1&amp;pageSize=1&amp;status=6</span></span></code></pre></div></li></ul></li><li><p>方案02-提升带宽【或者在内网压测】</p><ul><li><p>25Mbps --&gt; 100Mbps</p></li><li><p>云服务器内网：这里在Linux中执行JMeter压测脚本</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmeter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 首页.jmx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 首页.jtl</span></span></code></pre></div></li></ul></li></ul><p>优化之后效果，基于方案01-降低接口响应数据包大小，压测结果如下图所示：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250113111531702.png" alt="image-20250113111531702" tabindex="0" loading="lazy"><figcaption>image-20250113111531702</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250113141414224.png" alt="image-20250113141414224" tabindex="0" loading="lazy"><figcaption>image-20250113141414224</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250113141901843.png" alt="image-20250113141901843" tabindex="0" loading="lazy"><figcaption>image-20250113141901843</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250113141949130.png" alt="image-20250113141949130" tabindex="0" loading="lazy"><figcaption>image-20250113141949130</figcaption></figure><p><strong>方案02-提升带宽【或者在内网压测】</strong></p><blockquote><p>提升自己测试机器的网络宽带，或在机器内网进行压测！</p></blockquote><p><strong>问题：可不可以基于RT与TPS算出服务端并发线程数？</strong></p><p>服务端线程数计算公式：TPS/ (1000ms/ RT均值)</p><ul><li>RT=21ms，TPS=800，服务端线程数：= 800/ (1000ms/ RT均值) = 17</li><li>RT=500ms，TPS=800，服务端线程数：= 800/ (1000ms/ RT均值) = 400</li><li>RT=1000ms，TPS=800，服务端线程数：= 800/ (1000ms/ RT均值) = 800</li></ul><p>结论：</p><ul><li>在低延时场景下，服务瓶颈主要在服务器带宽。</li><li>TPS数量等于服务端线程数 乘以 (1000ms/ RT均值)</li><li>RT=21ms，TPS=800，服务端线程数：= 800/ (1000ms/ RT均值) = 17</li></ul><h4 id="_2-4-3-问题2-接口的响应时间是否正常-是不是所有的接口响应都可以这么快" tabindex="-1"><a class="header-anchor" href="#_2-4-3-问题2-接口的响应时间是否正常-是不是所有的接口响应都可以这么快"><span>2.4.3 问题2：接口的响应时间是否正常？是不是所有的接口响应都可以这么快？</span></a></h4><p>情况02-模拟高延时场景，用户访问接口并发逐渐增加的过程。接口的响应时间为500ms;</p><ul><li><p>线程梯度：100、200、300、400、500、600、700、800个线程;</p></li><li><p>循环请求次数200次</p></li><li><p>时间设置：Ramp-up period(inseconds)的值设为对应线程数的1/10；</p><ul><li>测试总时长：约等于500ms x 200次 x 8 = 800s = 13分</li></ul></li><li><p>配置断言：超过3s，响应状态码不为200，则为无效请求</p></li></ul><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">GetMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/newsPage&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Operation</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">summary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;前端门户获得新闻分页&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CommonResult</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">PageResult</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">NewsPageWebReqVO</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getNewsPage</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Valid</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> NewsSelectWebReqVO</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> pageReqVO) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //查询已发布的新闻</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        pageReqVO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAuditStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        PageResult</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">NewsDO</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> pageResult </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> webService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">selectWebNewsPage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pageReqVO);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            //休眠500ms</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MILLISECONDS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> success</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BeanUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(pageResult, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">NewsPageWebReqVO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span></code></pre></div><p><strong>响应慢接口：500ms+，响应数据包73kb，请求数据包42kb</strong></p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://218.249.73.244:48080/web-api/web/gateway/newsPage?userId</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pageNo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pageSize</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">6</span></span></code></pre></div><p><strong>测试结果：RT、TPS、网络IO、CPU、内存、磁盘IO</strong></p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250121165615127.png" alt="image-20250121165615127" tabindex="0" loading="lazy"><figcaption>image-20250121165615127</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250121171137564.png" alt="image-20250121171137564" tabindex="0" loading="lazy"><figcaption>image-20250121171137564</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250121170834675.png" alt="image-20250121170834675" tabindex="0" loading="lazy"><figcaption>image-20250121170834675</figcaption></figure><p><strong>最后结论</strong></p><ul><li>在高延时场景下，服务瓶颈主要在容器最大并发线程数。</li><li>RT=500ms，TPS=800，服务端线程数：= 800/ (1000ms/ RT) = 400</li><li>观察服务容器最大线程数，发现处理能力瓶颈卡在容器端</li></ul><h4 id="_2-4-4-问题3-tps在上升到一定的值之后-异常率可能会变的比较高" tabindex="-1"><a class="header-anchor" href="#_2-4-4-问题3-tps在上升到一定的值之后-异常率可能会变的比较高"><span>2.4.4 问题3：TPS在上升到一定的值之后，异常率可能会变的比较高</span></a></h4><ul><li>可以理解为与IO模型有关系，因为当前使用的是阻塞式IO模型。</li><li>解决方案，刚换成非阻塞式IO模型。</li></ul>`,191)])])}const k=s(l,[["render",n]]),g=JSON.parse(`{"path":"/tutorials/projects/performance/3.%E6%90%AD%E5%BB%BA%E5%8E%8B%E6%B5%8B%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0.html","title":"搭建压测监控平台","lang":"zh-CN","frontmatter":{"title":"搭建压测监控平台","subtitle":"搭建压测监控平台","headerDepth":3,"date":"2024-11-26T11:26:20.000Z","category":["项目性能优化"],"tag":["项目性能优化"],"order":3,"description":"本章介绍如何使用Docker 容器来搭建压力测试监控平台。 1. 安装容器及服务 1.1 安装Docker容器 利用脚本进行安装： 关于Docker 相关内容请看 Docker命令记录 1.2 安装配置InfluxDB 1.2.1 启动InfluxDB 启动InfluxDB的容器，并将端口 8083 和 8086 映射出来： -d：在后台运行容器。 -...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorials/projects/performance/3.%E6%90%AD%E5%BB%BA%E5%8E%8B%E6%B5%8B%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"搭建压测监控平台"}],["meta",{"property":"og:description","content":"本章介绍如何使用Docker 容器来搭建压力测试监控平台。 1. 安装容器及服务 1.1 安装Docker容器 利用脚本进行安装： 关于Docker 相关内容请看 Docker命令记录 1.2 安装配置InfluxDB 1.2.1 启动InfluxDB 启动InfluxDB的容器，并将端口 8083 和 8086 映射出来： -d：在后台运行容器。 -..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://beauties.eu.org/blogimg/main/img1/image-20241128160050037.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-18T09:49:26.000Z"}],["meta",{"property":"article:tag","content":"项目性能优化"}],["meta",{"property":"article:published_time","content":"2024-11-26T11:26:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-18T09:49:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"搭建压测监控平台\\",\\"image\\":[\\"https://beauties.eu.org/blogimg/main/img1/image-20241128160050037.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128160350616.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128160754857.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129142639405.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128172431400.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129152206030.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129150259752.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129150904294.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128175042660.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128175142944.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128175830270.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128180954478.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241128181157165.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129151320234.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129152106248.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129162121988.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129170505585.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241129170820256.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241204093310917.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241203172729811.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20241204163244728.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250116093624886.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171117493.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171325749.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171403407.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171505422.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171647474.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171815666.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110171854643.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250110172016136.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250113111531702.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250113141414224.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250113141901843.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250113141949130.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250121165615127.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250121171137564.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250121170834675.png\\"],\\"datePublished\\":\\"2024-11-26T11:26:20.000Z\\",\\"dateModified\\":\\"2025-08-18T09:49:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"1. 安装容器及服务","slug":"_1-安装容器及服务","link":"#_1-安装容器及服务","children":[{"level":3,"title":"1.1 安装Docker容器","slug":"_1-1-安装docker容器","link":"#_1-1-安装docker容器","children":[]},{"level":3,"title":"1.2 安装配置InfluxDB","slug":"_1-2-安装配置influxdb","link":"#_1-2-安装配置influxdb","children":[]},{"level":3,"title":"1.3 安装配Grafana","slug":"_1-3-安装配grafana","link":"#_1-3-安装配grafana","children":[]},{"level":3,"title":"1.4 安装安装 node_exporter","slug":"_1-4-安装安装-node-exporter","link":"#_1-4-安装安装-node-exporter","children":[]},{"level":3,"title":"1.5 安装Prometheus","slug":"_1-5-安装prometheus","link":"#_1-5-安装prometheus","children":[]},{"level":3,"title":"1.6 在Grafana中配置Prometheus的数据源","slug":"_1-6-在grafana中配置prometheus的数据源","link":"#_1-6-在grafana中配置prometheus的数据源","children":[]}]},{"level":2,"title":"2. 梯度压测：分析接口性能瓶颈","slug":"_2-梯度压测-分析接口性能瓶颈","link":"#_2-梯度压测-分析接口性能瓶颈","children":[{"level":3,"title":"2.1 模拟低延时场景","slug":"_2-1-模拟低延时场景","link":"#_2-1-模拟低延时场景","children":[]},{"level":3,"title":"2.2 压测机器环境配置","slug":"_2-2-压测机器环境配置","link":"#_2-2-压测机器环境配置","children":[]},{"level":3,"title":"2.3 配置监听器","slug":"_2-3-配置监听器","link":"#_2-3-配置监听器","children":[]},{"level":3,"title":"2.4 性能瓶颈剖析","slug":"_2-4-性能瓶颈剖析","link":"#_2-4-性能瓶颈剖析","children":[]}]}],"git":{"createdTime":1755510566000,"updatedTime":1755510566000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":1,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":11.79,"words":3536},"filePathRelative":"tutorials/projects/performance/3.搭建压测监控平台.md","localizedDate":"2024年11月26日","excerpt":"<p>本章介绍如何使用Docker 容器来搭建压力测试监控平台。</p>\\n<h2>1. 安装容器及服务</h2>\\n<h3>1.1 安装Docker容器</h3>\\n<p><strong>利用脚本进行安装</strong>：</p>\\n<div class=\\"language-shell\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">curl</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -sSL</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> https://get.docker.com/</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> | </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sh</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sudo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> chmod</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 777</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> /var/run/docker.sock</span></span></code></pre>\\n</div>","autoDesc":true}`);export{k as comp,g as data};
