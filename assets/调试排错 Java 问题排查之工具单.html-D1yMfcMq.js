import{_ as i,c as a,a as h,o as l}from"./app-izOKEaCf.js";const t={};function n(e,s){return l(),a("div",null,[...s[0]||(s[0]=[h(`<blockquote><p>Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位。</p></blockquote><ul><li>调试排错 Java 问题排查之工具单 <ul><li>Java 调试入门工具 <ul><li><a href="#jps">jps</a></li><li><a href="#jstack">jstack</a></li><li><a href="#jinfo">jinfo</a></li><li><a href="#jmap">jmap</a></li><li><a href="#jstat">jstat</a></li><li><a href="#jdb">jdb</a></li><li><a href="#chlsdb">CHLSDB</a></li></ul></li><li>Java 调试进阶工具 <ul><li><a href="#btrace">btrace</a></li><li><a href="#greys">Greys</a></li><li><a href="#arthas">Arthas</a></li><li><a href="#javosize">javOSize</a></li><li><a href="#jprofiler">JProfiler</a></li></ul></li><li>其它工具 <ul><li><a href="#dmesg">dmesg</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0">参考文章</a></li></ul></li></ul><h2 id="java-调试入门工具" tabindex="-1"><a class="header-anchor" href="#java-调试入门工具"><span><a href="#java-%E8%B0%83%E8%AF%95%E5%85%A5%E9%97%A8%E5%B7%A5%E5%85%B7">#</a> Java 调试入门工具</span></a></h2><h3 id="jps" tabindex="-1"><a class="header-anchor" href="#jps"><span><a href="#jps">#</a> jps</span></a></h3><blockquote><p>jps是jdk提供的一个查看当前java进程的小工具， 可以看做是JavaVirtual Machine Process Status Tool的缩写。</p></blockquote><p>jps常用命令</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 显示进程的ID 和 类的名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –l</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 输出输出完全的包名，应用主类名，jar的完全路径名 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –v</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 输出jvm参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –q</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 显示java进程号</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # main 方法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxx.xxx.xx.xx</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 远程查看</span></span></code></pre></div><p>jps参数</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-q：仅输出VM标识符，不包括classname,jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name,arguments</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-m：输出main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> method的参数</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-l：输出完全的包名，应用主类名，jar的完全路径名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-v：输出jvm参数</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-V：输出通过flag文件传递到JVM中的参数(.hotspotrc文件或-XX:Flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=所指定的文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-Joption：传递参数到vm,例如:-J-Xms512m</span></span></code></pre></div><p>jps原理</p><blockquote><p>java程序在启动以后，会在java.io.tmpdir指定的目录下，就是临时文件夹里，生成一个类似于hsperfdata_User的文件夹，这个文件夹里（在Linux中为/tmp/hsperfdata_{userName}/），有几个文件，名字就是java进程的pid，因此列出当前运行的java进程，只是把这个目录里的文件名列一下而已。 至于系统的参数什么，就可以解析这几个文件获得。</p></blockquote><p>更多请参考 <a href="https://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jps.html" target="_blank" rel="noopener noreferrer">jps - Java Virtual Machine Process Status Tool在新窗口打开</a></p><h3 id="jstack" tabindex="-1"><a class="header-anchor" href="#jstack"><span><a href="#jstack">#</a> jstack</span></a></h3><blockquote><p>jstack是jdk自带的线程堆栈分析工具，使用该命令可以查看或导出 Java 应用程序中线程堆栈信息。</p></blockquote><p>jstack常用命令:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 基本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># java和native c/c++框架的所有栈信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 额外的锁信息列表，查看是否死锁</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span></code></pre></div><p>jstack参数：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 长列表.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 打印关于锁的附加信息,例如属于java.util.concurrent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ownable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> synchronizers列表.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当’jstack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-l] pid’没有相应的时候强制打印栈信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 打印java和native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> c/c++框架的所有栈信息.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 打印帮助信息</span></span></code></pre></div><p>更多请参考: <a href="https://www.jianshu.com/p/025cb069cb69" target="_blank" rel="noopener noreferrer">jvm 性能调优工具之 jstack在新窗口打开</a></p><h3 id="jinfo" tabindex="-1"><a class="header-anchor" href="#jinfo"><span><a href="#jinfo">#</a> jinfo</span></a></h3><blockquote><p>jinfo 是 JDK 自带的命令，可以用来查看正在运行的 java 应用程序的扩展参数，包括Java System属性和JVM命令行参数；也可以动态的修改正在运行的 JVM 一些参数。当系统崩溃时，jinfo可以从core文件里面知道崩溃的Java应用程序的配置信息</p></blockquote><p>jinfo常用命令:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出当前 jvm 进程的全部参数和系统属性</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出所有的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -flags</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看指定的 jvm 参数的值</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -flag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PrintGC</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开启/关闭指定的JVM参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -flag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +PrintGC</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置flag的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -flag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出当前 jvm 进行的全部的系统属性</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sysprops</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jinfo参数：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> option</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 输出全部的参数和系统属性</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-flag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 输出对应名称的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [+|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-]name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 开启或者关闭对应名称的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-flag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 设定对应名称的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-flags</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 输出全部的参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-sysprops</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 输出系统属性</span></span></code></pre></div><p>更多请参考：<a href="https://www.jianshu.com/p/8d8aef212b25" target="_blank" rel="noopener noreferrer">jvm 性能调优工具之 jinfo在新窗口打开</a></p><h3 id="jmap" tabindex="-1"><a class="header-anchor" href="#jmap"><span><a href="#jmap">#</a> jmap</span></a></h3><blockquote><p>命令jmap是一个多功能的命令。它可以生成 java 程序的 dump 文件， 也可以查看堆内对象示例的统计信息、查看 ClassLoader 的信息以及 finalizer 队列。</p></blockquote><p>两个用途</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看堆的情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -heap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dump</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dump:live,format=b,file=/tmp/heap2.bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dump:format=b,file=/tmp/heap3.bin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看堆的占用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -histo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">head</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -10</span></span></code></pre></div><p>jmap参数</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> option：</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看进程的内存映像信息,类似</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Solaris</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pmap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 命令。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">heap：</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 显示Java堆详细信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">histo[:live]：</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 显示堆中对象的统计信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">clstats：打印类加载器信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">finalizerinfo：</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 显示在F-Queue队列等待Finalizer线程执行finalizer方法的对象</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dump:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;dump-options&gt;：生成堆转储快照</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">F：</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当-dump没有响应时，使用-dump或者-histo参数.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 在这个模式下,live子参数无效.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">help：打印帮助信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">J</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;flag&gt;：指定传递给运行jmap的JVM的参数</span></span></code></pre></div><p>更多请参考：<a href="https://www.jianshu.com/p/a4ad53179df3" target="_blank" rel="noopener noreferrer">jvm 性能调优工具之 jmap在新窗口打开</a> 和 <a href="https://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jmap.html" target="_blank" rel="noopener noreferrer">jmap - Memory Map在新窗口打开</a></p><h3 id="jstat" tabindex="-1"><a class="header-anchor" href="#jstat"><span><a href="#jstat">#</a> jstat</span></a></h3><p>jstat参数众多，但是使用一个就够了</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -gcutil</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2815</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span></span></code></pre></div><h3 id="jdb" tabindex="-1"><a class="header-anchor" href="#jdb"><span><a href="#jdb">#</a> jdb</span></a></h3><p>jdb可以用来预发debug,假设你预发的java_home是/opt/java/，远程调试端口是8000.那么</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jdb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -attach</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8000</span></span></code></pre></div><p>出现以上代表jdb启动成功。后续可以进行设置断点进行调试。</p><p>具体参数可见oracle官方说明<a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/jdb.html" target="_blank" rel="noopener noreferrer">jdb - The Java Debugger在新窗口打开</a></p><h3 id="chlsdb" tabindex="-1"><a class="header-anchor" href="#chlsdb"><span><a href="#chlsdb">#</a> CHLSDB</span></a></h3><p>CHLSDB感觉很多情况下可以看到更好玩的东西，不详细叙述了。 查询资料听说jstack和jmap等工具就是基于它的。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -classpath</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/taobao/java/lib/sa-jdi.jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sun.jvm.hotspot.CLHSDB</span></span></code></pre></div><p>更详细的可见R大此贴 <a href="http://rednaxelafx.iteye.com/blog/1847971" target="_blank" rel="noopener noreferrer">http://rednaxelafx.iteye.com/blog/1847971</a></p><h2 id="java-调试进阶工具" tabindex="-1"><a class="header-anchor" href="#java-调试进阶工具"><span><a href="#java-%E8%B0%83%E8%AF%95%E8%BF%9B%E9%98%B6%E5%B7%A5%E5%85%B7">#</a> Java 调试进阶工具</span></a></h2><h3 id="btrace" tabindex="-1"><a class="header-anchor" href="#btrace"><span><a href="#btrace">#</a> btrace</span></a></h3><p>首当其冲的要说的是btrace。真是生产环境&amp;预发的排查问题大杀器。 简介什么的就不说了。直接上代码干</p><ul><li>查看当前谁调用了ArrayList的add方法，同时只打印当前ArrayList的size大于500的线程调用栈</li></ul><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">OnMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;java.util.ArrayList&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;add&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Location</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/./&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/./&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ProbeClassName</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> probeClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ProbeMethodName</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> probeMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">TargetInstance</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">TargetMethodOrField</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> method) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getInt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.util.ArrayList&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> instance) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 479</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;check who ArrayList.add method:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> probeClass </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;#&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> probeMethod  </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, method:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> method </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, size:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getInt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">field</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java.util.ArrayList&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> instance))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        jstack</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;===========================&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre></div><ul><li>监控当前服务方法被调用时返回的值以及请求的参数</li></ul><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">OnMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;com.taobao.sellerhome.transfer.biz.impl.C2CApplyerServiceImpl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;nav&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Location</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RETURN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> mt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> relation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> redirectUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Return</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> AnyType</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> result) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;parameter# userId:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> userId </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, current:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> current </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, relation:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> relation </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, check:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> check </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, redirectUrl:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> redirectUrl </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;, result:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> result)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre></div><p>btrace 具体可以参考这里：<a href="https://github.com/btraceio/btrace" target="_blank" rel="noopener noreferrer">https://github.com/btraceio/btrace</a></p><p>注意:</p><ul><li>经过观察，1.3.9的release输出不稳定，要多触发几次才能看到正确的结果</li><li>正则表达式匹配trace类时范围一定要控制，否则极有可能出现跑满CPU导致应用卡死的情况</li><li>由于是字节码注入的原理，想要应用恢复到正常情况，需要重启应用。</li></ul><h3 id="greys" tabindex="-1"><a class="header-anchor" href="#greys"><span><a href="#greys">#</a> Greys</span></a></h3><p>Greys是@杜琨的大作吧。说几个挺棒的功能(部分功能和btrace重合):</p><ul><li><code>sc -df xxx</code>: 输出当前类的详情,包括源码位置和classloader结构</li><li><code>trace class method</code>: 打印出当前方法调用的耗时情况，细分到每个方法, 对排查方法性能时很有帮助。</li></ul><h3 id="arthas" tabindex="-1"><a class="header-anchor" href="#arthas"><span><a href="#arthas">#</a> Arthas</span></a></h3><blockquote><p>Arthas是基于Greys。</p></blockquote><p>具体请参考：<a href="">调试排错 - Java应用在线调试Arthas</a></p><h3 id="javosize" tabindex="-1"><a class="header-anchor" href="#javosize"><span><a href="#javosize">#</a> javOSize</span></a></h3><p>就说一个功能:</p><ul><li><code>classes</code>：通过修改了字节码，改变了类的内容，即时生效。 所以可以做到快速的在某个地方打个日志看看输出，缺点是对代码的侵入性太大。但是如果自己知道自己在干嘛，的确是不错的玩意儿。</li></ul><p>其他功能Greys和btrace都能很轻易做的到，不说了。</p><p>更多请参考：<a href="http://www.javosize.com/" target="_blank" rel="noopener noreferrer">官网在新窗口打开</a></p><h3 id="jprofiler" tabindex="-1"><a class="header-anchor" href="#jprofiler"><span><a href="#jprofiler">#</a> JProfiler</span></a></h3><p>之前判断许多问题要通过JProfiler，但是现在Greys和btrace基本都能搞定了。再加上出问题的基本上都是生产环境(网络隔离)，所以基本不怎么使用了，但是还是要标记一下。</p><p>更多请参考：<a href="https://www.ej-technologies.com/products/jprofiler/overview.html" target="_blank" rel="noopener noreferrer">官网在新窗口打开</a></p><h2 id="其它工具" tabindex="-1"><a class="header-anchor" href="#其它工具"><span><a href="#%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7">#</a> 其它工具</span></a></h2><h3 id="dmesg" tabindex="-1"><a class="header-anchor" href="#dmesg"><span><a href="#dmesg">#</a> dmesg</span></a></h3><p>如果发现自己的java进程悄无声息的消失了，几乎没有留下任何线索，那么dmesg一发，很有可能有你想要的。</p><p>sudo dmesg|grep -i kill|less 去找关键字oom_killer。找到的结果类似如下:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[6710782.021013] java invoked oom-killer: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gfp_mask</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">0xd0,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> order</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">0,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> oom_adj</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">0,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> oom_scoe_adj</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[6710782.070639] [</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ffffffff81118898</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] ? oom_kill_process+0x68/0x140 </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[6710782.257588] Task in /LXC011175068174 killed as a result of limit of /LXC011175068174 </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[6710784.698347] Memory cgroup out of memory: Kill process 215701 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) score 854 or sacrifice child </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[6710784.707978] Killed process 215701, UID 679, (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) total-vm:11017300kB, anon-rss:7152432kB, file-rss:1232kB</span></span></code></pre></div><p>以上表明，对应的java进程被系统的OOM Killer给干掉了，得分为854. 解释一下OOM killer（Out-Of-Memory killer），该机制会监控机器的内存资源消耗。当机器内存耗尽前，该机制会扫描所有的进程（按照一定规则计算，内存占用，时间等），挑选出得分最高的进程，然后杀死，从而保护机器。</p><p>dmesg日志时间转换公式: log实际时间=格林威治1970-01-01+(当前时间秒数-系统启动至今的秒数+dmesg打印的log时间)秒数：</p><p>date -d &quot;1970-01-01 UTC <code>echo &quot;$(date +%s)-$(cat /proc/uptime|cut -f 1 -d&#39; &#39;)+12288812.926194&quot;|bc </code> seconds&quot; 剩下的，就是看看为什么内存这么大，触发了OOM-Killer了。</p>`,77)])])}const p=i(t,[["render",n]]),r=JSON.parse(`{"path":"/backend/java/JVM/%E8%B0%83%E8%AF%95%E6%8E%92%E9%94%99%20Java%20%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E4%B9%8B%E5%B7%A5%E5%85%B7%E5%8D%95.html","title":"调试排错 Java 问题排查之工具单","lang":"zh-CN","frontmatter":{"title":"调试排错 Java 问题排查之工具单","subtitle":"Java，Java开发，Java 体系","date":"2024-03-17T17:08:41.000Z","category":["Java"],"tag":["Java","JVM"],"order":17,"description":"Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位。 调试排错 Java 问题排查之工具单 Java 调试入门工具 jps jstack jinfo jmap jstat jdb CHLSDB Java 调试进阶工具 btrace Greys Arthas javOSize JProfiler 其它工具 dmesg ...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/backend/java/JVM/%E8%B0%83%E8%AF%95%E6%8E%92%E9%94%99%20Java%20%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E4%B9%8B%E5%B7%A5%E5%85%B7%E5%8D%95.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"调试排错 Java 问题排查之工具单"}],["meta",{"property":"og:description","content":"Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位。 调试排错 Java 问题排查之工具单 Java 调试入门工具 jps jstack jinfo jmap jstat jdb CHLSDB Java 调试进阶工具 btrace Greys Arthas javOSize JProfiler 其它工具 dmesg ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-18T09:49:26.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2024-03-17T17:08:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-18T09:49:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"调试排错 Java 问题排查之工具单\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-17T17:08:41.000Z\\",\\"dateModified\\":\\"2025-08-18T09:49:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"# Java 调试入门工具","slug":"java-调试入门工具","link":"#java-调试入门工具","children":[{"level":3,"title":"# jps","slug":"jps","link":"#jps","children":[]},{"level":3,"title":"# jstack","slug":"jstack","link":"#jstack","children":[]},{"level":3,"title":"# jinfo","slug":"jinfo","link":"#jinfo","children":[]},{"level":3,"title":"# jmap","slug":"jmap","link":"#jmap","children":[]},{"level":3,"title":"# jstat","slug":"jstat","link":"#jstat","children":[]},{"level":3,"title":"# jdb","slug":"jdb","link":"#jdb","children":[]},{"level":3,"title":"# CHLSDB","slug":"chlsdb","link":"#chlsdb","children":[]}]},{"level":2,"title":"# Java 调试进阶工具","slug":"java-调试进阶工具","link":"#java-调试进阶工具","children":[{"level":3,"title":"# btrace","slug":"btrace","link":"#btrace","children":[]},{"level":3,"title":"# Greys","slug":"greys","link":"#greys","children":[]},{"level":3,"title":"# Arthas","slug":"arthas","link":"#arthas","children":[]},{"level":3,"title":"# javOSize","slug":"javosize","link":"#javosize","children":[]},{"level":3,"title":"# JProfiler","slug":"jprofiler","link":"#jprofiler","children":[]}]},{"level":2,"title":"# 其它工具","slug":"其它工具","link":"#其它工具","children":[{"level":3,"title":"# dmesg","slug":"dmesg","link":"#dmesg","children":[]}]}],"git":{"createdTime":1755510566000,"updatedTime":1755510566000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":1,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":7.7,"words":2310},"filePathRelative":"backend/java/JVM/调试排错 Java 问题排查之工具单.md","localizedDate":"2024年3月17日","excerpt":"<blockquote>\\n<p>Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位。</p>\\n</blockquote>\\n<ul>\\n<li>调试排错 Java 问题排查之工具单\\n<ul>\\n<li>Java 调试入门工具\\n<ul>\\n<li><a href=\\"#jps\\">jps</a></li>\\n<li><a href=\\"#jstack\\">jstack</a></li>\\n<li><a href=\\"#jinfo\\">jinfo</a></li>\\n<li><a href=\\"#jmap\\">jmap</a></li>\\n<li><a href=\\"#jstat\\">jstat</a></li>\\n<li><a href=\\"#jdb\\">jdb</a></li>\\n<li><a href=\\"#chlsdb\\">CHLSDB</a></li>\\n</ul>\\n</li>\\n<li>Java 调试进阶工具\\n<ul>\\n<li><a href=\\"#btrace\\">btrace</a></li>\\n<li><a href=\\"#greys\\">Greys</a></li>\\n<li><a href=\\"#arthas\\">Arthas</a></li>\\n<li><a href=\\"#javosize\\">javOSize</a></li>\\n<li><a href=\\"#jprofiler\\">JProfiler</a></li>\\n</ul>\\n</li>\\n<li>其它工具\\n<ul>\\n<li><a href=\\"#dmesg\\">dmesg</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\\">参考文章</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{p as comp,r as data};
