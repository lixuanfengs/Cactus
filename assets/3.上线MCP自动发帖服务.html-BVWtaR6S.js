import{_ as s,c as a,a as n,o as l}from"./app-Yn0PjO6e.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h2 id="一、介绍" tabindex="-1"><a class="header-anchor" href="#一、介绍"><span>一、介绍</span></a></h2><p>本章会以 Jar 包的形式，打包 MCP 自动发帖服务，并以 stdio 方式引入到项目工程。再通过定时任务触达定时自动发帖。</p><h2 id="二、流程梳理" tabindex="-1"><a class="header-anchor" href="#二、流程梳理"><span>二、流程梳理</span></a></h2><p>如图，以 stdio 方式，构建服务打包上线；</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/上线MCP自动发帖服务.drawio.png" alt="上线MCP自动发帖服务.drawio" tabindex="0" loading="lazy"><figcaption>上线MCP自动发帖服务.drawio</figcaption></figure><ul><li>第一步，将 mcp-server-csdn 以 maven 命令方式打一个 jar，IntelliJ IDEA 也可以直接通过界面操作打包 Jar。</li><li>第二步， 以 maven 命令方式，将 ai-mcp-cactusli打一个 jar，并执行 Dockerfile 构建出可部署的镜像。</li><li>第三步，通过 docker-compose 脚本配置上线部署。</li></ul><h2 id="三、服务实现" tabindex="-1"><a class="header-anchor" href="#三、服务实现"><span>三、服务实现</span></a></h2><p>首先，在项目部署前，我们要先增加一个 trigger 模块，在这个模块下添加 job 任务。定时的调用 ai mcp 服务，进行文章的编写和发布。</p><p>**注意：**发布失败后，排查 cookie 是否失效！</p><h3 id="_1-项目结构" tabindex="-1"><a class="header-anchor" href="#_1-项目结构"><span>1. 项目结构</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250624164318931.png" alt="image-20250624164318931" tabindex="0" loading="lazy"><figcaption>image-20250624164318931</figcaption></figure><ul><li>首先，增加了 trigger 模块，提供了执行任务。这个任务可以按需配置多个，分别执行不同时间的不同类型文章编写。</li><li>之后，项目所需的 chatClient 收到了 OpenAIConfig 中进行构建，这部分注意下代码就可以。只是挪动位置，代码没有变化。</li><li>最后，<a href="http://build.sh" target="_blank" rel="noopener noreferrer">build.sh</a>、Dockerfile、<a href="http://push.sh" target="_blank" rel="noopener noreferrer">push.sh</a>，tag 下的文件，都是为了项目从构建到部署上线的。</li></ul><h3 id="_2-定时任务" tabindex="-1"><a class="header-anchor" href="#_2-定时任务"><span>2. 定时任务</span></a></h3><h4 id="_2-1-配置对话客户端" tabindex="-1"><a class="header-anchor" href="#_2-1-配置对话客户端"><span>2.1 配置对话客户端</span></a></h4><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> OpenAIConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ChatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Builder</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> chatClientBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">OpenAiChatModel</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> openAiChatModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Qualifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tools&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ToolCallbackProvider</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> tools</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        DefaultChatClientBuilder</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> defaultChatClientBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DefaultChatClientBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(openAiChatModel, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ObservationRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">NOOP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (ChatClientObservationConvention) </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> defaultChatClientBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">defaultToolCallbacks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tools)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">defaultOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OpenAiChatOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gpt-4o&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h4 id="_2-2-定时任务" tabindex="-1"><a class="header-anchor" href="#_2-2-定时任务"><span>2.2 定时任务</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * Package: cn.cactusli.trigger</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * Description:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @Author 仙人球⁶ᴳ |</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @Date 2025/6/24 15:32</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * @Github https://github.com/lixuanfengs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Slf4j</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MCPServerCSDNJob</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Resource</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ChatClient</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Scheduled</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">cron</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;0 0 * * * ?&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> execute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 检查当前时间是否在指定的时间段内（8点到23点之间）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hour</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">LocalTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getHour</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (hour </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> hour </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;当前时间 {}点 不在任务执行时间范围内，跳过执行&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, hour);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">            String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userInput</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    我需要你帮我生成一篇文章，要求如下；</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    请根据以下要求生成一篇技术文章，并完成相关发布和通知任务：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    文章要求</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    1. 场景：互联网大厂 Java 求职者面试，聚焦真实业务场景下的技术应用。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    2. 技术栈（精选核心技术，覆盖广泛但避免冗余）：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       核心语言与平台：Java SE (8/11/17/21/23), JVM, Jakarta EE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       构建工具：Maven, Gradle</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       Web 框架：Spring Boot, Spring MVC, Spring WebFlux, Quarkus</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       数据库与 ORM：Hibernate, MyBatis, Spring Data JPA, HikariCP, Flyway</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       测试框架：JUnit 5, Mockito, AssertJ, Cucumber</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       微服务与云原生：Spring Cloud, Eureka, Kubernetes, Resilience4j, OpenFeign</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       安全框架：Spring Security, JWT, OAuth2</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       消息队列：Kafka, RabbitMQ, Redis Pub/Sub</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       缓存技术：Redis, Caffeine, Spring Cache</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       日志与监控：Logback, SLF4J, Prometheus, Grafana, Micrometer, Jaeger</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       API 工具：Swagger/OpenAPI, Spring HATEOAS</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       CI/CD：Jenkins, GitLab CI, Docker, Kubernetes</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       AI 技术：Spring AI, RAG（检索增强生成）, 向量数据库（Milvus/Chroma）, Embedding 模型（OpenAI/Ollama）, 语义检索</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       其他：Lombok, MapStruct, WebSocket</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                    </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    3. 业务场景（精选高频场景，突出技术应用）：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       音视频服务、内容社区（UGC/AIGC）、电商平台、本地生活服务、支付与金融、在线教育、智慧物流、广告与营销</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    4. 叙述风格：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       以严肃的面试官和幽默的“水货程序员”谢飞机为主角，通过对话展现面试过程。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       谢飞机能较好回答基础问题，面试官会适当夸赞并引导；对于复杂问题，谢飞机回答模糊，面试官循序渐进追问。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       每轮面试包含 3-5 个问题，共 3 轮，问题之间有技术与业务场景的逻辑衔接，逐步深入。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       面试结束时，面试官使用“回家等通知”类似话术。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    5. 文章结构：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       正文：以故事形式呈现面试对话，突出技术点与业务场景的结合。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       答案解析：文章末尾详细解答每个问题，包含业务场景、技术实现细节及代码示例，确保小白也能理解。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    6. 输出内容：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       文章标题：包含核心技术点，如“Java 面试实战：Spring Boot 与 Kafka 在电商场景的应用”。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       文章内容：完整的 Markdown 格式文章，包含面试对话和答案解析。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                       </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    文章标签：多个相关技术关键词，用英文逗号分隔，如 Java, Spring Boot, Kafka, 面试。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    发布与通知</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        发布平台：将文章发布至 CSDN，获取文章的 HTTP URL。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        微信公众号通知：</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        平台：CSDN</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        主题：文章标题</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        描述：文章简述</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        跳转地址：CSDN 文章的 HTTP URL</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    注意事项:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        1. 请确保文章内容符合 CSDN 的发布规定，避免侵权和不当内容。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        2. 确保技术点与业务场景结合紧密，问题设计具有递进性和实际意义。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        3. 请在文章末尾提供参考文献或相关链接，以供读者进一步学习。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        4. 请在文章中包含适当的版权声明和转载说明。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        5. 发布和通知内容需准确无误，跳转地址有效。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    &quot;&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;执行结果:{} {}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, userInput, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">chatClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">prompt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(userInput).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;执行 MCP 自动发帖任务失败&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, e);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong><code>@Scheduled(cron = &quot;0 0 * * * ?&quot;)</code> 是每个1小时执行1次，在测试验证阶段，可以配置时间稍微快一些，如10分钟1次。</p><h3 id="_3-服务配置" tabindex="-1"><a class="header-anchor" href="#_3-服务配置"><span>3. 服务配置</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625153549026.png" alt="image-20250625153549026" tabindex="0" loading="lazy"><figcaption>image-20250625153549026</figcaption></figure><ul><li><p>第一步，先把 <code>mcp-server-csdn</code> 进行打包 <code>install</code> 到本地仓库，拿到jar的路径。之后在你的 <code>ai-mcp-cactusli-app</code> 下配置 jar 的路径。这里的配置，是为你让你可以在本地验证运行。注意 <code>cookie</code> 要调整为你自己的。</p></li><li><p>第二步，在<code>ai-mcp-cactusli-app</code> 中 config 路径下配置 <code>mcp</code>, application-dev.yml 文件里配置上该路径。</p></li></ul><h2 id="四、服务上线" tabindex="-1"><a class="header-anchor" href="#四、服务上线"><span>四、服务上线</span></a></h2><p>目前如果本地模型地址配置是可用的，那么就可以修改 cookie 为自己的，把环境脚本上传至服务器，启动执行就可以完成启动了。</p><h3 id="_1-打包镜像" tabindex="-1"><a class="header-anchor" href="#_1-打包镜像"><span>1. 打包镜像</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625161252219.png" alt="image-20250625161252219" tabindex="0" loading="lazy"><figcaption>image-20250625161252219</figcaption></figure><ul><li>参考上图进行服务的部署。</li></ul><h3 id="_2-docker-engine-api-方式打包" tabindex="-1"><a class="header-anchor" href="#_2-docker-engine-api-方式打包"><span>2. Docker Engine API 方式打包</span></a></h3><p>在安装了 docker 服务的Linux中执行以下操作：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /usr/lib/systemd/system/docker.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Description</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Docker</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Application</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Engine</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Documentation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://docs.docker.com</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">After</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">network-online.target</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> nss-lookup.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker.socket</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld.service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerd.service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time-set.target</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Wants</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">network-online.target</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> containerd.service</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Requires</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker.socket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">notify</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># the default is not to use systemd for cgroups because the delegate issues still</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># exists and systemd currently does not support the cgroup feature set required</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># for containers run by docker</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加 IP 和端口</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ExecStart</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/bin/dockerd</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://192.168.1.23:4560</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fd://</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --containerd=/run/containerd/containerd.sock</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ExecReload</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin/kill</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HUP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $MAINPID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TimeoutStartSec</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">RestartSec</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Restart</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">always</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Note that StartLimit* options were moved from &quot;Service&quot; to &quot;Unit&quot; in systemd 229.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Both the old, and new location are accepted by systemd 229 and up, so using the old location</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># to make them work for either version of systemd.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StartLimitBurst</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Both the old, and new name are accepted by systemd 230 and up, so using the old name to make</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># this option work for either version of systemd.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StartLimitInterval</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">60s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LimitNPROC</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">infinity</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LimitCORE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Comment TasksMax if your systemd version does not support it.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Only systemd 226 and above support this option.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TasksMax</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">infinity</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># set delegate yes so that systemd does not reset the cgroups of docker containers</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Delegate</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kill only the docker process, not all processes in the cgroup</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KillMode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">process</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">OOMScoreAdjust</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-500</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">WantedBy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 Docker 服务:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre></div><p>配置防火墙限制访问:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 只允许某个 Ip 能访问此端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dport</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2375</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 192.168.1.218</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dport</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2375</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DROP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 把规则持久化到文件里</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables-persistent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables-save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/iptables/rules.v4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reboot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span></span></code></pre></div><p>在插件市场安装 docker 插件。</p><p>测试连接：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625170101363.png" alt="image-20250625170101363" tabindex="0" loading="lazy"><figcaption>image-20250625170101363</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625170336725.png" alt="image-20250625170336725" tabindex="0" loading="lazy"><figcaption>image-20250625170336725</figcaption></figure><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625171620708.png" alt="image-20250625171620708" tabindex="0" loading="lazy"><figcaption>image-20250625171620708</figcaption></figure><p>如图镜像打包成功。</p><h3 id="_3-推送镜像" tabindex="-1"><a class="header-anchor" href="#_3-推送镜像"><span>3. 推送镜像</span></a></h3><p>推送镜像到 Docker hub：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@rag-host:/home/cactusli#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> login</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Authenticating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> existing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> credentials...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [Username: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">****</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Info</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> →</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> login</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> different</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> account,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;docker logout&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> followed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;docker login&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Login</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Succeeded</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@rag-host:/home/cactusli#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cactuslixf/ai-mcp-cactusli-app:1.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> refers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [docker.io/cactuslixf/ai-mcp-cactusli-app]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6b33e6e747e1:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pushed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">abb34ab69cf0:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pushed</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6be690267e47:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mounted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cactuslixf/ai-rag-knowledge-app</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">13a34b6fff78:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mounted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cactuslixf/ai-rag-knowledge-app</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">9c1b6dd6c1e6:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mounted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cactuslixf/ai-rag-knowledge-app</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.0:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> digest:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sha256:1bcd706275bebe2025095c0aa5041edb2647eb2cde28608a765dd72a512b93cb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> size:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1372</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625172208627.png" alt="image-20250625172208627" tabindex="0" loading="lazy"><figcaption>image-20250625172208627</figcaption></figure><blockquote><p>注意别忘记开启代理！！！</p></blockquote><p>也可以执行 push 脚本：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625172831426.png" alt="image-20250625172831426" tabindex="0" loading="lazy"><figcaption>image-20250625172831426</figcaption></figure><h3 id="_4-环境脚本" tabindex="-1"><a class="header-anchor" href="#_4-环境脚本"><span>4. 环境脚本</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625173338167.png" alt="image-20250625173338167" tabindex="0" loading="lazy"><figcaption>image-20250625173338167</figcaption></figure><ul><li>环境部署，需要先通过 docker-compose 安装环境。redis、pg库等。</li></ul><h3 id="_5-项目脚本" tabindex="-1"><a class="header-anchor" href="#_5-项目脚本"><span>5. 项目脚本</span></a></h3><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250625174809197.png" alt="image-20250625174809197" tabindex="0" loading="lazy"><figcaption>image-20250625174809197</figcaption></figure><ul><li>1.将 <code>mcp-server-csdn</code> 打包好的 jar 放到此路径下</li><li>2.在服务器上使用 <code>docker-compose -f docker-compose-app-v1.0.yml up -d</code> 启动服务</li><li>3.以docker 挂载目录的方式，指定 jar 所在的位置</li><li>4.在这映射的是外部地址，需要改为 file 地址</li><li>5.指定 mcp 使用到jar 的所在地址。</li></ul><h3 id="_6-服务部署启动" tabindex="-1"><a class="header-anchor" href="#_6-服务部署启动"><span>6. 服务部署启动</span></a></h3><h4 id="_6-1-上传脚本" tabindex="-1"><a class="header-anchor" href="#_6-1-上传脚本"><span>6.1 上传脚本</span></a></h4><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250626153323939.png" alt="image-20250626153323939" tabindex="0" loading="lazy"><figcaption>image-20250626153323939</figcaption></figure><h4 id="_6-2-执行脚本" tabindex="-1"><a class="header-anchor" href="#_6-2-执行脚本"><span>6.2 执行脚本</span></a></h4><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250630175323337.png" alt="image-20250630175323337" tabindex="0" loading="lazy"><figcaption>image-20250630175323337</figcaption></figure><ul><li>在指定目录下运行命令 <ul><li><code>docker compose -f docker-compose-environment.yml up -d</code></li><li><code>docker compose -f docker-compose-app-v1.0.yml up -d</code></li></ul></li></ul><ul><li>执行完命令后，服务就会给自动的给 CSDN 发帖了。</li></ul>`,59)]))}const k=s(e,[["render",t]]),d=JSON.parse(`{"path":"/tutorials/projects/ai-mcp-cactusli/3.%E4%B8%8A%E7%BA%BFMCP%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%96%E6%9C%8D%E5%8A%A1.html","title":"上线MCP自动发帖服务","lang":"zh-CN","frontmatter":{"title":"上线MCP自动发帖服务","subtitle":"上线MCP自动发帖服务","date":"2024-07-16T10:54:20.000Z","category":["MCP"],"tag":["MCP"],"order":3,"description":"一、介绍 本章会以 Jar 包的形式，打包 MCP 自动发帖服务，并以 stdio 方式引入到项目工程。再通过定时任务触达定时自动发帖。 二、流程梳理 如图，以 stdio 方式，构建服务打包上线； 上线MCP自动发帖服务.drawio上线MCP自动发帖服务.drawio 第一步，将 mcp-server-csdn 以 maven 命令方式打一个 ja...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorials/projects/ai-mcp-cactusli/3.%E4%B8%8A%E7%BA%BFMCP%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%96%E6%9C%8D%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"上线MCP自动发帖服务"}],["meta",{"property":"og:description","content":"一、介绍 本章会以 Jar 包的形式，打包 MCP 自动发帖服务，并以 stdio 方式引入到项目工程。再通过定时任务触达定时自动发帖。 二、流程梳理 如图，以 stdio 方式，构建服务打包上线； 上线MCP自动发帖服务.drawio上线MCP自动发帖服务.drawio 第一步，将 mcp-server-csdn 以 maven 命令方式打一个 ja..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://beauties.eu.org/blogimg/main/img1/上线MCP自动发帖服务.drawio.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-20T04:14:04.000Z"}],["meta",{"property":"article:tag","content":"MCP"}],["meta",{"property":"article:published_time","content":"2024-07-16T10:54:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-20T04:14:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"上线MCP自动发帖服务\\",\\"image\\":[\\"https://beauties.eu.org/blogimg/main/img1/上线MCP自动发帖服务.drawio.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250624164318931.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625153549026.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625161252219.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625170101363.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625170336725.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625171620708.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625172208627.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625172831426.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625173338167.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250625174809197.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250626153323939.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250630175323337.png\\"],\\"datePublished\\":\\"2024-07-16T10:54:20.000Z\\",\\"dateModified\\":\\"2025-08-20T04:14:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"一、介绍","slug":"一、介绍","link":"#一、介绍","children":[]},{"level":2,"title":"二、流程梳理","slug":"二、流程梳理","link":"#二、流程梳理","children":[]},{"level":2,"title":"三、服务实现","slug":"三、服务实现","link":"#三、服务实现","children":[{"level":3,"title":"1. 项目结构","slug":"_1-项目结构","link":"#_1-项目结构","children":[]},{"level":3,"title":"2. 定时任务","slug":"_2-定时任务","link":"#_2-定时任务","children":[]},{"level":3,"title":"3. 服务配置","slug":"_3-服务配置","link":"#_3-服务配置","children":[]}]},{"level":2,"title":"四、服务上线","slug":"四、服务上线","link":"#四、服务上线","children":[{"level":3,"title":"1. 打包镜像","slug":"_1-打包镜像","link":"#_1-打包镜像","children":[]},{"level":3,"title":"2. Docker Engine API 方式打包","slug":"_2-docker-engine-api-方式打包","link":"#_2-docker-engine-api-方式打包","children":[]},{"level":3,"title":"3. 推送镜像","slug":"_3-推送镜像","link":"#_3-推送镜像","children":[]},{"level":3,"title":"4. 环境脚本","slug":"_4-环境脚本","link":"#_4-环境脚本","children":[]},{"level":3,"title":"5. 项目脚本","slug":"_5-项目脚本","link":"#_5-项目脚本","children":[]},{"level":3,"title":"6. 服务部署启动","slug":"_6-服务部署启动","link":"#_6-服务部署启动","children":[]}]}],"git":{"createdTime":1755663244000,"updatedTime":1755663244000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":1,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":7.54,"words":2263},"filePathRelative":"tutorials/projects/ai-mcp-cactusli/3.上线MCP自动发帖服务.md","localizedDate":"2024年7月16日","excerpt":"<h2>一、介绍</h2>\\n<p>本章会以 Jar 包的形式，打包 MCP 自动发帖服务，并以 stdio 方式引入到项目工程。再通过定时任务触达定时自动发帖。</p>\\n<h2>二、流程梳理</h2>\\n<p>如图，以 stdio 方式，构建服务打包上线；</p>\\n<figure><img src=\\"https://beauties.eu.org/blogimg/main/img1/上线MCP自动发帖服务.drawio.png\\" alt=\\"上线MCP自动发帖服务.drawio\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>上线MCP自动发帖服务.drawio</figcaption></figure>","autoDesc":true}`);export{k as comp,d as data};
