import{_ as e,c as l,f as i,o as t}from"./app-Dna3-KZy.js";const r={};function n(o,a){return t(),l("div",null,a[0]||(a[0]=[i('<blockquote><p>Java 8 新特性详解汇总。</p><ul><li>Java 新特性的增加都是来源于 JSR或者JEP</li><li>JSR论坛: <a href="https://jcp.org/en/jsr/detail?id=335" target="_blank" rel="noopener noreferrer">https://jcp.org/en/jsr/detail?id=335</a></li></ul></blockquote><ul><li>Java8 新特性知识体系 <ul><li><a href="#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB">知识体系</a></li><li>相关文章 <ul><li><a href="#%E5%87%BD%E6%95%B0%E7%BC%96%E7%A8%8B">函数编程</a></li><li><a href="#optional%E7%B1%BB">Optional类</a></li><li><a href="#default%E6%96%B9%E6%B3%95">default方法</a></li><li><a href="#%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3">类型注解</a></li><li><a href="#%E9%87%8D%E5%A4%8D%E6%B3%A8%E8%A7%A3">重复注解</a></li><li><a href="#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD">类型推断</a></li><li><a href="#jre-%E7%B2%BE%E7%AE%80">JRE 精简</a></li><li><a href="#localdatelocaldatetime">LocalDate/LocalDateTime</a></li><li><a href="#javafx">JavaFX</a></li><li><a href="#permgen%E7%A7%BB%E9%99%A4">PermGen移除</a></li><li><a href="#stampedlock">StampedLock</a></li><li><a href="#%E5%85%B6%E5%AE%83%E6%9B%B4%E6%96%B0">其它更新</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3">参考文档</a></li></ul></li></ul><h2 id="知识体系" tabindex="-1"><a class="header-anchor" href="#知识体系"><span><a href="#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB">#</a> 知识体系</span></a></h2><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/java8-overview.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章"><span><a href="#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0">#</a> 相关文章</span></a></h2><h3 id="函数编程" tabindex="-1"><a class="header-anchor" href="#函数编程"><span><a href="#%E5%87%BD%E6%95%B0%E7%BC%96%E7%A8%8B">#</a> 函数编程</span></a></h3><blockquote><p>面向对象编程是对数据进行抽象；函数式编程是对行为进行抽象。</p></blockquote><ul><li>Lambda 表达式的特点</li><li>Lambda 表达式使用和Stream下的接口</li><li>函数接口定义和使用，四大内置函数接口Consumer，Function，Supplier, Predicate.</li><li>Comparator排序为例贯穿所有知识点。</li></ul><p>详细分析请参看: <a href="">Java 8 - 函数编程</a></p><h3 id="optional类" tabindex="-1"><a class="header-anchor" href="#optional类"><span><a href="#optional%E7%B1%BB">#</a> Optional类</span></a></h3><blockquote><p>这是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。</p></blockquote><ul><li>Optional类的意义</li><li>Optional类有哪些常用的方法</li><li>Optional举例贯穿所有知识点</li><li>多重类嵌套Null值判断</li></ul><p>详细分析请参看: <a href="">Java 8 - Optional类</a></p><h3 id="default方法" tabindex="-1"><a class="header-anchor" href="#default方法"><span><a href="#default%E6%96%B9%E6%B3%95">#</a> default方法</span></a></h3><blockquote><p>默认方法给予我们修改接口而不破坏原来的实现类的结构提供了便利，目前java 8的集合框架已经大量使用了默认方法来改进了，当我们最终开始使用Java 8的lambdas表达式时，提供给我们一个平滑的过渡体验。</p></blockquote><ul><li>为什么会出现默认方法?</li><li>接口中出现默认方法，且类可以实现多接口的，那和抽象类有啥区别?</li><li>多重实现的默认方法冲突怎么办?</li></ul><p>详细分析请参看: <a href="">Java 8 - default方法</a></p><h3 id="类型注解" tabindex="-1"><a class="header-anchor" href="#类型注解"><span><a href="#%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3">#</a> 类型注解</span></a></h3><blockquote><p>那充满争议的类型注解究竟是什么? 复杂还是便捷?</p></blockquote><ul><li>注解在JDK哪个版本中出现的，可以在哪些地方用注解?</li><li>什么是类型注解?</li><li>类型注解的作用是什么?</li><li>为什么会出现类型注解(JSR308)?</li></ul><p>详细分析请参看: <a href="">Java 8 - 类型注解</a></p><h3 id="重复注解" tabindex="-1"><a class="header-anchor" href="#重复注解"><span><a href="#%E9%87%8D%E5%A4%8D%E6%B3%A8%E8%A7%A3">#</a> 重复注解</span></a></h3><ul><li>Java8之前对重复注解是怎么做的?</li><li>Java8对重复注解添加了什么支持?</li></ul><p>详细分析请参看: <a href="">Java 8 - 重复注解</a></p><h3 id="类型推断" tabindex="-1"><a class="header-anchor" href="#类型推断"><span><a href="#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD">#</a> 类型推断</span></a></h3><blockquote><p>导致类型间互相转换的问题困扰着每个java程序员，通过编译器自动推断类型的东西可以稍微缓解一下类型转换太复杂的问题。</p></blockquote><ul><li>什么是泛型?</li><li>Java7对泛型推断做了哪些优化?</li><li>Java8对此有做了哪些优化?</li></ul><p>详细分析请参看: <a href="">Java 8 - 类型推断优化</a></p><h3 id="jre-精简" tabindex="-1"><a class="header-anchor" href="#jre-精简"><span><a href="#jre-%E7%B2%BE%E7%AE%80">#</a> JRE 精简</span></a></h3><blockquote><p>模块化特性是javaer所期待的特性, 一个占用资源少的JRE运行环境，紧凑的JRE特性的出现，能带来以后的物联网的发展，甚至还是会有大量的java应用程序出现在物联网上面。</p></blockquote><ul><li>为什么精简Java8 JRE，及好处是啥?</li><li>紧凑的JRE分3种，分别是compact1、compact2、compact3，他们的关系是?</li><li>在不同平台上如何编译等?</li></ul><p>详细分析请参看: <a href="">Java 8 - JRE精简</a></p><h3 id="localdate-localdatetime" tabindex="-1"><a class="header-anchor" href="#localdate-localdatetime"><span><a href="#localdate-localdatetime">#</a> LocalDate/LocalDateTime</span></a></h3><blockquote><p>Date/Calendar槽点, java8对其进行了重写。</p></blockquote><ul><li>Java8之前的Date有哪些槽点? (Calendar的所有属性都是可变的，SimpleDateFormat的线程不安全性等)</li><li>Java8之前使用哪些常用的第三方时间库?</li><li>Java8关于时间和日期有哪些类和方法，变比Java8之前它的特点是什么?</li><li>其它语言时间库?</li></ul><p>详细分析请参看: <a href="">Java 8 - LocalDate/LocalDateTime</a></p><h3 id="javafx" tabindex="-1"><a class="header-anchor" href="#javafx"><span><a href="#javafx">#</a> JavaFX</span></a></h3><blockquote><p>JavaFX主要致力于富客户端开发，以弥补swing的缺陷，主要提供图形库与media库，支持audio,video,graphics,animation,3D等，同时采用现代化的css方式支持界面设计。同时又采用XUI方式以XML方式设计UI界面，达到显示与逻辑的分离。</p></blockquote><ul><li>javaFX发展历程?</li><li>Java8对其增加了哪些特性?</li></ul><p>详细分析请参看: <a href="">Java 8 - JavaFX</a></p><h3 id="permgen移除" tabindex="-1"><a class="header-anchor" href="#permgen移除"><span><a href="#permgen%E7%A7%BB%E9%99%A4">#</a> PermGen移除</span></a></h3><blockquote><p>PermGen space的全称是Permanent Generation space,是指内存的永久保存区域。PermGen space是Oracle-Sun Hotspot才有，JRockit以及J9是没有这个区域。</p></blockquote><ul><li>Java8之前 “java.lang.OutOfMemoryError: PermGen space”是怎么引起的，怎么解决的?</li><li>新增加的元空间(Metaspace)包含哪些东西，画出图</li><li>元空间(Metaspace)和PermGen对比</li></ul><p>详细分析请参看: <a href="">Java 8 - 移除Permgen</a></p><h3 id="stampedlock" tabindex="-1"><a class="header-anchor" href="#stampedlock"><span><a href="#stampedlock">#</a> StampedLock</span></a></h3><ul><li>为什么会引入StampedLock</li><li>用Lock写悲观锁和乐观锁举例</li><li>用StampedLock写悲观锁和乐观锁举例</li><li>性能对比</li></ul><p>详细分析请参看: <a href="">Java 8 - StampedLock</a></p><h3 id="其它更新" tabindex="-1"><a class="header-anchor" href="#其它更新"><span><a href="#%E5%85%B6%E5%AE%83%E6%9B%B4%E6%96%B0">#</a> 其它更新</span></a></h3><ul><li>Java8 还有哪些其它更新 <ul><li>字符串</li><li>Base64</li><li>Random</li><li>Nashorn</li><li>...</li></ul></li></ul><p>详细分析请参看: <a href="">Java 8 - 其它更新</a></p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span><a href="#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3">#</a> 参考文档</span></a></h2><blockquote><p>主要参考自以下文档:</p></blockquote><ul><li>Java 8 教程汇总 <a href="https://wizardforcel.gitbooks.io/java8-tutorials/content/index.html" target="_blank" rel="noopener noreferrer">https://wizardforcel.gitbooks.io/java8-tutorials/content/index.html</a></li></ul>',53)]))}const c=e(r,[["render",n],["__file","Java8 新特性知识体系.html.vue"]]),h=JSON.parse(`{"path":"/posts/Java/Java8NewFeatures/Java8%20%E6%96%B0%E7%89%B9%E6%80%A7%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html","title":"Java8 新特性知识体系","lang":"zh-CN","frontmatter":{"title":"Java8 新特性知识体系","subtitle":"Java，Java开发，Java 体系","date":"2024-03-17T15:06:55.000Z","category":["Java"],"tag":["Java","Java8 新特性"],"order":1,"description":"Java 8 新特性详解汇总。 Java 新特性的增加都是来源于 JSR或者JEP JSR论坛: https://jcp.org/en/jsr/detail?id=335 Java8 新特性知识体系 知识体系 相关文章 函数编程 Optional类 default方法 类型注解 重复注解 类型推断 JRE 精简 LocalDate/LocalDateT...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/posts/Java/Java8NewFeatures/Java8%20%E6%96%B0%E7%89%B9%E6%80%A7%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"Java8 新特性知识体系"}],["meta",{"property":"og:description","content":"Java 8 新特性详解汇总。 Java 新特性的增加都是来源于 JSR或者JEP JSR论坛: https://jcp.org/en/jsr/detail?id=335 Java8 新特性知识体系 知识体系 相关文章 函数编程 Optional类 default方法 类型注解 重复注解 类型推断 JRE 精简 LocalDate/LocalDateT..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/Java/java8-overview.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T03:29:54.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Java8 新特性"}],["meta",{"property":"article:published_time","content":"2024-03-17T15:06:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-21T03:29:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java8 新特性知识体系\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/Java/java8-overview.png\\"],\\"datePublished\\":\\"2024-03-17T15:06:55.000Z\\",\\"dateModified\\":\\"2024-03-21T03:29:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"# 知识体系","slug":"知识体系","link":"#知识体系","children":[]},{"level":2,"title":"# 相关文章","slug":"相关文章","link":"#相关文章","children":[{"level":3,"title":"# 函数编程","slug":"函数编程","link":"#函数编程","children":[]},{"level":3,"title":"# Optional类","slug":"optional类","link":"#optional类","children":[]},{"level":3,"title":"# default方法","slug":"default方法","link":"#default方法","children":[]},{"level":3,"title":"# 类型注解","slug":"类型注解","link":"#类型注解","children":[]},{"level":3,"title":"# 重复注解","slug":"重复注解","link":"#重复注解","children":[]},{"level":3,"title":"# 类型推断","slug":"类型推断","link":"#类型推断","children":[]},{"level":3,"title":"# JRE 精简","slug":"jre-精简","link":"#jre-精简","children":[]},{"level":3,"title":"# LocalDate/LocalDateTime","slug":"localdate-localdatetime","link":"#localdate-localdatetime","children":[]},{"level":3,"title":"# JavaFX","slug":"javafx","link":"#javafx","children":[]},{"level":3,"title":"# PermGen移除","slug":"permgen移除","link":"#permgen移除","children":[]},{"level":3,"title":"# StampedLock","slug":"stampedlock","link":"#stampedlock","children":[]},{"level":3,"title":"# 其它更新","slug":"其它更新","link":"#其它更新","children":[]}]},{"level":2,"title":"# 参考文档","slug":"参考文档","link":"#参考文档","children":[]}],"git":{"createdTime":1710139794000,"updatedTime":1710991794000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":2}]},"readingTime":{"minutes":4.39,"words":1316},"filePathRelative":"posts/Java/Java8NewFeatures/Java8 新特性知识体系.md","localizedDate":"2024年3月17日","excerpt":"<blockquote>\\n<p>Java 8 新特性详解汇总。</p>\\n<ul>\\n<li>Java 新特性的增加都是来源于 JSR或者JEP</li>\\n<li>JSR论坛: <a href=\\"https://jcp.org/en/jsr/detail?id=335\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://jcp.org/en/jsr/detail?id=335</a></li>\\n</ul>\\n</blockquote>\\n<ul>\\n<li>Java8 新特性知识体系\\n<ul>\\n<li><a href=\\"#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB\\">知识体系</a></li>\\n<li>相关文章\\n<ul>\\n<li><a href=\\"#%E5%87%BD%E6%95%B0%E7%BC%96%E7%A8%8B\\">函数编程</a></li>\\n<li><a href=\\"#optional%E7%B1%BB\\">Optional类</a></li>\\n<li><a href=\\"#default%E6%96%B9%E6%B3%95\\">default方法</a></li>\\n<li><a href=\\"#%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3\\">类型注解</a></li>\\n<li><a href=\\"#%E9%87%8D%E5%A4%8D%E6%B3%A8%E8%A7%A3\\">重复注解</a></li>\\n<li><a href=\\"#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD\\">类型推断</a></li>\\n<li><a href=\\"#jre-%E7%B2%BE%E7%AE%80\\">JRE 精简</a></li>\\n<li><a href=\\"#localdatelocaldatetime\\">LocalDate/LocalDateTime</a></li>\\n<li><a href=\\"#javafx\\">JavaFX</a></li>\\n<li><a href=\\"#permgen%E7%A7%BB%E9%99%A4\\">PermGen移除</a></li>\\n<li><a href=\\"#stampedlock\\">StampedLock</a></li>\\n<li><a href=\\"#%E5%85%B6%E5%AE%83%E6%9B%B4%E6%96%B0\\">其它更新</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3\\">参考文档</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{c as comp,h as data};
