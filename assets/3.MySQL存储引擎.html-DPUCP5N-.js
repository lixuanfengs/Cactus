import{_ as s,c as a,a as l,o as t}from"./app-izOKEaCf.js";const h={};function n(e,i){return t(),a("div",null,[...i[0]||(i[0]=[l(`<h2 id="_1、查看存储引擎" tabindex="-1"><a class="header-anchor" href="#_1、查看存储引擎"><span>1、查看存储引擎</span></a></h2><p>查看MySQL提供什么存储引擎</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SHOW ENGINES;</span></span></code></pre></div><p>下面的结果表示MySQL中默认使用的存储引擎是InnoDB，支持事务，行锁，外键，支持分布式事务(XA)，支持保存点(回滚)</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20220703164220030.png" alt="image-20220703164220030" tabindex="0" loading="lazy"><figcaption>image-20220703164220030</figcaption></figure><p>也可以通过以下语句查看默认的存储引擎：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SHOW VARIABLES </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LIKE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;%default_storage_engine%&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20220703170334348.png" alt="image-20220703170334348" tabindex="0" loading="lazy"><figcaption>image-20220703170334348</figcaption></figure><h2 id="_2、设置存储引擎" tabindex="-1"><a class="header-anchor" href="#_2、设置存储引擎"><span>2、设置存储引擎</span></a></h2><p>**方法1：**临时</p><p>设置默认存储引擎：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DEFAULT_STORAGE_ENGINE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MyISAM;</span></span></code></pre></div><p>**方法2：**永久</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#或者修改 my.cnf 文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /atguigu/mysql/mysql8/conf/my.cnf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#添加配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default-storage-engine</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">MyISAM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#保存并退出</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#重启MySQL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> atguigu-mysql8</span></span></code></pre></div><p><strong>方法3：</strong></p><p>我们可以为 不同的表设置不同的存储引擎</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 表名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( 建表语句 ) ENGINE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 存储引擎名称;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ALTER</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 ENGINE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 存储引擎名称;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 例如：</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`name\`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ENGINE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MyISAM;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ALTER</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> student ENGINE </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> InnoDB;</span></span></code></pre></div><h2 id="_3、myisam和innodb的区别" tabindex="-1"><a class="header-anchor" href="#_3、myisam和innodb的区别"><span>3、MyISAM和InnoDB的区别</span></a></h2><ol><li>事务支持：InnoDB是支持事务的存储引擎，而MyISAM不支持事务。</li><li>外键约束：InnoDB支持外键约束（foreign key constraints），可以保证数据的完整性和一致性。MyISAM不支持外键约束。</li><li>锁级别：InnoDB采用行级锁定（row-level locking），可以更好地支持并发操作和并发控制。而MyISAM采用表级锁定（table-level locking），这意味着在对表进行写操作时需要锁定整个表，可能导致并发性能下降。</li><li>崩溃恢复：InnoDB具有崩溃恢复的能力，可以在数据库发生异常情况或崩溃后自动恢复数据。MyISAM没有崩溃恢复机制，如果发生故障，可能会导致数据丢失或损坏。</li><li>并发性能：由于InnoDB采用了行级锁定和多版本并发控制（MVCC）技术，它在高并发环境下通常具有更好的性能。MyISAM适用于读操作较多、写操作较少的场景。</li></ol><h3 id="_3-1、事务控制" tabindex="-1"><a class="header-anchor" href="#_3-1、事务控制"><span>3.1、事务控制</span></a></h3><p><strong>InnoDB支持事务，MyISAM不支持事务：</strong></p><p>要证明 MyISAM 不支持事务，可以通过以下步骤来验证：</p><ol><li><p>创建一个 MyISAM 表：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> myisam_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  data</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ENGINE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MyISAM;</span></span></code></pre></div></li><li><p>开启一个事务，插入一条记录并未提交事务：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">START TRANSACTION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myisam_table (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div></li><li><p>打开另一个连接或会话，尝试读取插入的记录：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myisam_table </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>如果 MyISAM 支持事务，则在事务未提交之前，第二个连接是无法看到未提交的数据的。然而，如果你使用的是 MyISAM 存储引擎，你会发现第二个连接可以读取到该未提交的记录。</p></li><li><p>回到第一个连接或会话，回滚事务：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ROLLBACK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div></li><li><p>再次在第二个连接或会话中尝试读取记录：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myisam_table </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>在 MyISAM 中，即使回滚了事务，第二个连接仍然可以读取到被回滚的记录。</p></li></ol><p>这个实验表明，MyISAM 存储引擎不支持事务。在 MyISAM 中，每个操作（插入、更新、删除）都被立即写入磁盘，没有事务日志来支持回滚操作。因此，MyISAM 不适合处理需要 ACID（原子性、一致性、隔离性和持久性）特性的事务操作。</p><h3 id="_3-2、外键约束" tabindex="-1"><a class="header-anchor" href="#_3-2、外键约束"><span>3.2、外键约束</span></a></h3><p><strong>InnoDB支持外键约束，MyISAM不支持外键约束：</strong></p><p>要证明 MyISAM 不支持外键约束，可以按照以下步骤进行验证：</p><ol><li><p>创建两个 MyISAM 表，并定义一个表之间的外键关系。假设我们有两个表：<code>parent_table</code> 和 <code>child_table</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> parent_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PRIMARY KEY</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ENGINE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MyISAM;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> child_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  parent_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  FOREIGN KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (parent_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">REFERENCES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parent_table(id)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ENGINE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MyISAM;</span></span></code></pre></div></li><li><p>使用 <code>SHOW CREATE TABLE</code> 命令来查看表的定义信息，确认 MyISAM 表中没有外键约束。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SHOW </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> child_table;</span></span></code></pre></div></li></ol>`,28)])])}const p=s(h,[["render",n]]),d=JSON.parse(`{"path":"/backend/database/MySQL/3.MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html","title":"MySQL存储引擎","lang":"zh-CN","frontmatter":{"title":"MySQL存储引擎","subtitle":"MySQL存储引擎","date":"2025-03-21T21:15:26.000Z","category":["MySQL"],"tag":["MySQL"],"order":3,"description":"1、查看存储引擎 查看MySQL提供什么存储引擎 下面的结果表示MySQL中默认使用的存储引擎是InnoDB，支持事务，行锁，外键，支持分布式事务(XA)，支持保存点(回滚) image-20220703164220030image-20220703164220030 也可以通过以下语句查看默认的存储引擎： image-2022070317033434...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/backend/database/MySQL/3.MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"MySQL存储引擎"}],["meta",{"property":"og:description","content":"1、查看存储引擎 查看MySQL提供什么存储引擎 下面的结果表示MySQL中默认使用的存储引擎是InnoDB，支持事务，行锁，外键，支持分布式事务(XA)，支持保存点(回滚) image-20220703164220030image-20220703164220030 也可以通过以下语句查看默认的存储引擎： image-2022070317033434..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://beauties.eu.org/blogimg/main/img1/image-20220703164220030.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-21T05:25:15.000Z"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2025-03-21T21:15:26.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-21T05:25:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL存储引擎\\",\\"image\\":[\\"https://beauties.eu.org/blogimg/main/img1/image-20220703164220030.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20220703170334348.png\\"],\\"datePublished\\":\\"2025-03-21T21:15:26.000Z\\",\\"dateModified\\":\\"2025-08-21T05:25:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"1、查看存储引擎","slug":"_1、查看存储引擎","link":"#_1、查看存储引擎","children":[]},{"level":2,"title":"2、设置存储引擎","slug":"_2、设置存储引擎","link":"#_2、设置存储引擎","children":[]},{"level":2,"title":"3、MyISAM和InnoDB的区别","slug":"_3、myisam和innodb的区别","link":"#_3、myisam和innodb的区别","children":[{"level":3,"title":"3.1、事务控制","slug":"_3-1、事务控制","link":"#_3-1、事务控制","children":[]},{"level":3,"title":"3.2、外键约束","slug":"_3-2、外键约束","link":"#_3-2、外键约束","children":[]}]}],"git":{"createdTime":1755753915000,"updatedTime":1755753915000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":1,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":3.27,"words":980},"filePathRelative":"backend/database/MySQL/3.MySQL存储引擎.md","localizedDate":"2025年3月21日","excerpt":"<h2>1、查看存储引擎</h2>\\n<p>查看MySQL提供什么存储引擎</p>\\n<div class=\\"language-sql\\" data-highlighter=\\"shiki\\" data-ext=\\"sql\\" data-title=\\"sql\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">SHOW ENGINES;</span></span></code></pre>\\n</div>","autoDesc":true}`);export{p as comp,d as data};
