import{_ as n,c as a,f as l,o as e}from"./app-CF9kF85C.js";const p={};function o(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="一、案例背景" tabindex="-1"><a class="header-anchor" href="#一、案例背景"><span>一、案例背景</span></a></h2><p>为了清晰明了地展示MyBatis的常用功能,我们设定了一个公司雇员薪酬管理的开发场景。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240418180519158.png" alt="image-20240418180519158" tabindex="0" loading="lazy"><figcaption>image-20240418180519158</figcaption></figure><ul><li>首先，雇员员工和对应的薪资待遇，是一个1v1的关系。</li><li>之后，薪资表与调薪表，是一个1vn的关系。每次晋升、普调，都会有一条对应的调薪记录。</li><li>最后，有了这样3个表，我们就可以很好的完成，员工的插入、批量插入，和事务操作调薪。</li></ul><h2 id="二、领域模型" tabindex="-1"><a class="header-anchor" href="#二、领域模型"><span>二、领域模型</span></a></h2><p><strong>模型定义</strong>：<a href="https://bugstack.cn/md/road-map/ddd.html" target="_blank" rel="noopener noreferrer">https://bugstack.cn/md/road-map/ddd.html (opens new window)</a>- 你可以先参 <a href="https://bugstack.cn/md/road-map/ddd.html" target="_blank" rel="noopener noreferrer">DDD (opens new window)</a>篇，这样可以更好的理解模型概念和设计原则。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240419112246984.png" alt="image-20240419112246984" tabindex="0" loading="lazy"><figcaption>image-20240419112246984</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240419113046073.png" alt="image-20240419113046073" tabindex="0" loading="lazy"><figcaption>image-20240419113046073</figcaption></figure><p>此场景的业务用于对指定的用户进行<strong>晋升加薪调幅</strong>，但因为加薪会需要操作3个表，包括；雇员表 - 修改个人Title、薪资表 - 修改薪酬、调薪记录表 - 每一次加薪都写一条记录。</p><p>此场景用于为指定用户进行晋升加薪调整。加薪操作需涉及以下3个表:</p><ol><li><strong>雇员表</strong>:修改员工的职位(Title)信息</li><li><strong>薪资表</strong>:修改员工的薪酬数额</li><li><strong>调薪记录表</strong>:为每次加薪操作添加一条调薪记录</li></ol><h3 id="_1-model" tabindex="-1"><a class="header-anchor" href="#_1-model"><span>1. model</span></a></h3><h4 id="_1-1-值对象" tabindex="-1"><a class="header-anchor" href="#_1-1-值对象"><span>1.1 值对象</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> enum</span><span style="color:#E5C07B;"> EmployeePostVO</span><span style="color:#E06C75;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D19A66;">    T1</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-1&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;初级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T2</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-2&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;初级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T3</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-3&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;中级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T4</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-4&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;中级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T5</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-5&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;高级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T6</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-6&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;高级工程师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T7</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-7&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;架构师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#D19A66;">    T8</span><span style="color:#E06C75;">(</span><span style="color:#98C379;">&quot;T-8&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;架构师&quot;</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> code</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> desc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 省略部分</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>当一个实体对象中的一个值，是有多个范围时候，则需要定义出值对象。由于此类的值对象更贴近于当前的场景业务，所以一般不会被定义为共用的枚举。如此此类值范围，都会被定义为值对象。</p></blockquote><h4 id="_1-2-实体对象" tabindex="-1"><a class="header-anchor" href="#_1-2-实体对象"><span>1.2 实体对象</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Data</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Builder</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> EmployeeEntity</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 雇员级别 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> EmployeePostVO</span><span style="color:#E06C75;"> employeeLevel</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 雇员岗位Title */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> EmployeePostVO</span><span style="color:#E06C75;"> employeeTitle</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Data</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Builder</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> EmployeeSalaryAdjustEntity</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 总额调薪 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> BigDecimal</span><span style="color:#E06C75;"> adjustTotalAmount</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 基础调薪 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> BigDecimal</span><span style="color:#E06C75;"> adjustBaseAmount</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 绩效调薪 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> BigDecimal</span><span style="color:#E06C75;"> adjustMeritAmount</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>实体对象是对数据库对象的抽象，大多数时候是 1:1 的关系结构，在一些复杂的模型场景中会是1:n的结构。</p></blockquote><h4 id="_1-3-聚合对象" tabindex="-1"><a class="header-anchor" href="#_1-3-聚合对象"><span>1.3 聚合对象</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Data</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Builder</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> AdjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 雇员编号 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> employeeNumber</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 调薪单号 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> orderId</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 雇员实体 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> EmployeeEntity</span><span style="color:#E06C75;"> employeeEntity</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /** 雇员实体 */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> EmployeeSalaryAdjustEntity</span><span style="color:#E06C75;"> employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>聚合对象是对实体对象和值对象的封装，代表着一类业务的聚合。通常是作为 service 服务层中入参出现。</p></blockquote><h3 id="_2-repository" tabindex="-1"><a class="header-anchor" href="#_2-repository"><span>2. repository</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> ISalaryAdjustRepository</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#61AFEF;"> adjustSalary</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdjustSalaryApplyOrderAggregate</span><span style="color:#E06C75;font-style:italic;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在DDD中，仓储的设计采用了依赖倒置原则，由领域层定义接口，然后由依赖领域包的基础设施层来实现这些接口。</p><p>依赖倒置还自然地实现了PO（数据库持久化对象）的隔离，防止它们被外部直接使用。这种设计精巧地确保了结构的严谨性，避免了对象的滥用。</p></blockquote><h3 id="_3-service" tabindex="-1"><a class="header-anchor" href="#_3-service"><span>3. service</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> ISalaryAdjustApplyService</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#61AFEF;"> execSalaryAdjust</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdjustSalaryApplyOrderAggregate</span><span style="color:#E06C75;font-style:italic;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在简单场景下，确实不需要额外的设计模式。但对于复杂场景，设计模式的应用是必不可少的，以避免将所有代码都集中在如SalaryAdjustApplyService的实现类中，这样做会使得代码难以维护。同时，不应仅将聚合对象视为充血模型；实际上，充血结构应该涵盖领域内的每一个领域包，将状态和行为视为一个统一的整体。通过这样的模型结构设计，你可以更好地拆分业务对象并实现领域功能。</p></blockquote><h2 id="三、配置文件" tabindex="-1"><a class="header-anchor" href="#三、配置文件"><span>三、配置文件</span></a></h2><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240419170826012.png" alt="image-20240419170826012" tabindex="0" loading="lazy"><figcaption>image-20240419170826012</figcaption></figure><blockquote><p>工程中关于 MyBatis 的使用，在 lxf-dev-tech-app 下进行统一配置。因为所有配置信息都放到一起，比较方便管理，也利于线上上线后，提取配置文件。</p></blockquote><h2 id="四、功能实现" tabindex="-1"><a class="header-anchor" href="#四、功能实现"><span>四、功能实现</span></a></h2><p>接下来，我们将介绍一些 MyBatis 的功能。您可以结合 DDD 的理念来理解这些功能的实现位置，这不仅有助于学习 MyBatis，还能帮助您掌握 DDD 的设计理念。</p><h3 id="_1-插入-批量插入" tabindex="-1"><a class="header-anchor" href="#_1-插入-批量插入"><span>1. 插入&amp;批量插入</span></a></h3><p><strong>源码</strong>：<code>cn.cactusli.lxf.dev.tech.infrastructure.dao.IEmployeeDAO</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Mapper</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> IEmployeeDAO</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> insert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeePO</span><span style="color:#E06C75;font-style:italic;"> employee</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> insertList</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">EmployeePO</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">list</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    void</span><span style="color:#61AFEF;"> update</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeePO</span><span style="color:#E06C75;font-style:italic;"> employeePO</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    EmployeePO</span><span style="color:#61AFEF;"> queryEmployeeByEmployNumber</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> employNumber</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>xml</strong>：<code>employee_mapper.xml</code></p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">insert</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;insert&quot;</span><span style="color:#D19A66;"> parameterType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;cn.bugstack.xfg.dev.tech.infrastructure.po.EmployeePO&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    INSERT INTO employee(employee_number, employee_name, employee_level, employee_title, create_time, update_time)</span></span>
<span class="line"><span style="color:#ABB2BF;">    VALUES(#{employeeNumber}, #{employeeName}, #{employeeLevel}, #{employeeTitle}, now(), now())</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">insert</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">insert</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;insertList&quot;</span><span style="color:#D19A66;"> parameterType</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;java.util.List&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    INSERT INTO employee(employee_number, employee_name, employee_level, employee_title, create_time, update_time)</span></span>
<span class="line"><span style="color:#ABB2BF;">    VALUES</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">foreach</span><span style="color:#D19A66;"> collection</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;list&quot;</span><span style="color:#D19A66;"> item</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;item&quot;</span><span style="color:#D19A66;"> separator</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;,&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        (#{item.employeeNumber}, #{item.employeeName}, #{item.employeeLevel}, #{item.employeeTitle}, now(), now())</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">foreach</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">insert</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用配置文件的方式确实更便于维护，同时您也可以尝试使用 MyBatis 提供的注解方式来完成数据操作。这两种方式各有优势，您可以根据项目的具体需求来选择适合的方法。</p><h3 id="_2-事务-注解编程" tabindex="-1"><a class="header-anchor" href="#_2-事务-注解编程"><span>2. 事务&amp;注解编程</span></a></h3><p>Spring 提供的事务分为注解事务和编程事务，其中编程事务可以实现更细粒度的控制。</p><p>在 Spring Boot 中，事务管理的隔离级别可以通过 <code>@Transactional</code> 注解的 <code>isolation</code> 属性进行配置。常见的事务隔离级别包括：</p><ul><li><strong>DEFAULT</strong>：使用底层数据库的默认隔离级别。例如，MySQL 默认为 REPEATABLE READ，Oracle 默认为 READ COMMITTED。</li><li><strong>READ_UNCOMMITTED</strong>：最低的隔离级别，允许读取未提交的数据变更，可能会导致脏读、不可重复读和幻读问题。</li><li><strong>READ_COMMITTED</strong>：允许读取已经提交的数据变更，可以避免脏读问题，但可能会出现不可重复读和幻读问题。</li><li><strong>REPEATABLE_READ</strong>：保证同一事务中多次读取同一数据时，结果始终一致，可以避免脏读和不可重复读问题，但可能会出现幻读问题。</li><li><strong>SERIALIZABLE</strong>：最高的隔离级别，可以避免脏读、不可重复读和幻读问题，但会影响并发性能。</li></ul><p>Spring Boot 默认使用 DEFAULT 隔离级别。除非有特殊需求，通常建议使用默认隔离级别。</p><p>事务的传播行为也可以通过 <code>@Transactional</code> 注解的 <code>propagation</code> 属性进行配置。常用的传播行为包括：</p><ul><li><strong>Propagation.REQUIRED</strong>：默认的传播行为，如果当前存在事务，则加入该事务，否则新建一个事务。</li><li><strong>Propagation.SUPPORTS</strong>：如果当前存在事务，则加入该事务，否则以非事务的方式执行。</li><li><strong>Propagation.MANDATORY</strong>：如果当前存在事务，则加入该事务，否则抛出异常。</li><li><strong>Propagation.REQUIRES_NEW</strong>：无论当前是否存在事务，都会新建一个事务，如果当前存在事务，则将当前事务挂起。</li><li><strong>Propagation.NOT_SUPPORTED</strong>：以非事务的方式执行操作，如果当前存在事务，则将当前事务挂起。</li><li><strong>Propagation.NEVER</strong>：以非事务的方式执行操作，如果当前存在事务，则抛出异常。</li><li><strong>Propagation.NESTED</strong>：如果当前存在事务，则在该事务的嵌套事务中执行，否则新建一个事务。嵌套事务是独立于外部事务的，但如果外部事务回滚，则嵌套事务也会回滚。</li></ul><p><code>@Transactional</code> 注解还可以配置其他属性，例如隔离级别、超时时间、只读等，以满足不同的业务需求。</p><h4 id="_2-1-注解事务" tabindex="-1"><a class="header-anchor" href="#_2-1-注解事务"><span>2.1 注解事务</span></a></h4><p><strong>源码</strong>：<code>cn.cactusli.lxf.dev.tech.infrastructure.repository.SalaryAdjustRepository</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Transactional</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">rollbackFor</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> timeout</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 350</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> propagation</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Propagation</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">REQUIRED</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> isolation</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Isolation</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">DEFAULT</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> String</span><span style="color:#61AFEF;"> adjustSalary</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">AdjustSalaryApplyOrderAggregate</span><span style="color:#E06C75;"> adjustSalaryApplyOrderAggregate) {</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> employeeNumber </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeNumber</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> orderId </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOrderId</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeeEntity</span><span style="color:#E06C75;"> employeeEntity </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeEntity</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeeSalaryAdjustEntity</span><span style="color:#E06C75;"> employeeSalaryAdjustEntity </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> adjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeePO</span><span style="color:#E06C75;"> employeePO </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> EmployeePO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(employeeNumber)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeLevel</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeLevel</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getCode</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeTitle</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeTitle</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">getDesc</span><span style="color:#ABB2BF;">()).</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 更新岗位</span></span>
<span class="line"><span style="color:#E5C07B;">    employeeDAO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(employeePO);</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeeSalaryPO</span><span style="color:#E06C75;"> employeeSalaryPO </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> EmployeeSalaryPO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(employeeNumber)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">salaryTotalAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustTotalAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">salaryMeritAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustMeritAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">salaryBaseAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustBaseAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 更新薪酬</span></span>
<span class="line"><span style="color:#E5C07B;">    employeeSalaryDAO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(employeeSalaryPO);</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeeSalaryAdjustPO</span><span style="color:#E06C75;"> employeeSalaryAdjustPO </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> EmployeeSalaryAdjustPO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(employeeNumber)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">adjustOrderId</span><span style="color:#ABB2BF;">(orderId)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">adjustTotalAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustTotalAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">adjustBaseAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustMeritAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">adjustMeritAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getAdjustBaseAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 写入流水</span></span>
<span class="line"><span style="color:#E5C07B;">    employeeSalaryAdjustDAO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(employeeSalaryAdjustPO);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> orderId</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这个事务主要处理的是调整薪资的操作，具体实现则是放在仓储层。在实现时，需要特别注意事务注解的配置，确保事务的正确性和一致性。</p></blockquote><h4 id="_2-2-编程事务" tabindex="-1"><a class="header-anchor" href="#_2-2-编程事务"><span>2.2 编程事务</span></a></h4><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240419172347940.png" alt="image-20240419172347940" tabindex="0" loading="lazy"><figcaption>image-20240419172347940</figcaption></figure><blockquote><p>使用编程事务，需要在这里创建出一个事务模板，当然你不创建也可以使用。只不过这样统一的配置会更加方便。</p></blockquote><h5 id="_2-2-2-事务使用" tabindex="-1"><a class="header-anchor" href="#_2-2-2-事务使用"><span>2.2.2 事务使用</span></a></h5><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">private</span><span style="color:#E5C07B;"> TransactionTemplate</span><span style="color:#E06C75;"> transactionTemplate</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertEmployeeInfo</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">EmployeeInfoEntity</span><span style="color:#E06C75;"> employeeInfoEntity) {</span></span>
<span class="line"><span style="color:#E5C07B;">    transactionTemplate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execute</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> TransactionCallbackWithoutResult</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">        protected</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> doInTransactionWithoutResult</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">TransactionStatus</span><span style="color:#E06C75;font-style:italic;"> status</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">                EmployeePO</span><span style="color:#E06C75;"> employeePO</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> EmployeePO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeNumber</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">employeeName</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeName</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">employeeLevel</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeLevel</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">employeeTitle</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeTitle</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                employeeDAO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(employeePO);</span></span>
<span class="line"><span style="color:#E5C07B;">                EmployeeSalaryPO</span><span style="color:#E06C75;"> employeeSalaryPO</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> EmployeeSalaryPO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEmployeeNumber</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">salaryTotalAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSalaryTotalAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">salaryMeritAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSalaryMeritAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">salaryBaseAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">employeeInfoEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSalaryBaseAmount</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                employeeSalaryDAO</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">insert</span><span style="color:#ABB2BF;">(employeeSalaryPO);</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Exception</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">                status</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setRollbackOnly</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">                e</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">printStackTrace</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>之后，您可以选择手动处理事务，这种方式可以更细致地控制事务的每一个环节。通过手动处理，您可以根据操作的返回结果来决定是否需要回滚事务，而不是仅在发生异常时自动回滚。这样做增加了灵活性，允许根据具体情况做出最合适的决策</p></blockquote><h3 id="_3-插件-数据加密" tabindex="-1"><a class="header-anchor" href="#_3-插件-数据加密"><span>3. 插件&amp;数据加密</span></a></h3><p>在使用 MyBatis 时，插件开发是一个常见的应用场景，尤其是在进行数据的加解密、路由、日志记录等方面。现在，我将指导你如何实现一个针对指定字段的加解密处理插件，以确保敏感信息如雇员的姓名、薪资和级别不被有心人士盗取。</p><p><strong>源码</strong>：<code>cn.cactusli.lxf.dev.tech.plugin.FieldEncryptionAndDecryptionMybatisPlugin</code></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Intercepts</span><span style="color:#E06C75;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Signature</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">type</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Executor</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> method</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;update&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> args</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> {</span><span style="color:#E5C07B;">MappedStatement</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">})</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        @</span><span style="color:#E5C07B;">Signature</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">type</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Executor</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> method</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;query&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;"> args</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> {</span><span style="color:#E5C07B;">MappedStatement</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> RowBounds</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> ResultHandler</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#E06C75;">})</span></span>
<span class="line"><span style="color:#E06C75;">})</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> FieldEncryptionAndDecryptionMybatisPlugin</span><span style="color:#C678DD;"> implements</span><span style="color:#E5C07B;"> Interceptor</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 密钥，必须是16位</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> KEY </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;1898794876567654&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 偏移量，必须是16位</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> IV </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;1233214566547891&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> Object</span><span style="color:#61AFEF;"> intercept</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Invocation</span><span style="color:#E06C75;font-style:italic;"> invocation</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Throwable</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Object</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">args</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> invocation</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getArgs</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        MappedStatement</span><span style="color:#E06C75;"> mappedStatement</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (MappedStatement) args[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">        Object</span><span style="color:#E06C75;"> parameter</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> args[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#E5C07B;">        String</span><span style="color:#E06C75;"> sqlId</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> mappedStatement</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getId</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (parameter </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">sqlId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contains</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;insert&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">||</span><span style="color:#E5C07B;"> sqlId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contains</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;update&quot;</span><span style="color:#ABB2BF;">)) ) {</span></span>
<span class="line"><span style="color:#E5C07B;">            String</span><span style="color:#E06C75;"> columnName</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;employeeName&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (parameter </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> Map) {</span></span>
<span class="line"><span style="color:#E5C07B;">                List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">parameterList</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">Object</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">) ((</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">?</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">) parameter).</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;list&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">                for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;"> obj</span><span style="color:#C678DD;"> :</span><span style="color:#ABB2BF;"> parameterList) {</span></span>
<span class="line"><span style="color:#C678DD;">                    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">hasField</span><span style="color:#ABB2BF;">(obj, columnName)) {</span></span>
<span class="line"><span style="color:#E5C07B;">                        String</span><span style="color:#E06C75;"> fieldValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(obj, columnName);</span></span>
<span class="line"><span style="color:#E5C07B;">                        String</span><span style="color:#E06C75;"> encryptedValue</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> encrypt</span><span style="color:#ABB2BF;">(fieldValue);</span></span>
<span class="line"><span style="color:#E5C07B;">                        BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(obj, columnName, encryptedValue);</span></span>
<span class="line"><span style="color:#ABB2BF;">                    }</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">hasField</span><span style="color:#ABB2BF;">(parameter, columnName)) {</span></span>
<span class="line"><span style="color:#E5C07B;">                    String</span><span style="color:#E06C75;"> fieldValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(parameter, columnName);</span></span>
<span class="line"><span style="color:#E5C07B;">                    String</span><span style="color:#E06C75;"> encryptedValue</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> encrypt</span><span style="color:#ABB2BF;">(fieldValue);</span></span>
<span class="line"><span style="color:#E5C07B;">                    BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(parameter, columnName, encryptedValue);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        Object</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> invocation</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">proceed</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (result </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> sqlId</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contains</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;query&quot;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 查询操作，解密</span></span>
<span class="line"><span style="color:#E5C07B;">            String</span><span style="color:#E06C75;"> columnName</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;employeeName&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (result </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> List) {</span></span>
<span class="line"><span style="color:#E5C07B;">                List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">resultList</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;">Object</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;">) result;</span></span>
<span class="line"><span style="color:#C678DD;">                for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;"> obj</span><span style="color:#C678DD;"> :</span><span style="color:#ABB2BF;"> resultList) {</span></span>
<span class="line"><span style="color:#C678DD;">                    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#61AFEF;">hasField</span><span style="color:#ABB2BF;">(obj, columnName)) </span><span style="color:#C678DD;">continue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">                    String</span><span style="color:#E06C75;"> fieldValue</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(obj, columnName);</span></span>
<span class="line"><span style="color:#C678DD;">                    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">StringUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isBlank</span><span style="color:#ABB2BF;">(fieldValue)) </span><span style="color:#C678DD;">continue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">                    String</span><span style="color:#E06C75;"> decryptedValue</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> decrypt</span><span style="color:#ABB2BF;">(fieldValue);</span></span>
<span class="line"><span style="color:#E5C07B;">                    BeanUtils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setProperty</span><span style="color:#ABB2BF;">(obj, columnName, decryptedValue);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> result;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> String</span><span style="color:#61AFEF;"> encrypt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> content</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Cipher</span><span style="color:#E06C75;"> cipher</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInstance</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;AES/CBC/PKCS5Padding&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">raw</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> KEY</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        SecretKeySpec</span><span style="color:#E06C75;"> secretKeySpec</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> SecretKeySpec</span><span style="color:#ABB2BF;">(raw, </span><span style="color:#98C379;">&quot;AES&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        IvParameterSpec</span><span style="color:#E06C75;"> ivParameterSpec</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> IvParameterSpec</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">IV</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">        cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">ENCRYPT_MODE</span><span style="color:#ABB2BF;">, secretKeySpec, ivParameterSpec);</span></span>
<span class="line"><span style="color:#C678DD;">        byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">encrypted</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">doFinal</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">content</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> Base64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEncoder</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">encodeToString</span><span style="color:#ABB2BF;">(encrypted);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * AES解密</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> content</span><span style="color:#7F848E;font-style:italic;"> 密文</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> 明文</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@throws</span><span style="color:#E5C07B;font-style:italic;"> Exception</span><span style="color:#7F848E;font-style:italic;"> 异常</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> String</span><span style="color:#61AFEF;"> decrypt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> content</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Cipher</span><span style="color:#E06C75;"> cipher</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getInstance</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;AES/CBC/PKCS5Padding&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">raw</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> KEY</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">        SecretKeySpec</span><span style="color:#E06C75;"> secretKeySpec</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> SecretKeySpec</span><span style="color:#ABB2BF;">(raw, </span><span style="color:#98C379;">&quot;AES&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        IvParameterSpec</span><span style="color:#E06C75;"> ivParameterSpec</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> IvParameterSpec</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">IV</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getBytes</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">        cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">init</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">DECRYPT_MODE</span><span style="color:#ABB2BF;">, secretKeySpec, ivParameterSpec);</span></span>
<span class="line"><span style="color:#C678DD;">        byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">encrypted</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Base64</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDecoder</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">decode</span><span style="color:#ABB2BF;">(content);</span></span>
<span class="line"><span style="color:#C678DD;">        byte</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;">original</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> cipher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">doFinal</span><span style="color:#ABB2BF;">(encrypted);</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> String</span><span style="color:#ABB2BF;">(original);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> hasField</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;font-style:italic;"> obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> fieldName</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        Class</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;">clazz</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getClass</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        while</span><span style="color:#ABB2BF;"> (clazz </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">                Field</span><span style="color:#E06C75;"> field</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> clazz</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getDeclaredField</span><span style="color:#ABB2BF;">(fieldName);</span></span>
<span class="line"><span style="color:#C678DD;">                return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">NoSuchFieldException</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                clazz </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> clazz</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getSuperclass</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>代码定义了一个MyBatis插件，用于在数据库操作中自动加密和解密特定字段。插件通过拦截MyBatis的执行器（Executor）方法来实现这一功能。</p><p><strong>拦截器配置</strong>:</p><ul><li><p>使用</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Intercepts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注解定义了两个拦截点：</p><ul><li><code>update</code>方法，用于处理插入（insert）和更新（update）操作。</li><li><code>query</code>方法，用于处理查询（query）操作。</li></ul></li><li><p>每个拦截点都指定了要拦截的方法名和参数类型。</p></li></ul><p><strong>加密和解密逻辑</strong>:</p><ul><li>**密钥（KEY）<strong>和</strong>偏移量（IV）**都被硬编码在代码中，用于AES加密算法的配置。</li><li><code>encrypt</code>方法使用AES/CBC/PKCS5Padding模式进行加密。</li><li><code>decrypt</code>方法使用相同的模式进行解密。</li><li>加解密过程中，使用<code>SecretKeySpec</code>和<code>IvParameterSpec</code>来配置Cipher对象。</li></ul><p><strong>拦截方法实现</strong>:</p><ul><li><code>intercept</code>方法是插件的核心，它根据拦截到的SQL操作类型（插入/更新或查询）来处理数据。</li><li>对于插入和更新操作，代码检查参数对象中是否存在指定的字段（如<code>employeeName</code>），如果存在，则将该字段的值加密后再设置回对象。</li><li>对于查询操作，结果集中对应的字段值会被解密。</li><li>加密和解密操作仅在字段存在时进行，使用<code>hasField</code>方法来检查对象是否包含特定字段。</li></ul><p><strong>辅助方法</strong>:</p><ul><li><code>hasField</code>方法用于检查一个对象是否包含某个字段，即使该字段在父类中定义也能检测到。</li></ul><p>通过这种方式，插件确保了敏感数据在数据库存储时的安全性，并在应用层面保持数据的可用性和正确性。</p></blockquote><h2 id="五、测试验证" tabindex="-1"><a class="header-anchor" href="#五、测试验证"><span>五、测试验证</span></a></h2><h3 id="_1-调薪" tabindex="-1"><a class="header-anchor" href="#_1-调薪"><span>1. 调薪</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> test_execSalaryAdjust</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    AdjustSalaryApplyOrderAggregate</span><span style="color:#E06C75;"> adjustSalaryApplyOrderAggregate </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> AdjustSalaryApplyOrderAggregate</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeNumber</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;10000001&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">orderId</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;100908977676001&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeEntity</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeeEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">employeeLevel</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeePostVO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">T3</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">employeeTitle</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeePostVO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">T3</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">employeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">EmployeeSalaryAdjustEntity</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">builder</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">adjustTotalAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> BigDecimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">adjustBaseAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> BigDecimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">                    .</span><span style="color:#61AFEF;">adjustMeritAmount</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> BigDecimal</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> orderId </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> salaryAdjustApplyService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">execSalaryAdjust</span><span style="color:#ABB2BF;">(adjustSalaryApplyOrderAggregate);</span></span>
<span class="line"><span style="color:#E5C07B;">    log</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;调薪测试 req: {} res: {}&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJSONString</span><span style="color:#ABB2BF;">(adjustSalaryApplyOrderAggregate), orderId);</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">04</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">21.934</span><span style="color:#E06C75;"> [main            ] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  HikariDataSource       </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> HikariPool</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> Starting</span><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">04</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">22.396</span><span style="color:#E06C75;"> [main            ] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  HikariDataSource       </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> HikariPool</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> Start</span><span style="color:#E06C75;"> completed</span><span style="color:#ABB2BF;">.</span></span>
<span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">04</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">22.607</span><span style="color:#E06C75;"> [main            ] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  ISalaryAdjustApplyServiceTest </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> 调薪测试 req</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> {</span><span style="color:#98C379;">&quot;employeeEntity&quot;</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;">{</span><span style="color:#98C379;">&quot;employeeLevel&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;T3&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeTitle&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;T3&quot;</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeNumber&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;10000001&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeSalaryAdjustEntity&quot;</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;">{</span><span style="color:#98C379;">&quot;adjustBaseAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;adjustMeritAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;adjustTotalAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;orderId&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;100908977676002&quot;</span><span style="color:#E06C75;">} res</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;"> 100908977676002</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-查询" tabindex="-1"><a class="header-anchor" href="#_2-查询"><span>2. 查询</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> test_queryEmployInfo</span><span style="color:#E06C75;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    EmployeeInfoEntity</span><span style="color:#E06C75;"> employeeInfoEntity </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> employeeService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">queryEmployInfo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;10000001&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    log</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;测试结果：{}&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJSONString</span><span style="color:#ABB2BF;">(employeeInfoEntity));</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">06</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">.</span><span style="color:#FFFFFF;">467</span><span style="color:#E06C75;"> [main            ] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  IEmployeeServiceTest   </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> 测试结果：{</span><span style="color:#98C379;">&quot;employeeLevel&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;T-3&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeName&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;仙人球&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeNumber&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;10000001&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;employeeTitle&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;">&quot;中级工程师&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;salaryBaseAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">5300.00</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;salaryMeritAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">5300.00</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;salaryTotalAmount&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">5300.00</span><span style="color:#E06C75;">}</span></span>
<span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">06</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">.</span><span style="color:#FFFFFF;">475</span><span style="color:#E06C75;"> [SpringApplicationShutdownHook] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  HikariDataSource       </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> HikariPool</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> Shutdown</span><span style="color:#E06C75;"> initiated</span><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#D19A66;">24</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">04</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">19.18</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">06</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">.</span><span style="color:#FFFFFF;">480</span><span style="color:#E06C75;"> [SpringApplicationShutdownHook] </span><span style="color:#E5C07B;">INFO</span><span style="color:#E06C75;">  HikariDataSource       </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> HikariPool</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> -</span><span style="color:#E5C07B;"> Shutdown</span><span style="color:#E06C75;"> completed</span><span style="color:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,68)]))}const c=n(p,[["render",o],["__file","DDD 工程 Mybatis.html.vue"]]),i=JSON.parse(`{"path":"/tutorial/DDD%20%E6%8A%80%E6%9C%AF%E4%BD%93%E7%B3%BB/DDD%20%E5%B7%A5%E7%A8%8B%20Mybatis.html","title":"DDD 工程 Mybatis","lang":"zh-CN","frontmatter":{"title":"DDD 工程 Mybatis","subtitle":"DDD 工程 Mybatis","date":"2024-04-11T10:54:20.000Z","category":["DDD 技术体系"],"tag":["DDD 技术体系"],"order":5,"description":"一、案例背景 为了清晰明了地展示MyBatis的常用功能,我们设定了一个公司雇员薪酬管理的开发场景。 image-20240418180519158image-20240418180519158 首先，雇员员工和对应的薪资待遇，是一个1v1的关系。 之后，薪资表与调薪表，是一个1vn的关系。每次晋升、普调，都会有一条对应的调薪记录。 最后，有了这样3个...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/DDD%20%E6%8A%80%E6%9C%AF%E4%BD%93%E7%B3%BB/DDD%20%E5%B7%A5%E7%A8%8B%20Mybatis.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"DDD 工程 Mybatis"}],["meta",{"property":"og:description","content":"一、案例背景 为了清晰明了地展示MyBatis的常用功能,我们设定了一个公司雇员薪酬管理的开发场景。 image-20240418180519158image-20240418180519158 首先，雇员员工和对应的薪资待遇，是一个1v1的关系。 之后，薪资表与调薪表，是一个1vn的关系。每次晋升、普调，都会有一条对应的调薪记录。 最后，有了这样3个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/image-20240418180519158.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T09:48:33.000Z"}],["meta",{"property":"article:tag","content":"DDD 技术体系"}],["meta",{"property":"article:published_time","content":"2024-04-11T10:54:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T09:48:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDD 工程 Mybatis\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240418180519158.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240419112246984.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240419113046073.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240419170826012.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240419172347940.png\\"],\\"datePublished\\":\\"2024-04-11T10:54:20.000Z\\",\\"dateModified\\":\\"2024-05-30T09:48:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"一、案例背景","slug":"一、案例背景","link":"#一、案例背景","children":[]},{"level":2,"title":"二、领域模型","slug":"二、领域模型","link":"#二、领域模型","children":[{"level":3,"title":"1. model","slug":"_1-model","link":"#_1-model","children":[]},{"level":3,"title":"2. repository","slug":"_2-repository","link":"#_2-repository","children":[]},{"level":3,"title":"3. service","slug":"_3-service","link":"#_3-service","children":[]}]},{"level":2,"title":"三、配置文件","slug":"三、配置文件","link":"#三、配置文件","children":[]},{"level":2,"title":"四、功能实现","slug":"四、功能实现","link":"#四、功能实现","children":[{"level":3,"title":"1. 插入&批量插入","slug":"_1-插入-批量插入","link":"#_1-插入-批量插入","children":[]},{"level":3,"title":"2. 事务&注解编程","slug":"_2-事务-注解编程","link":"#_2-事务-注解编程","children":[]},{"level":3,"title":"3. 插件&数据加密","slug":"_3-插件-数据加密","link":"#_3-插件-数据加密","children":[]}]},{"level":2,"title":"五、测试验证","slug":"五、测试验证","link":"#五、测试验证","children":[{"level":3,"title":"1. 调薪","slug":"_1-调薪","link":"#_1-调薪","children":[]},{"level":3,"title":"2. 查询","slug":"_2-查询","link":"#_2-查询","children":[]}]}],"git":{"createdTime":1717062513000,"updatedTime":1717062513000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":1}]},"readingTime":{"minutes":10.94,"words":3283},"filePathRelative":"tutorial/DDD 技术体系/DDD 工程 Mybatis.md","localizedDate":"2024年4月11日","excerpt":"<h2>一、案例背景</h2>\\n<p>为了清晰明了地展示MyBatis的常用功能,我们设定了一个公司雇员薪酬管理的开发场景。</p>\\n<figure><img src=\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240418180519158.png\\" alt=\\"image-20240418180519158\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20240418180519158</figcaption></figure>\\n<ul>\\n<li>首先，雇员员工和对应的薪资待遇，是一个1v1的关系。</li>\\n<li>之后，薪资表与调薪表，是一个1vn的关系。每次晋升、普调，都会有一条对应的调薪记录。</li>\\n<li>最后，有了这样3个表，我们就可以很好的完成，员工的插入、批量插入，和事务操作调薪。</li>\\n</ul>","autoDesc":true}`);export{c as comp,i as data};
