import{_ as o,e as i,o as p,c,b as s,g as n,f as l,h as e}from"./app-BGJUA9Vz.js";const t={},r=s("h2",{id:"ubuntu-22-安装-jdk-17",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ubuntu-22-安装-jdk-17"},[s("span",null,"Ubuntu 22 安装 JDK 17")])],-1),d={href:"https://www.oracle.com/java/technologies/downloads/#java17",target:"_blank",rel:"noopener noreferrer"},u=e(`<figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920164316099.png" alt="image-20230920164316099" tabindex="0" loading="lazy"><figcaption>image-20230920164316099</figcaption></figure><p>把下载完完成的 <code>jdk-17_linux-x64_bin.tar.gz</code> 包通过 ssh 客户端中 ftp 模块上传至服务器 <code>/usr/local/src</code> 目录下 。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920171314313.png" alt="image-20230920171314313" tabindex="0" loading="lazy"><figcaption>image-20230920171314313</figcaption></figure><p><strong>解压压 jdk 文件到指定目录下</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/src#</span><span style="color:#98C379;"> tar</span><span style="color:#D19A66;"> -zxf</span><span style="color:#E06C75;"> $PWD</span><span style="color:#98C379;">/jdk-17_linux-x64_bin.tar.gz</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> /usr/local/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920172124024.png" alt="image-20230920172124024" tabindex="0" loading="lazy"><figcaption>image-20230920172124024</figcaption></figure><h3 id="配置环境" tabindex="-1"><a class="header-anchor" href="#配置环境"><span>配置环境</span></a></h3><p>使用如下命令打开文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local#</span><span style="color:#98C379;"> vim</span><span style="color:#98C379;"> ~/.bashrc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果vim 打不开先 安装vim编辑器</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local#</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> vim</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用命令sudo vim ~/.bashrc，然后在文件末尾添加如下内容：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> JAVA_HOME</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">usr</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">local</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">jdk-17</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">0</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">8</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> JRE_HOME</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">\${</span><span style="color:#E06C75;">JAVA_HOME</span><span style="color:#ABB2BF;">}/</span><span style="color:#E06C75;">jre</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> CLASSPATH</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">.:\${</span><span style="color:#E06C75;">JAVA_HOME</span><span style="color:#ABB2BF;">}/</span><span style="color:#E06C75;">lib</span><span style="color:#ABB2BF;">:\${</span><span style="color:#E06C75;">JRE_HOME</span><span style="color:#ABB2BF;">}/</span><span style="color:#E06C75;">lib</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#E06C75;"> PATH</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">\${</span><span style="color:#E06C75;">JAVA_HOME</span><span style="color:#ABB2BF;">}/</span><span style="color:#E06C75;">bin</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">$PATH</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后保存。输入以下命令, 令系统配置文件.bashrc立即生效 ：<code>source ~/.bashrc</code></p><p>在终端输入 <code>java -version</code> 出现如下信息代表 java 环境配置正确</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/jdk-17.0.8#</span><span style="color:#98C379;"> java</span><span style="color:#D19A66;"> -version</span></span>
<span class="line"><span style="color:#61AFEF;">java</span><span style="color:#98C379;"> version</span><span style="color:#98C379;"> &quot;17.0.8&quot;</span><span style="color:#98C379;"> 2023-07-18</span><span style="color:#98C379;"> LTS</span></span>
<span class="line"><span style="color:#61AFEF;">Java(TM</span><span style="color:#ABB2BF;">) SE Runtime Environment (</span><span style="color:#61AFEF;">build</span><span style="color:#98C379;"> 17.0.8+9-LTS-211</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">Java</span><span style="color:#98C379;"> HotSpot</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">TM</span><span style="color:#ABB2BF;">) </span><span style="color:#98C379;">64-Bit</span><span style="color:#98C379;"> Server</span><span style="color:#98C379;"> VM</span><span style="color:#ABB2BF;"> (build </span><span style="color:#98C379;">17.0.8+9-LTS-211,</span><span style="color:#98C379;"> mixed</span><span style="color:#98C379;"> mode,</span><span style="color:#98C379;"> sharing</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ubuntu-22-安装-docker" tabindex="-1"><a class="header-anchor" href="#ubuntu-22-安装-docker"><span>Ubuntu 22 安装 docker</span></a></h2><h3 id="卸载旧版本" tabindex="-1"><a class="header-anchor" href="#卸载旧版本"><span>卸载旧版本</span></a></h3><p>在安装 Docker 引擎之前，您必须首先确保任何 将卸载冲突的软件包。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/opt#</span><span style="color:#98C379;"> for</span><span style="color:#98C379;"> pkg</span><span style="color:#98C379;"> in</span><span style="color:#98C379;"> docker.io</span><span style="color:#98C379;"> docker-doc</span><span style="color:#98C379;"> docker-compose</span><span style="color:#98C379;"> podman-docker</span><span style="color:#98C379;"> containerd</span><span style="color:#98C379;"> runc</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">do</span><span style="color:#61AFEF;"> sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> remove</span><span style="color:#E06C75;"> $pkg</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-docker-脚本" tabindex="-1"><a class="header-anchor" href="#安装-docker-脚本"><span>安装 docker 脚本</span></a></h3><ol><li><p>设置 Docker 的 Apt 存储库。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># Add Docker&#39;s official GPG key:</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> update</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> ca-certificates</span><span style="color:#98C379;"> curl</span><span style="color:#98C379;"> gnupg</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -m</span><span style="color:#D19A66;"> 0755</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;"> /etc/apt/keyrings</span></span>
<span class="line"><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -fsSL</span><span style="color:#98C379;"> https://download.docker.com/linux/ubuntu/gpg</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> gpg</span><span style="color:#D19A66;"> --dearmor</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> chmod</span><span style="color:#98C379;"> a+r</span><span style="color:#98C379;"> /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Add the repository to Apt sources:</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  &quot;deb [arch=&quot;</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">dpkg</span><span style="color:#D19A66;"> --print-architecture</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span style="color:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#98C379;">  &quot;</span><span style="color:#ABB2BF;">$(</span><span style="color:#56B6C2;">.</span><span style="color:#98C379;"> /etc/os-release</span><span style="color:#ABB2BF;"> &amp;&amp; </span><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;</span><span style="color:#E06C75;">$VERSION_CODENAME</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">&quot; stable&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#61AFEF;">  sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /etc/apt/sources.list.d/docker.list</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">/dev/null</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> apt-get</span><span style="color:#98C379;"> update</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装 Docker 软件包。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/opt#</span><span style="color:#98C379;">  apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> docker-ce</span><span style="color:#98C379;"> docker-ce-cli</span><span style="color:#98C379;"> containerd.io</span><span style="color:#98C379;"> docker-buildx-plugin</span><span style="color:#98C379;"> docker-compose-plugin</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>通过运行 <code>docker version</code> 引擎安装是否成功，如果出现以下内容代表安装成功。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">Client:</span><span style="color:#98C379;"> Docker</span><span style="color:#98C379;"> Engine</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> Community</span></span>
<span class="line"><span style="color:#61AFEF;"> Version:</span><span style="color:#D19A66;">           24.0.6</span></span>
<span class="line"><span style="color:#61AFEF;"> API</span><span style="color:#98C379;"> version:</span><span style="color:#D19A66;">       1.43</span></span>
<span class="line"><span style="color:#61AFEF;"> Go</span><span style="color:#98C379;"> version:</span><span style="color:#98C379;">        go1.20.7</span></span>
<span class="line"><span style="color:#61AFEF;"> Git</span><span style="color:#98C379;"> commit:</span><span style="color:#98C379;">        ed223bc</span></span>
<span class="line"><span style="color:#61AFEF;"> Built:</span><span style="color:#98C379;">             Mon</span><span style="color:#98C379;"> Sep</span><span style="color:#D19A66;">  4</span><span style="color:#98C379;"> 12:31:44</span><span style="color:#D19A66;"> 2023</span></span>
<span class="line"><span style="color:#61AFEF;"> OS/Arch:</span><span style="color:#98C379;">           linux/amd64</span></span>
<span class="line"><span style="color:#61AFEF;"> Context:</span><span style="color:#98C379;">           default</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">Server:</span><span style="color:#98C379;"> Docker</span><span style="color:#98C379;"> Engine</span><span style="color:#98C379;"> -</span><span style="color:#98C379;"> Community</span></span>
<span class="line"><span style="color:#61AFEF;"> Engine:</span></span>
<span class="line"><span style="color:#61AFEF;">  Version:</span><span style="color:#D19A66;">          24.0.6</span></span>
<span class="line"><span style="color:#61AFEF;">  API</span><span style="color:#98C379;"> version:</span><span style="color:#D19A66;">      1.43</span><span style="color:#ABB2BF;"> (minimum </span><span style="color:#98C379;">version</span><span style="color:#D19A66;"> 1.12</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">  Go</span><span style="color:#98C379;"> version:</span><span style="color:#98C379;">       go1.20.7</span></span>
<span class="line"><span style="color:#61AFEF;">  Git</span><span style="color:#98C379;"> commit:</span><span style="color:#98C379;">       1a79695</span></span>
<span class="line"><span style="color:#61AFEF;">  Built:</span><span style="color:#98C379;">            Mon</span><span style="color:#98C379;"> Sep</span><span style="color:#D19A66;">  4</span><span style="color:#98C379;"> 12:31:44</span><span style="color:#D19A66;"> 2023</span></span>
<span class="line"><span style="color:#61AFEF;">  OS/Arch:</span><span style="color:#98C379;">          linux/amd64</span></span>
<span class="line"><span style="color:#61AFEF;">  Experimental:</span><span style="color:#D19A66;">     false</span></span>
<span class="line"><span style="color:#61AFEF;"> containerd:</span></span>
<span class="line"><span style="color:#61AFEF;">  Version:</span><span style="color:#D19A66;">          1.6.24</span></span>
<span class="line"><span style="color:#61AFEF;">  GitCommit:</span><span style="color:#98C379;">        61f9fd88f79f081d64d6fa3bb1a0dc71ec870523</span></span>
<span class="line"><span style="color:#61AFEF;"> runc:</span></span>
<span class="line"><span style="color:#61AFEF;">  Version:</span><span style="color:#D19A66;">          1.1.9</span></span>
<span class="line"><span style="color:#61AFEF;">  GitCommit:</span><span style="color:#98C379;">        v1.1.9-0-gccaecfc</span></span>
<span class="line"><span style="color:#61AFEF;"> docker-init:</span></span>
<span class="line"><span style="color:#61AFEF;">  Version:</span><span style="color:#D19A66;">          0.19.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>在 opt 目录下创建 shell 脚本把上面的脚本进行统一运行</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 使用touch命令创建一个空文件</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/opt#</span><span style="color:#98C379;"> touch</span><span style="color:#98C379;"> ubuntu22_docker_install.sh</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 使用chmod命令赋予文件执行权限</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/opt#</span><span style="color:#98C379;"> chmod</span><span style="color:#98C379;"> +x</span><span style="color:#98C379;"> ubuntu22_docker_install.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>完整脚本内容如下 ubuntu22_docker_install.sh</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这个脚本用于在Ubuntu上安装Docker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 添加Docker的官方GPG密钥:</span></span>
<span class="line"><span style="color:#61AFEF;">apt-get</span><span style="color:#98C379;"> update</span></span>
<span class="line"><span style="color:#61AFEF;">apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> ca-certificates</span><span style="color:#98C379;"> curl</span><span style="color:#98C379;"> gnupg</span></span>
<span class="line"><span style="color:#61AFEF;">install</span><span style="color:#D19A66;"> -m</span><span style="color:#D19A66;"> 0755</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;"> /etc/apt/keyrings</span></span>
<span class="line"><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -fsSL</span><span style="color:#98C379;"> https://download.docker.com/linux/ubuntu/gpg</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> gpg</span><span style="color:#D19A66;"> --dearmor</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"><span style="color:#61AFEF;">chmod</span><span style="color:#98C379;"> a+r</span><span style="color:#98C379;"> /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将仓库添加到Apt源中:</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  &quot;deb [arch=&quot;</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">dpkg</span><span style="color:#D19A66;"> --print-architecture</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span style="color:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#98C379;">  &quot;</span><span style="color:#ABB2BF;">$(</span><span style="color:#56B6C2;">.</span><span style="color:#98C379;"> /etc/os-release</span><span style="color:#ABB2BF;"> &amp;&amp; </span><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;</span><span style="color:#E06C75;">$VERSION_CODENAME</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#98C379;">&quot; stable&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#61AFEF;">  sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /etc/apt/sources.list.d/docker.list</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">/dev/null</span></span>
<span class="line"><span style="color:#61AFEF;">apt-get</span><span style="color:#98C379;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 安装Docker及相关组件:</span></span>
<span class="line"><span style="color:#61AFEF;">apt-get</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> docker-ce</span><span style="color:#98C379;"> docker-ce-cli</span><span style="color:#98C379;"> containerd.io</span><span style="color:#98C379;"> docker-buildx-plugin</span><span style="color:#98C379;"> docker-compose-plugin</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看 Docker 版本信息:</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;">  version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="离线安装docker" tabindex="-1"><a class="header-anchor" href="#离线安装docker"><span>离线安装docker</span></a></h3>`,27),g=s("br",null,null,-1),y=s("br",null,null,-1),m=s("br",null,null,-1),b={href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"},v=s("p",null,"1.访问下列链接，选择对应的Ubuntu版本：",-1),B={href:"https://download.docker.com/linux/ubuntu/dists/",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"pool/stable/ ，然后选择对应的CPU架构",-1),C=s("code",null,"amd64",-1),F=s("code",null,"armhf",-1),A=s("code",null,"arm64",-1),f=s("code",null,"s390x",-1),k={href:"https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/",target:"_blank",rel:"noopener noreferrer"},E=e(`<p>3.下载下列dep文件</p><ul><li><code>containerd.io_&lt;version&gt;_&lt;arch&gt;.deb</code></li><li><code>docker-ce_&lt;version&gt;_&lt;arch&gt;.deb</code></li><li><code>docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb</code></li><li><code>docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li><li><code>docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb</code></li></ul><p>4.使用下列命令安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> tar</span><span style="color:#D19A66;"> -zxvf</span><span style="color:#98C379;"> Ubuntu22_Docker_离线安装包.tar</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> dpkg</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> ./containerd.io_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">versio</span><span style="color:#ABB2BF;">n&gt;</span><span style="color:#98C379;">_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">arc</span><span style="color:#ABB2BF;">h&gt;</span><span style="color:#98C379;">.deb</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  ./docker-ce_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">versio</span><span style="color:#ABB2BF;">n&gt;</span><span style="color:#98C379;">_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">arc</span><span style="color:#ABB2BF;">h&gt;</span><span style="color:#98C379;">.deb</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  ./docker-ce-cli_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">versio</span><span style="color:#ABB2BF;">n&gt;</span><span style="color:#98C379;">_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">arc</span><span style="color:#ABB2BF;">h&gt;</span><span style="color:#98C379;">.deb</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  ./docker-buildx-plugin_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">versio</span><span style="color:#ABB2BF;">n&gt;</span><span style="color:#98C379;">_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">arc</span><span style="color:#ABB2BF;">h&gt;</span><span style="color:#98C379;">.deb</span><span style="color:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#98C379;">  ./docker-compose-plugin_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">versio</span><span style="color:#ABB2BF;">n&gt;</span><span style="color:#98C379;">_</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">arc</span><span style="color:#ABB2BF;">h&gt;</span><span style="color:#98C379;">.deb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> service</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> start</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6.设置docker自动启动</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> systemctl</span><span style="color:#98C379;"> enable</span><span style="color:#98C379;"> docker.service</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>7.同步本地时间</p><ol><li><p><strong>更新系统时间：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> timedatectl</span><span style="color:#98C379;"> set-ntp</span><span style="color:#98C379;"> on</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会启用网络时间协议（NTP）同步，使系统自动从网络服务器获取时间。</p></li><li><p><strong>选择上海时区：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> timedatectl</span><span style="color:#98C379;"> set-timezone</span><span style="color:#98C379;"> Asia/Shanghai</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会将系统时区设置为上海。</p></li><li><p><strong>检查时间和时区设置：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> timedatectl</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确保输出中的 &quot;Time zone&quot; 显示为 &quot;Asia/Shanghai&quot;。</p></li></ol><p>这样，你的系统时间就会被同步到上海的时间，并且自动与 NTP 服务器同步。</p><p>请注意，这些操作需要管理员权限，因此可能需要使用 <code>sudo</code> 命令执行。如果系统上尚未安装 NTP，你可能需要首先安装它，可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> apt</span><span style="color:#98C379;"> update</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#98C379;"> sudo</span><span style="color:#98C379;"> apt</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -y</span><span style="color:#98C379;"> ntp</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上述命令将确保 NTP 工具安装在系统上，然后你可以执行同步时间的步骤。</p><h3 id="配置镜像加速" tabindex="-1"><a class="header-anchor" href="#配置镜像加速"><span>配置镜像加速</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /etc/docker</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /etc/docker/daemon.json</span><span style="color:#ABB2BF;"> &lt;&lt;-</span><span style="color:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="color:#98C379;">{</span></span>
<span class="line"><span style="color:#98C379;">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span>
<span class="line"><span style="color:#98C379;">  &quot;log-opts&quot;: {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;max-size&quot;: &quot;500m&quot;,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;max-file&quot;: &quot;3&quot;</span></span>
<span class="line"><span style="color:#98C379;">  },</span></span>
<span class="line"><span style="color:#98C379;">  &quot;registry-mirrors&quot;: [&quot;https://avz7ojgz.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">EOF</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> systemctl</span><span style="color:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> systemctl</span><span style="color:#98C379;"> restart</span><span style="color:#98C379;"> docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在<code>daemon.json</code>文件中添加<code>log-driver</code>和<code>log-opts</code>参数，设置<code>max-size</code>和<code>max-file</code>。例如，设置单个日志文件的最大大小为500MB，并且最多保留3个日志文件</p></blockquote><h3 id="docker容器时区修改" tabindex="-1"><a class="header-anchor" href="#docker容器时区修改"><span>docker容器时区修改</span></a></h3><p>复制宿主机下面的zoneinfo文件到容器内</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> cp</span><span style="color:#98C379;"> /usr/share/zoneinfo/</span><span style="color:#98C379;"> aca1a3850163:/usr/share/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进去容器</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> exec</span><span style="color:#D19A66;"> -it</span><span style="color:#98C379;"> nstr-minio</span><span style="color:#98C379;"> /bin/bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在容器内设置时区，不用重启容器即可更改时间时区设置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ln</span><span style="color:#D19A66;"> -sf</span><span style="color:#98C379;"> /usr/share/zoneinfo/Asia/Shanghai</span><span style="color:#98C379;"> /etc/localtime</span></span>
<span class="line"><span style="color:#61AFEF;">cho</span><span style="color:#98C379;"> &quot;Asia/Shanghai&quot;</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">/etc/timezone</span></span>
<span class="line"><span style="color:#61AFEF;">date</span></span>
<span class="line"><span style="color:#61AFEF;">Tue</span><span style="color:#98C379;"> Mar</span><span style="color:#D19A66;"> 15</span><span style="color:#98C379;"> 16:47:19</span><span style="color:#98C379;"> CST</span><span style="color:#D19A66;"> 2022</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装开发环境" tabindex="-1"><a class="header-anchor" href="#安装开发环境"><span>安装开发环境</span></a></h3><h4 id="创建容器需要挂载的目录和文件" tabindex="-1"><a class="header-anchor" href="#创建容器需要挂载的目录和文件"><span><strong>创建容器需要挂载的目录和文件</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/jenkins</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gogs</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/mysql/conf</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/mysql/data</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/nginx</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/redis</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/nacos</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/seata</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/xxl-job</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/es</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/mq</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/config</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/logs</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/data</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>创建 mysql 配置文件：<code>vim /usr/local/dockerdata/mysql/conf/my.cnf</code></strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[mysqld]</span></span>
<span class="line"><span style="color:#61AFEF;">skip-name-resolve</span></span>
<span class="line"><span style="color:#E06C75;">character_set_server</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">utf8</span></span>
<span class="line"><span style="color:#E06C75;">datadir</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">/var/lib/mysql</span></span>
<span class="line"><span style="color:#E06C75;">server-id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">1010</span></span>
<span class="line"><span style="color:#E06C75;">innodb_fast_shutdown</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="编写-docker-compose-yml-文件" tabindex="-1"><a class="header-anchor" href="#编写-docker-compose-yml-文件"><span><strong>编写 docker-compose.yml 文件</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 使用 sudo 权限以管理员身份执行命令，并使用 tee 命令将数据写入文件</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /usr/local/dockerdata/docker-compose.yml</span><span style="color:#ABB2BF;"> &lt;&lt;-</span><span style="color:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="color:#98C379;">services:</span></span>
<span class="line"><span style="color:#98C379;">  mysql:</span></span>
<span class="line"><span style="color:#98C379;">    image: mysql:8.0.34</span></span>
<span class="line"><span style="color:#98C379;">    container_name: mysql</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;3306:3306&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      TZ: Asia/Shanghai</span></span>
<span class="line"><span style="color:#98C379;">      MYSQL_ROOT_PASSWORD: Nstr.234808</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/conf:/etc/mysql/conf.d&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/data:/var/lib/mysql&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">  gogs:</span></span>
<span class="line"><span style="color:#98C379;">    image: gogs/gogs:0.13</span></span>
<span class="line"><span style="color:#98C379;">    container_name: gogs</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;20022:22&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;3001:3000&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      TZ: Asia/Shanghai</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/gogs:/data&quot;</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    depends_on:</span></span>
<span class="line"><span style="color:#98C379;">      - mysql</span></span>
<span class="line"><span style="color:#98C379;">  jenkins:</span></span>
<span class="line"><span style="color:#98C379;">    image: jenkins/jenkins:2.414.2-lts-jdk17</span></span>
<span class="line"><span style="color:#98C379;">    container_name: jenkins</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;2080:8080&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;50000:50000&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;JAVA_OPTS=-server -Xms1024m -Xmx1024m -XX:MetaspaceSize=100m -XX:MaxMetaspaceSize=512m&quot;</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/jenkins:/var/jenkins_home&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/bin/docker:/usr/bin/docker&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">networks:</span></span>
<span class="line"><span style="color:#98C379;">  new:</span></span>
<span class="line"><span style="color:#98C379;">    name: segen</span></span>
<span class="line"><span style="color:#ABB2BF;">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写完成后运行<code>docker compose up -d</code>命令来启动应用容器，成功启动后 使用 <code>docker compose ps</code> 查看容器是否运行正常，如果启动正常会出现如图所示内容。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921162039463.png" alt="image-20230921162039463" tabindex="0" loading="lazy"><figcaption>image-20230921162039463</figcaption></figure><p><strong><code>docker compose</code> 一些常用命令</strong></p><ol><li><code>docker-compose up -d</code>：启动应用程序，创建并启动所有定义在 <code>docker-compose.yml</code> 文件中的容器。</li><li><code>docker-compose down</code>：停止并删除所有与应用程序相关的容器、网络和卷。通常与 <code>up</code> 配对使用，用于关闭应用程序。</li><li><code>docker-compose build</code>：根据 <code>Dockerfile</code> 构建应用程序所需的镜像。这个命令通常在修改了 Dockerfile 或其他构建上下文内容后使用。</li><li><code>docker-compose ps</code>：列出与应用程序关联的容器的状态信息，如容器 ID、名称、状态、端口映射等。</li><li><code>docker-compose logs</code>：查看应用程序中所有容器的日志输出。可以使用 <code>-f</code> 参数来实时监视日志。</li><li><code>docker-compose exec</code>：在运行中的容器中执行命令。例如：<code>docker-compose exec &lt;service-name&gt; &lt;command&gt;</code>。</li><li><code>docker-compose scale</code>：用于扩展指定服务的容器数量。例如：<code>docker-compose scale &lt;service-name&gt;=3</code> 将服务的容器数量扩展为 3 个。</li><li><code>docker-compose down -v</code>：停止并删除容器，同时删除关联的数据卷。</li><li><code>docker-compose restart</code>：重新启动已经运行的服务。</li><li><code>docker-compose pull</code>：从容器仓库拉取最新的镜像版本。</li><li><code>docker-compose config</code>：验证 <code>docker-compose.yml</code> 文件的语法，并将其解析成 Compose 文件的配置信息。</li></ol><p>这些是一些常见的 Docker Compose 命令，可以帮助你管理容器化应用程序的生命周期。你可以通过运行 <code>docker-compose --help</code> 命令来查看更多的命令选项和详细信息。</p><h4 id="容器都正常启动后首先配置-gogs" tabindex="-1"><a class="header-anchor" href="#容器都正常启动后首先配置-gogs"><span><strong>容器都正常启动后首先配置 gogs</strong></span></a></h4>`,38),x={href:"http://192.168.1.19:10880/",target:"_blank",rel:"noopener noreferrer"},q=e(`<figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921164829752.png" alt="image-20230921164829752" tabindex="0" loading="lazy"><figcaption>image-20230921164829752</figcaption></figure><h5 id="配置数据库" tabindex="-1"><a class="header-anchor" href="#配置数据库"><span><strong>配置数据库</strong></span></a></h5><p>首先创建DataBase，并设置字符集utf8_general_ci。为了安全可以创建单独的用户用于处理gogs服务。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"># 创建一个名为 </span><span style="color:#98C379;">&quot;gogs&quot;</span><span style="color:#ABB2BF;"> 的数据库，使用 UTF-</span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;"> 字符集</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#C678DD;"> DATABASE</span><span style="color:#61AFEF;"> gogs</span><span style="color:#C678DD;"> CHARACTER</span><span style="color:#C678DD;"> SET</span><span style="color:#ABB2BF;"> utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># 创建一个名为 </span><span style="color:#98C379;">&quot;gogs&quot;</span><span style="color:#ABB2BF;"> 的数据库用户，该用户只可以从任何 IP 地址进行访问，并设置密码为 </span><span style="color:#98C379;">&quot;Nstr.gogs808&quot;</span></span>
<span class="line"><span style="color:#C678DD;">CREATE</span><span style="color:#C678DD;"> USER</span><span style="color:#ABB2BF;"> &#39;</span><span style="color:#61AFEF;">gogs</span><span style="color:#ABB2BF;">&#39;@</span><span style="color:#98C379;">&#39;%&#39;</span><span style="color:#ABB2BF;"> IDENTIFIED </span><span style="color:#C678DD;">BY</span><span style="color:#98C379;"> &#39;Nstr.gogs808&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># 授予用户 </span><span style="color:#98C379;">&quot;gogs&quot;</span><span style="color:#ABB2BF;"> 从 IP 地址 % 访问数据库的所有权限</span></span>
<span class="line"><span style="color:#C678DD;">GRANT</span><span style="color:#ABB2BF;"> ALL PRIVILEGES </span><span style="color:#C678DD;">ON</span><span style="color:#ABB2BF;"> *.* </span><span style="color:#C678DD;">TO</span><span style="color:#98C379;"> &#39;gogs&#39;</span><span style="color:#ABB2BF;">@</span><span style="color:#98C379;">&#39;%&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># 刷新数据库权限，以使新的权限设置立即生效</span></span>
<span class="line"><span style="color:#ABB2BF;">FLUSH PRIVILEGES;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置数据库主机、用户名、密码等信息.</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921172222258.png" alt="image-20230921172222258" tabindex="0" loading="lazy"><figcaption>image-20230921172222258</figcaption></figure><h5 id="应用基本配置" tabindex="-1"><a class="header-anchor" href="#应用基本配置"><span><strong>应用基本配置</strong></span></a></h5><p>应用基本设置只需要修改运行系统用户、域名、应用URL，其它采用默认值。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921173134003.png" alt="image-20230921173134003" tabindex="0" loading="lazy"><figcaption>image-20230921173134003</figcaption></figure><h5 id="设置管理员账号" tabindex="-1"><a class="header-anchor" href="#设置管理员账号"><span><strong>设置管理员账号</strong></span></a></h5><p>配置管理员账号，让自己有所有权限。</p><h5 id="创建仓库" tabindex="-1"><a class="header-anchor" href="#创建仓库"><span>创建仓库</span></a></h5><p>用户可以创建新的仓库</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174049065.png" alt="image-20230921174049065" tabindex="0" loading="lazy"><figcaption>image-20230921174049065</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174434886.png" alt="image-20230921174434886" tabindex="0" loading="lazy"><figcaption>image-20230921174434886</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174503908.png" alt="image-20230921174503908" tabindex="0" loading="lazy"><figcaption>image-20230921174503908</figcaption></figure><h5 id="创建密钥" tabindex="-1"><a class="header-anchor" href="#创建密钥"><span><strong>创建密钥</strong></span></a></h5><p>用户要将仓库下载到本地，这需要配置密钥，具体操作如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 如果本地之前创建过密钥直接运行(cat ~/.ssh/*.pub)</span></span>
<span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> rsa</span><span style="color:#D19A66;"> -b</span><span style="color:#D19A66;"> 4096</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> &quot;w****@163.com&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 一路回车</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> ~/.ssh/</span></span>
<span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> id_rsa.pub</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将密钥添加到gogs上</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#跟踪连接远程仓库的信息</span></span>
<span class="line"><span style="color:#61AFEF;">ssh</span><span style="color:#D19A66;"> -vT</span><span style="color:#98C379;"> git@192.168.1.19</span><span style="color:#D19A66;"> -p</span><span style="color:#D19A66;"> 20022</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921175259260.png" alt="image-20230921175259260" tabindex="0" loading="lazy"><figcaption>image-20230921175259260</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921175406933.png" alt="image-20230921175406933" tabindex="0" loading="lazy"><figcaption>image-20230921175406933</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230921175504997.png" alt="image-20230921175504997" tabindex="0" loading="lazy"><figcaption>image-20230921175504997</figcaption></figure><h5 id="克隆仓库" tabindex="-1"><a class="header-anchor" href="#克隆仓库"><span>克隆仓库</span></a></h5><p>把刚刚创建好的仓库克隆到本地：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 克隆远程仓库方式</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> http://192.168.1.19:3001/segen/sgtest.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> sgtest</span></span>
<span class="line"><span style="color:#61AFEF;">touch</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;first commit&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> master</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 本地关联远程仓库方式</span></span>
<span class="line"><span style="color:#61AFEF;">touch</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> init</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;first commit&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> http://192.168.1.19:3001/segen/sgtest.git</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> master</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230922092007894.png" alt="image-20230922092007894" tabindex="0" loading="lazy"><figcaption>image-20230922092007894</figcaption></figure><h4 id="部署配置-gitlab" tabindex="-1"><a class="header-anchor" href="#部署配置-gitlab"><span>部署配置 gitlab</span></a></h4><p>首先创建 gitlab 需要挂载到本地的文件目录。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/config</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/logs</span></span>
<span class="line"><span style="color:#61AFEF;">root@segen-virtual-machine:/usr/local/dockerdata#</span><span style="color:#98C379;"> mkdir</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> /usr/local/dockerdata/gitlab-data/data</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写 docker compose 文件，使用 <code>docker compose up -d gitlab</code> 启动 <code>gitlab</code> 容器，docker ps 查看容器是否成功启动。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /usr/local/dockerdata/docker-compose.yml</span><span style="color:#ABB2BF;"> &lt;&lt;-</span><span style="color:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="color:#98C379;">services:</span></span>
<span class="line"><span style="color:#98C379;">  mysql:</span></span>
<span class="line"><span style="color:#98C379;">    image: mysql:8.0.34</span></span>
<span class="line"><span style="color:#98C379;">    container_name: mysql</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;3306:3306&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      TZ: Asia/Shanghai</span></span>
<span class="line"><span style="color:#98C379;">      MYSQL_ROOT_PASSWORD: Nstr.234808</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/conf:/etc/mysql/conf.d&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/data:/var/lib/mysql&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">  gitlab:</span></span>
<span class="line"><span style="color:#98C379;">    image: &#39;gitlab/gitlab-ce:latest&#39;</span></span>
<span class="line"><span style="color:#98C379;">    hostname: &#39;192.168.1.19&#39;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      GITLAB_OMNIBUS_CONFIG: |</span></span>
<span class="line"><span style="color:#98C379;">        external_url &#39;http://192.168.1.19:8929&#39;</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 2224</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;time_zone&#39;] = &#39;Asia/Shanghai&#39;</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;backup_keep_time&#39;] = 259200</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &#39;8929:8929&#39;</span></span>
<span class="line"><span style="color:#98C379;">      - &#39;2224:22&#39;</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/config:/etc/gitlab</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/logs:/var/log/gitlab</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/data:/var/opt/gitlab&#39;</span></span>
<span class="line"><span style="color:#98C379;">    shm_size: &#39;256m&#39;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new </span></span>
<span class="line"><span style="color:#98C379;">  jenkins:</span></span>
<span class="line"><span style="color:#98C379;">    image: jenkins/jenkins:2.414.2-lts-jdk17</span></span>
<span class="line"><span style="color:#98C379;">    container_name: jenkins</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;2080:8080&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;50000:50000&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;JAVA_OPTS=-server -Xms1024m -Xmx1024m -XX:MetaspaceSize=100m -XX:MaxMetaspaceSize=512m&quot;</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/jenkins:/var/jenkins_home&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/bin/docker:/usr/bin/docker&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">networks:</span></span>
<span class="line"><span style="color:#98C379;">  new:</span></span>
<span class="line"><span style="color:#98C379;">    name: segen</span></span>
<span class="line"><span style="color:#ABB2BF;">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925095938252.png" alt="image-20230925095938252" tabindex="0" loading="lazy"><figcaption>image-20230925095938252</figcaption></figure>`,32),_={href:"http://192.168.1.19:8929/",target:"_blank",rel:"noopener noreferrer"},D=e(`<p>然后登录管理员账号，查看初始化的管理员账号密码：<code>cat /usr/local/dockerdata/gitlab-data/config/initial_root_password</code></p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925100325814.png" alt="image-20230925100325814" tabindex="0" loading="lazy"><figcaption>image-20230925100325814</figcaption></figure><h5 id="新用户注册" tabindex="-1"><a class="header-anchor" href="#新用户注册"><span>新用户注册</span></a></h5><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925095531230.png" alt="image-20230925095531230" tabindex="0" loading="lazy"><figcaption>image-20230925095531230</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103513459.png" alt="image-20230925103513459" tabindex="0" loading="lazy"><figcaption>image-20230925103513459</figcaption></figure><p>注册完成后需要登录管理员账号进行用户的审核</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103613099.png" alt="image-20230925103613099" tabindex="0" loading="lazy"><figcaption>image-20230925103613099</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103653752.png" alt="image-20230925103653752" tabindex="0" loading="lazy"><figcaption>image-20230925103653752</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103740824.png" alt="image-20230925103740824" tabindex="0" loading="lazy"><figcaption>image-20230925103740824</figcaption></figure><p>等管理员审批通过后就可以直接登录了。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103925878.png" alt="image-20230925103925878" tabindex="0" loading="lazy"><figcaption>image-20230925103925878</figcaption></figure><h5 id="配置公钥" tabindex="-1"><a class="header-anchor" href="#配置公钥"><span>配置公钥</span></a></h5><p>登录完成后把本地 公钥添加到自己的账户里，方便克隆提交项目代码或文件。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925104321903.png" alt="image-20230925104321903" tabindex="0" loading="lazy"><figcaption>image-20230925104321903</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925104417399.png" alt="image-20230925104417399" tabindex="0" loading="lazy"><figcaption>image-20230925104417399</figcaption></figure><p>查询或生成密钥的具体操作如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 如果本地之前创建过密钥直接运行(cat ~/.ssh/*.pub)</span></span>
<span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> rsa</span><span style="color:#D19A66;"> -b</span><span style="color:#D19A66;"> 4096</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> &quot;w****@163.com&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 一路回车</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> ~/.ssh/</span></span>
<span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> id_rsa.pub</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将密钥添加到 gitlba 上</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h5><p>密钥成功添加后，接下来开始创建项目。关联项目，测试拉取和提交代码。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925105027968.png" alt="image-20230925105027968" tabindex="0" loading="lazy"><figcaption>image-20230925105027968</figcaption></figure><p>可以根据自己的实际需求，创建符合新要求的项目，这里我选择创建个空的项目。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925105042518.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925110606742.png" alt="image-20230925110606742" tabindex="0" loading="lazy"><figcaption>image-20230925110606742</figcaption></figure><p>Git全局设置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.name</span><span style="color:#98C379;"> &quot;xuanfeng li&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.email</span><span style="color:#98C379;"> &quot;1183895890@qq.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建仓库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> segen</span></span>
<span class="line"><span style="color:#61AFEF;">touch</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;add README&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> main</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111042421.png" alt="image-20230925111042421" tabindex="0" loading="lazy"><figcaption>image-20230925111042421</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111058204.png" alt="image-20230925111058204" tabindex="0" loading="lazy"><figcaption>image-20230925111058204</figcaption></figure><p>推送一个已有的文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> existing_folder</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> --initial-branch=main</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;Initial commit&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> main</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>推送一个现有的Git存储库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> existing_repo</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> rename</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> old-origin</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#D19A66;"> --all</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#D19A66;"> --tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>root 密码忘记使用脚本一键更新</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 替换为你的 GitLab 容器 ID</span></span>
<span class="line"><span style="color:#E06C75;">GITLAB_CONTAINER_ID</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">f7cad737731d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 在容器中运行 Rails 控制台，并执行密码重置操作</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> exec</span><span style="color:#D19A66;"> -it</span><span style="color:#E06C75;"> $GITLAB_CONTAINER_ID</span><span style="color:#98C379;"> /bin/bash</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> &#39;gitlab-rails console &lt;&lt;EOF</span></span>
<span class="line"><span style="color:#98C379;">user = User.where(id: 1).first</span></span>
<span class="line"><span style="color:#98C379;">new_password = &quot;Nstr.@#$%^&amp;*808&quot;</span></span>
<span class="line"><span style="color:#98C379;">user.password = new_password</span></span>
<span class="line"><span style="color:#98C379;">user.password_confirmation = new_password</span></span>
<span class="line"><span style="color:#98C379;">user.save!</span></span>
<span class="line"><span style="color:#98C379;">exit</span></span>
<span class="line"><span style="color:#98C379;">EOF&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重新启动 GitLab 容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> restart</span><span style="color:#E06C75;"> $GITLAB_CONTAINER_ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;新密码已生成：</span><span style="color:#E06C75;">$new_password</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装配置-jenkins" tabindex="-1"><a class="header-anchor" href="#安装配置-jenkins"><span>安装配置 jenkins</span></a></h4><h5 id="首先在服务器创建-jenkins-用户-然后赋予相应的权限。" tabindex="-1"><a class="header-anchor" href="#首先在服务器创建-jenkins-用户-然后赋予相应的权限。"><span>首先在服务器创建 jenkins 用户，然后赋予相应的权限。</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># useradd 命令用于创建新用户，-U 选项表示不要创建与用户名相同的用户组，-m 表示创建用户的家目录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这个命令创建了一个名为 &quot;jenkins&quot; 的用户，不会创建与其同名的用户组，并在家目录中存储用户文件</span></span>
<span class="line"><span style="color:#61AFEF;">useradd</span><span style="color:#D19A66;"> -U</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> jenkins</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># usermod 命令用于修改用户属性，-aG 选项用于将用户添加到指定的附加组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这个命令将用户 &quot;jenkins&quot; 添加到 &quot;docker&quot; 附加组中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这通常用于允许用户执行Docker相关的操作</span></span>
<span class="line"><span style="color:#61AFEF;">usermod</span><span style="color:#D19A66;"> -aG</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> jenkins</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这个命令将用户 &quot;jenkins&quot; 添加到 &quot;root&quot; 附加组中</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 添加用户到 &quot;root&quot; 附加组通常是不推荐的，因为它会给予用户超级用户权限，潜在的安全风险</span></span>
<span class="line"><span style="color:#61AFEF;">usermod</span><span style="color:#D19A66;"> -aG</span><span style="color:#98C379;"> root</span><span style="color:#98C379;"> jenkins</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># chmod 命令用于更改文件或目录的权限，777 表示最大的权限，即读取、写入和执行权限</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这个命令将文件 /var/run/docker.sock 的权限设置为最大，允许任何用户对其进行读取、写入和执行操作</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 这样的权限设置可能会存在安全风险，请小心使用，并确保只允许信任的用户或进程访问这个文件</span></span>
<span class="line"><span style="color:#61AFEF;">chmod</span><span style="color:#D19A66;"> 777</span><span style="color:#98C379;"> /var/run/docker.sock</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="创建-jenkins-需要挂载到本地的文件目录。" tabindex="-1"><a class="header-anchor" href="#创建-jenkins-需要挂载到本地的文件目录。"><span>创建 jenkins 需要挂载到本地的文件目录。</span></a></h5><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span>root@segen-virtual-machine:/usr/local/dockerdata# mkdir -p /usr/local/dockerdata/jenkins</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编写 docker compose 文件，使用 <code>docker compose up -d jenkins</code> 启动 <code> jenkins</code> 容器，docker ps 查看容器是否成功启动。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> tee</span><span style="color:#98C379;"> /usr/local/dockerdata/docker-compose.yml</span><span style="color:#ABB2BF;"> &lt;&lt;-</span><span style="color:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="color:#98C379;">services:</span></span>
<span class="line"><span style="color:#98C379;">  mysql:</span></span>
<span class="line"><span style="color:#98C379;">    image: mysql:8.0.34</span></span>
<span class="line"><span style="color:#98C379;">    container_name: mysql</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;3306:3306&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      TZ: Asia/Shanghai</span></span>
<span class="line"><span style="color:#98C379;">      MYSQL_ROOT_PASSWORD: Nstr.234808</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/conf:/etc/mysql/conf.d&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/mysql/data:/var/lib/mysql&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">  gitlab:</span></span>
<span class="line"><span style="color:#98C379;">    image: &#39;gitlab/gitlab-ce:latest&#39;</span></span>
<span class="line"><span style="color:#98C379;">    hostname: &#39;192.168.1.19&#39;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      GITLAB_OMNIBUS_CONFIG: |</span></span>
<span class="line"><span style="color:#98C379;">        external_url &#39;http://192.168.1.19:8929&#39;</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 2224</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;time_zone&#39;] = &#39;Asia/Shanghai&#39;</span></span>
<span class="line"><span style="color:#98C379;">        gitlab_rails[&#39;backup_keep_time&#39;] = 259200</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &#39;8929:8929&#39;</span></span>
<span class="line"><span style="color:#98C379;">      - &#39;2224:22&#39;</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/config:/etc/gitlab</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/logs:/var/log/gitlab</span></span>
<span class="line"><span style="color:#98C379;">      - /usr/local/dockerdata/gitlab-data/data:/var/opt/gitlab&#39;</span></span>
<span class="line"><span style="color:#98C379;">    shm_size: &#39;256m&#39;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new </span></span>
<span class="line"><span style="color:#98C379;">  jenkins:</span></span>
<span class="line"><span style="color:#98C379;">    image: jenkins/jenkins:2.414.2-lts-jdk17</span></span>
<span class="line"><span style="color:#98C379;">    container_name: jenkins</span></span>
<span class="line"><span style="color:#98C379;">    ports:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;2080:8080&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;50000:50000&quot;</span></span>
<span class="line"><span style="color:#98C379;">    environment:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;JAVA_OPTS=-server -Xms1024m -Xmx1024m -XX:MetaspaceSize=100m -XX:MaxMetaspaceSize=512m&quot;</span></span>
<span class="line"><span style="color:#98C379;">    volumes:</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/local/dockerdata/jenkins:/var/jenkins_home&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/usr/bin/docker:/usr/bin/docker&quot;</span></span>
<span class="line"><span style="color:#98C379;">      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span>
<span class="line"><span style="color:#98C379;">    restart: always</span></span>
<span class="line"><span style="color:#98C379;">    networks:</span></span>
<span class="line"><span style="color:#98C379;">      - new</span></span>
<span class="line"><span style="color:#98C379;">networks:</span></span>
<span class="line"><span style="color:#98C379;">  new:</span></span>
<span class="line"><span style="color:#98C379;">    name: segen</span></span>
<span class="line"><span style="color:#ABB2BF;">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如图所示 jenkins 成功启动</p><p>如图所示 jenkins 成功启动</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925112114344.png" alt="image-20230925112114344" tabindex="0" loading="lazy"><figcaption>image-20230925112114344</figcaption></figure><h5 id="新手入门" tabindex="-1"><a class="header-anchor" href="#新手入门"><span>新手入门</span></a></h5><p><strong>浏览器访问（ip:port），出现这个界面说明安装成功，查看Jenkins密码进行下一步。</strong></p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925112911075.png" alt="image-20230925112911075" tabindex="0" loading="lazy"><figcaption>image-20230925112911075</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925150954722.png" alt="image-20230925150954722" tabindex="0" loading="lazy"><figcaption>image-20230925150954722</figcaption></figure><p>创建用户</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925151108740.png" alt="image-20230925151108740" tabindex="0" loading="lazy"><figcaption>image-20230925151108740</figcaption></figure><p>保存实例</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925151203230.png" alt="image-20230925151203230" tabindex="0" loading="lazy"><figcaption>image-20230925151203230</figcaption></figure><p>进入Jenkins 后台管理系统</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925164237110.png" alt="image-20230925164237110" tabindex="0" loading="lazy"><figcaption>image-20230925164237110</figcaption></figure><h5 id="汉化插件安装" tabindex="-1"><a class="header-anchor" href="#汉化插件安装"><span>汉化插件安装</span></a></h5><ol><li><p>缓存插件列表</p><p>点击Manage Jenkins --》 Manage Plugins --》Available 等待浏览器加载完成。（这样做是为了把Jenkins官方的插件列表下载到本地）</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925164557413.png" alt="image-20230925164557413" tabindex="0" loading="lazy"><figcaption>image-20230925164557413</figcaption></figure></li><li><p>安装汉化插件</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925165106789.png" alt="image-20230925165106789" tabindex="0" loading="lazy"><figcaption>image-20230925165106789</figcaption></figure></li><li><p>重启 jenkins 使用命令<code>docker compose restart jenkins</code> ，此命令一定要在有 docker-compose.yml 目录下运行。<br><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925170357873.png" alt="image-20230925170357873" loading="lazy"></p></li></ol><h2 id="实现前端自动化部署" tabindex="-1"><a class="header-anchor" href="#实现前端自动化部署"><span>实现前端自动化部署</span></a></h2><p>实现 vue3 项目的自动化打包部署。</p><h3 id="安装-jenkins-插件" tabindex="-1"><a class="header-anchor" href="#安装-jenkins-插件"><span>安装 jenkins 插件</span></a></h3><p>选择：Dashboard 》系统管理 》 插件管理 》Available plugins；</p><p>搜索安装部署需要的插件 如：<code>gitlab</code>、<code>Publish Over SSH</code>、<code>nodejs</code></p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926101300694.png" alt="image-20230926101300694" tabindex="0" loading="lazy"><figcaption>image-20230926101300694</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926102006076.png" alt="image-20230926102006076" tabindex="0" loading="lazy"><figcaption>image-20230926102006076</figcaption></figure><h3 id="软件配置" tabindex="-1"><a class="header-anchor" href="#软件配置"><span>软件配置</span></a></h3><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926103718472.png" alt="image-20230926103718472" tabindex="0" loading="lazy"><figcaption>image-20230926103718472</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926153835689.png" alt="image-20230926153835689" tabindex="0" loading="lazy"><figcaption>image-20230926153835689</figcaption></figure><p>在系统管理中的全局工具配置里，可以把Maven、Gradle、NodeJ、Git 的环境都选一下，勾选自动安装。但这里有个小坑，就是点击保存后并不会直接下载安装，而是使用触发的时候才会。比如Maven需要再新建Job中选择Maven选项才会自动下载；Node的话则需要勾选这个选项才会自动下载。</p><h3 id="创建任务" tabindex="-1"><a class="header-anchor" href="#创建任务"><span>创建任务</span></a></h3><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926104421760.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="项目配置" tabindex="-1"><a class="header-anchor" href="#项目配置"><span>项目配置</span></a></h3><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111821912.png" alt="image-20230926111821912" tabindex="0" loading="lazy"><figcaption>image-20230926111821912</figcaption></figure><p>源码管理这里选择Git，然后将我们的Gitlab的项目地址放上去，Credentials里添加一个Gitlab的用户名密码。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111856214.png" alt="image-20230926111856214" tabindex="0" loading="lazy"><figcaption>image-20230926111856214</figcaption></figure><p>然后我们勾上这个<code>Build when a change is pushed to Gitlab</code>选项，后面这个URL拷贝一下。</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111927852.png" alt="image-20230926111927852" tabindex="0" loading="lazy"><figcaption>image-20230926111927852</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112101315.png" alt="image-20230926112101315" tabindex="0" loading="lazy"><figcaption>image-20230926112101315</figcaption></figure><p>将上面的URL拷贝到Gitlab中，点击Webhook：</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112337868.png" alt="image-20230926112337868" tabindex="0" loading="lazy"><figcaption>image-20230926112337868</figcaption></figure><p>如果出现这种错误提示，修改修改gitlab 的网络策略： <strong>Admin -&gt; Settings -&gt; Network -&gt; Outbound Requests -&gt; Allow requests to the local network from hooks and services（勾选上）</strong></p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112548422.png" alt="image-20230926112548422" tabindex="0" loading="lazy"><figcaption>image-20230926112548422</figcaption></figure><p>添加后，我们就可以在这里看到了该Hook，我们可以点击Test测试一下。如果出现如图所示提示的错误，则需要在Jenkins里设置一下安全策略，勾选以下按钮：</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112806978.png" alt="image-20230926112806978" tabindex="0" loading="lazy"><figcaption>image-20230926112806978</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926113003966.png" alt="image-20230926113003966" tabindex="0" loading="lazy"><figcaption>image-20230926113003966</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142345338.png" alt="image-20230926142345338" tabindex="0" loading="lazy"><figcaption>image-20230926142345338</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142431043.png" alt="image-20230926142431043" tabindex="0" loading="lazy"><figcaption>image-20230926142431043</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142709056.png" alt="image-20230926142709056" tabindex="0" loading="lazy"><figcaption>image-20230926142709056</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926143746226.png" alt="image-20230926143746226" tabindex="0" loading="lazy"><figcaption>image-20230926143746226</figcaption></figure><p>最后，我们编写一下需要Jenkins拿到这个事件后，执行什么。我们在构建里，添加执行Shell：</p><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926154918873.png" alt="image-20230926154918873" tabindex="0" loading="lazy"><figcaption>image-20230926154918873</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rm</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> pure-admin-thin</span></span>
<span class="line"><span style="color:#61AFEF;">sleep</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rmi</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> pure-admin-thin:1.0</span></span>
<span class="line"><span style="color:#61AFEF;">sleep</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> pure-admin-thin:1.0</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> ./Dockerfile</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">sleep</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> 8032:80</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> pure-admin-thin</span><span style="color:#98C379;"> pure-admin-thin:1.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在控制台里我们可以看到具体的执行信息，其实和我们在Linux上敲命令是一样的，出啥错解决啥就可以了。</p><h3 id="删除任务的构建历史" tabindex="-1"><a class="header-anchor" href="#删除任务的构建历史"><span>删除任务的构建历史</span></a></h3><p>进入 “Dashboard --&gt; 系统管理 --&gt; Script Console” 输入清理构建记录的脚本内容：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">item</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Jenkins</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">instance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getItemByFullName</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;your-job-name-here&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 替换成自己 JOB 名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//THIS WILL REMOVE ALL BUILD HISTORY</span></span>
<span class="line"><span style="color:#E5C07B;">item</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">builds</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">each</span><span style="color:#ABB2BF;">() { </span><span style="color:#E06C75;">build</span><span style="color:#56B6C2;"> -&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">  build</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">delete</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">item</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">updateNextBuildNumber</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">services</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  mysql</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;3306:3306&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      TZ</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Asia/Shanghai</span></span>
<span class="line"><span style="color:#E06C75;">      MYSQL_ROOT_PASSWORD</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">123</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./mysql/conf:/etc/mysql/conf.d&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./mysql/data:/var/lib/mysql&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">  nacos</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">nacos/nacos-server:v2.1.0-slim</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">nacos</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">MODE=standalone</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">JVM_XMS=512m</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">JVM_XMX=512m</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">MYSQL_SERVICE_HOST=mysql</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">MYSQL_SERVICE_USER=root</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">MYSQL_SERVICE_PASSWORD=123</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">MYSQL_SERVICE_DB_NAME=nacos</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">SPRING_DATASOURCE_PLATFORM=mysql</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;8848:8848&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    depends_on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">  xxl-job</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">xuxueli/xxl-job-admin:2.3.0</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">xxljob</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;8880:8880&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./xxl-job/logs:/data/applogs&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./xxl-job/application.properties:/config/application.properties&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    depends_on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#E06C75;">  seata</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">seataio/seata-server</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">seata</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;8099:8099&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;7099:7099&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      SEATA_IP</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">192.168.150.101</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./seata:/seata-server/resources&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    depends_on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">nacos</span></span>
<span class="line"><span style="color:#E06C75;">  gogs</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">gogs/gogs:0.12</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">gogs</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;10022:22&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;10880:3000&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      TZ</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Asia/Shanghai</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./gogs:/data&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    depends_on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">mysql</span></span>
<span class="line"><span style="color:#E06C75;">  jenkins</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">jenkins/jenkins:2.361.1-lts-jdk11</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">jenkins</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;18080:8080&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;50000:50000&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;JAVA_OPTS=-server -Xms1024m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./jenkins:/var/jenkins_home&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;/usr/bin/docker:/usr/bin/docker&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">  mq</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">rabbitmq:3.8-management</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">mq</span></span>
<span class="line"><span style="color:#E06C75;">    hostname</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">mq</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;15672:15672&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;5672:5672&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">      RABBITMQ_DEFAULT_USER</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">tjxt</span></span>
<span class="line"><span style="color:#E06C75;">      RABBITMQ_DEFAULT_PASS</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">123321</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./mq/plugins:/plugins&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./mq/data:/var/lib/rabbitmq&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./mq/conf:/etc/rabbitmq&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">  es</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">elasticsearch:7.12.1</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">es</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;9200:9200&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;9300:9300&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    environment</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;discovery.type=single-node&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./es/data:/usr/share/elasticsearch/data&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./es/plugins:/usr/share/elasticsearch/plugins&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">  redis</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">redis</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">redis</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;6379:6379&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./redis/conf:/usr/local/etc/redis&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./redis/data:/tmp&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    entrypoint</span><span style="color:#ABB2BF;">: [ </span><span style="color:#98C379;">&quot;redis-server&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;/usr/local/etc/redis/redis.conf&quot;</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#E06C75;">  nginx</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    image</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">nginx</span></span>
<span class="line"><span style="color:#E06C75;">    container_name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">nginx</span></span>
<span class="line"><span style="color:#E06C75;">    ports</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;80:80&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    volumes</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./nginx/conf/nginx.conf:/etc/nginx/nginx.conf&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">&quot;./nginx/html:/etc/nginx/html&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    restart</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">always</span></span>
<span class="line"><span style="color:#E06C75;">    networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">new</span></span>
<span class="line"><span style="color:#E06C75;">networks</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">  new</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">tjxt</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,96);function w(j,S){const a=i("ExternalLinkIcon");return p(),c("div",null,[r,s("p",null,[n("在浏览器输入："),s("a",d,[n("Java Downloads | Oracle"),l(a)]),n("，选择 jdk17 进行下载。")]),u,s("p",null,[n("参考Docker官方文档："),g,n(" Install Docker Engine on Ubuntu | Docker Documentation"),y,n(" Jumpstart your client-side server applications with Docker Engine on Ubuntu. This guide details prerequisites and multiple methods to install."),m,s("a",b,[n("https://docs.docker.com/engine/install/ubuntu/"),l(a)])]),v,s("p",null,[s("a",B,[n("https://download.docker.com/linux/ubuntu/dists/"),l(a)])]),s("p",null,[n("2.访问问 "),h,n(" ("),C,n(", "),F,n(", "),A,n(", or "),f,n(")，如Ubuntu 22.04 amd64链接："),s("a",k,[n("Index of linux/ubuntu/dists/jammy/pool/stable/amd64/"),l(a)])]),E,s("p",null,[n("访问："),s("a",x,[n("http://192.168.1.19:10880/"),l(a)]),n(" 安装页面，这里ip 替换成你的虚拟机的ip。")]),q,s("p",null,[n("在浏览器输入："),s("a",_,[n("http://192.168.1.19:8929/"),l(a)]),n(" 访问 gitlab 的 web 界面。")]),D])}const T=o(t,[["render",w],["__file","服务器基础环境配置.html.vue"]]),O=JSON.parse(`{"path":"/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html","title":"服务器基础环境配置","lang":"zh-CN","frontmatter":{"title":"服务器基础环境配置","subtitle":"devops","date":"2024-04-03T14:06:01.000Z","category":["devops"],"tag":["devops"],"order":1,"description":"Ubuntu 22 安装 JDK 17 在浏览器输入：Java Downloads | Oracle，选择 jdk17 进行下载。 image-20230920164316099image-20230920164316099 把下载完完成的 jdk-17_linux-x64_bin.tar.gz 包通过 ssh 客户端中 ftp 模块上传至服务器 /u...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"服务器基础环境配置"}],["meta",{"property":"og:description","content":"Ubuntu 22 安装 JDK 17 在浏览器输入：Java Downloads | Oracle，选择 jdk17 进行下载。 image-20230920164316099image-20230920164316099 把下载完完成的 jdk-17_linux-x64_bin.tar.gz 包通过 ssh 客户端中 ftp 模块上传至服务器 /u..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920164316099.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-14T09:04:54.000Z"}],["meta",{"property":"article:author","content":"Cactus li"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:published_time","content":"2024-04-03T14:06:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-14T09:04:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务器基础环境配置\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920164316099.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920171314313.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920172124024.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921162039463.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921164829752.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921172222258.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921173134003.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174049065.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174434886.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921174503908.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921175259260.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230921175406933.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230921175504997.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230922092007894.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925095938252.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925100325814.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925095531230.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103513459.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103613099.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103653752.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103740824.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925103925878.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925104321903.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925104417399.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925105027968.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925105042518.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925110606742.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111042421.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111058204.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925112114344.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925112911075.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925150954722.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925151108740.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925151203230.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925164237110.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925164557413.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925165106789.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925170357873.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926101300694.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926102006076.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926103718472.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926153835689.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926104421760.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111821912.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111856214.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926111927852.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112101315.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112337868.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112548422.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926112806978.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926113003966.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142345338.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142431043.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926142709056.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926143746226.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230926154918873.png\\"],\\"datePublished\\":\\"2024-04-03T14:06:01.000Z\\",\\"dateModified\\":\\"2024-05-14T09:04:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"Ubuntu 22 安装 JDK 17","slug":"ubuntu-22-安装-jdk-17","link":"#ubuntu-22-安装-jdk-17","children":[{"level":3,"title":"配置环境","slug":"配置环境","link":"#配置环境","children":[]}]},{"level":2,"title":"Ubuntu 22 安装 docker","slug":"ubuntu-22-安装-docker","link":"#ubuntu-22-安装-docker","children":[{"level":3,"title":"卸载旧版本","slug":"卸载旧版本","link":"#卸载旧版本","children":[]},{"level":3,"title":"安装 docker 脚本","slug":"安装-docker-脚本","link":"#安装-docker-脚本","children":[]},{"level":3,"title":"离线安装docker","slug":"离线安装docker","link":"#离线安装docker","children":[]},{"level":3,"title":"配置镜像加速","slug":"配置镜像加速","link":"#配置镜像加速","children":[]},{"level":3,"title":"docker容器时区修改","slug":"docker容器时区修改","link":"#docker容器时区修改","children":[]},{"level":3,"title":"安装开发环境","slug":"安装开发环境","link":"#安装开发环境","children":[]}]},{"level":2,"title":"实现前端自动化部署","slug":"实现前端自动化部署","link":"#实现前端自动化部署","children":[{"level":3,"title":"安装 jenkins 插件","slug":"安装-jenkins-插件","link":"#安装-jenkins-插件","children":[]},{"level":3,"title":"软件配置","slug":"软件配置","link":"#软件配置","children":[]},{"level":3,"title":"创建任务","slug":"创建任务","link":"#创建任务","children":[]},{"level":3,"title":"项目配置","slug":"项目配置","link":"#项目配置","children":[]},{"level":3,"title":"删除任务的构建历史","slug":"删除任务的构建历史","link":"#删除任务的构建历史","children":[]}]}],"git":{"createdTime":1712125706000,"updatedTime":1715677494000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":1}]},"readingTime":{"minutes":16.59,"words":4978},"filePathRelative":"tutorial/系统开发部署/服务器基础环境配置.md","localizedDate":"2024年4月3日","excerpt":"<h2>Ubuntu 22 安装 JDK 17</h2>\\n<p>在浏览器输入：<a href=\\"https://www.oracle.com/java/technologies/downloads/#java17\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java Downloads | Oracle</a>，选择 jdk17 进行下载。</p>\\n<figure><img src=\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230920164316099.png\\" alt=\\"image-20230920164316099\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20230920164316099</figcaption></figure>","autoDesc":true}`);export{T as comp,O as data};
