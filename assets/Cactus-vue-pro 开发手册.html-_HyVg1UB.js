import{_ as p,e as o,o as t,c as i,b as s,g as a,f as e,h as l}from"./app-RUna3lnI.js";const c={},r=s("h2",{id:"演示系统访问地址",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#演示系统访问地址"},[s("span",null,"演示系统访问地址")])],-1),d={href:"http://192.168.1.218/",target:"_blank",rel:"noopener noreferrer"},g=l(`<h2 id="gitlab-代码仓库访问地址" tabindex="-1"><a class="header-anchor" href="#gitlab-代码仓库访问地址"><span>gitlab 代码仓库访问地址</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">http://192.168.1.19:8929/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="新用户注册" tabindex="-1"><a class="header-anchor" href="#新用户注册"><span>新用户注册</span></a></h2><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/dsfsdfsdfsdf.png" alt="dsfsdfsdfsdf" tabindex="0" loading="lazy"><figcaption>dsfsdfsdfsdf</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/i5103513459.png" alt="i5103513459" tabindex="0" loading="lazy"><figcaption>i5103513459</figcaption></figure><p>注册完成后需要登录管理员账号进行用户的审核</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103613099.png" alt="image-20230925103613099" tabindex="0" loading="lazy"><figcaption>image-20230925103613099</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103653752.png" alt="image-20230925103653752" tabindex="0" loading="lazy"><figcaption>image-20230925103653752</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103740824.png" alt="image-20230925103740824" tabindex="0" loading="lazy"><figcaption>image-20230925103740824</figcaption></figure><p>等管理员审批通过后就可以直接登录了。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103925878.png" alt="image-20230925103925878" tabindex="0" loading="lazy"><figcaption>image-20230925103925878</figcaption></figure><h3 id="配置公钥" tabindex="-1"><a class="header-anchor" href="#配置公钥"><span>配置公钥</span></a></h3><p>登录完成后把本地 公钥添加到自己的账户里，方便克隆提交项目代码或文件。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925104321903.png" alt="image-20230925104321903" tabindex="0" loading="lazy"><figcaption>image-20230925104321903</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925104417399.png" alt="image-20230925104417399" tabindex="0" loading="lazy"><figcaption>image-20230925104417399</figcaption></figure><p>查询或生成密钥的具体操作如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 如果本地之前创建过密钥直接运行(cat ~/.ssh/*.pub)</span></span>
<span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> rsa</span><span style="color:#D19A66;"> -b</span><span style="color:#D19A66;"> 4096</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> &quot;w****@163.com&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 一路回车</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> ~/.ssh/</span></span>
<span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> id_rsa.pub</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 将密钥添加到 gitlba 上</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>密钥成功添加后，接下来开始创建项目。关联项目，测试拉取和提交代码。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925105027968.png" alt="image-20230925105027968" tabindex="0" loading="lazy"><figcaption>image-20230925105027968</figcaption></figure><p>可以根据自己的实际需求，创建符合新要求的项目，这里我选择创建个空的项目。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-202230925105042518.png" alt="image-202230925105042518" tabindex="0" loading="lazy"><figcaption>image-202230925105042518</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20230925110606742.png" alt="image-20230925110606742" tabindex="0" loading="lazy"><figcaption>image-20230925110606742</figcaption></figure><p>Git全局设置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.name</span><span style="color:#98C379;"> &quot;xuanfeng li&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> config</span><span style="color:#D19A66;"> --global</span><span style="color:#98C379;"> user.email</span><span style="color:#98C379;"> &quot;1183895890@qq.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建仓库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> segen</span></span>
<span class="line"><span style="color:#61AFEF;">touch</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> README.md</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;add README&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> main</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111042421.png" alt="image-20230925111042421" tabindex="0" loading="lazy"><figcaption>image-20230925111042421</figcaption></figure><figure><img src="https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111058204.png" alt="image-20230925111058204" tabindex="0" loading="lazy"><figcaption>image-20230925111058204</figcaption></figure><p>推送一个已有的文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> existing_folder</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> init</span><span style="color:#D19A66;"> --initial-branch=main</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;Initial commit&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> main</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>推送一个现有的Git存储库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> existing_repo</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> rename</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> old-origin</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> ssh://git@192.168.1.19:2224/cactusli/segen.git</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#D19A66;"> --all</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#D19A66;"> -u</span><span style="color:#98C379;"> origin</span><span style="color:#D19A66;"> --tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="克隆代码" tabindex="-1"><a class="header-anchor" href="#克隆代码"><span>克隆代码</span></a></h2>`,34),u={href:"http://www.iocoder.cn/categories/IDEA/?self",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/YunaiV/ruoyi-vue-pro",target:"_blank",rel:"noopener noreferrer"},b=s("blockquote",null,[s("p",null,"注意：不建议使用 Eclipse，因为它没有支持 Lombok 和 Mapstruct 插件。")],-1),m=s("p",null,"克隆完成后，耐心等待 Maven 下载完相关的依赖。一定要注意：",-1),h=s("p",null,[a("① 默认情况下，使用 "),s("code",null,"master"),a(" 分支，它对应 JDK 8 + Spring Boot 2.7.18 版本。")],-1),v=s("figure",null,[s("img",{src:"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117162651217.png",alt:"image-20240117162651217",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20240117162651217")],-1),B=s("h2",{id:"启动后端项目",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#启动后端项目"},[s("span",null,"启动后端项目")])],-1),C={href:"http://192.168.1.19:8929/root/cactus-vue-pro/-/tree/main/cactus-server",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"cactus-server",-1),A=l(`<h3 id="编译项目" tabindex="-1"><a class="header-anchor" href="#编译项目"><span>编译项目</span></a></h3><p>第一步，使用 IDEA 打开 Terminal 终端，在 <strong>根目录</strong> 下直接执行 <code>mvn clean install package &#39;-Dmaven.test.skip=true&#39;</code> 命令，将项目进行初始化的打包，预计需要 1 分钟左右。成功后，控制台日志如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[INFO] BUILD SUCCESS</span></span>
<span class="line"><span style="color:#ABB2BF;">[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#ABB2BF;">[INFO] Total time:  01:20 min</span></span>
<span class="line"><span style="color:#ABB2BF;">[INFO] Finished at: 2024-01-17T16:32:52+08:00</span></span>
<span class="line"><span style="color:#ABB2BF;">[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目"><span>启动项目</span></a></h3>`,4),E={href:"http://192.168.1.19:8929/root/cactus-vue-pro/-/blob/main/cactus-server/src/main/java/cn/cactus/server/CactusServerApplication.java",target:"_blank",rel:"noopener noreferrer"},F=s("blockquote",null,[s("p",null,"启动还是报类不存在？"),s("p",null,"可能是 IDEA 的 bug，点击 [File -> Invalidate Caches] 菜单，清空下缓存，重启后在试试看。")],-1),D=s("figure",null,[s("img",{src:"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117163750094.png",alt:"image-20240117163750094",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20240117163750094")],-1),x={href:"http://127.0.0.1:48080/",target:"_blank",rel:"noopener noreferrer"},k=l(`<blockquote><p>友情提示：注意，默认配置下，后端项目启动在 48080 端口。</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">{</span></span>
<span class="line"><span style="color:#98C379;">    &quot;code&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;"> 401</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;data&quot;</span><span style="color:#C678DD;">:</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;msg&quot;</span><span style="color:#C678DD;">:</span><span style="color:#98C379;"> &quot;账号未登录&quot;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接口文档" tabindex="-1"><a class="header-anchor" href="#接口文档"><span>接口文档</span></a></h2><h3 id="apifox-使用" tabindex="-1"><a class="header-anchor" href="#apifox-使用"><span>apifox 使用</span></a></h3>`,4),_={href:"https://app.apifox.com/user/login%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BD%BF%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E7%99%BB%E9%99%86%E3%80%82",target:"_blank",rel:"noopener noreferrer"},w=s("p",null,"创建项目",-1),q=s("figure",null,[s("img",{src:"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125164810915.png",alt:"image-20240125164810915",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20240125164810915")],-1),O=s("p",null,"配置项目为测试环境",-1),I=s("figure",null,[s("img",{src:"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165012809.png",alt:"image-20240125165012809",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20240125165012809")],-1),R={href:"http://127.0.0.1:48081/v3/api-docs",target:"_blank",rel:"noopener noreferrer"},S=l('<figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165144825.png" alt="image-20240125165144825" tabindex="0" loading="lazy"><figcaption>image-20240125165144825</figcaption></figure><p>填入此文档链接：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165407930.png" alt="image-20240125165407930" tabindex="0" loading="lazy"><figcaption>image-20240125165407930</figcaption></figure><p>选择需要调试的接口进行调试，先填写 Header , Authorization -&gt; Bearer test1</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165637901.png" alt="image-20240125165637901" tabindex="0" loading="lazy"><figcaption>image-20240125165637901</figcaption></figure><h3 id="knife4j-使用" tabindex="-1"><a class="header-anchor" href="#knife4j-使用"><span>Knife4j 使用</span></a></h3>',6),P={href:"http://127.0.0.1:48080/doc.html",target:"_blank",rel:"noopener noreferrer"},T=l('<figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240117164437679.png" alt="image-20240117164437679" tabindex="0" loading="lazy"><figcaption>image-20240117164437679</figcaption></figure><p>① 点击任意一个接口，进行接口的调用测试。这里，使用「管理后台 - 大型科研仪器」的“获得大型科研仪器分页”举例子。</p><p>② 点击左侧「调试」按钮，并将请求头部的 Authorization` 勾选上。</p><p>其中，<code>Authorization</code> 的 <code>&quot;Bearer test&quot;</code> 后面为用户编号（模拟哪个用户操作）。</p><p>如果不勾选，会出现 <code>&quot;账号未登录&quot;</code> 错误。</p><p>③ 点击「发送」按钮，即可发起一次 API 的调用。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240117164923974.png" alt="image-20240117164923974" tabindex="0" loading="lazy"><figcaption>image-20240117164923974</figcaption></figure><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><h3 id="后端结构" tabindex="-1"><a class="header-anchor" href="#后端结构"><span>后端结构</span></a></h3><p>每个模块包含两个 Maven Module，分别是：</p><table><thead><tr><th>Maven Module</th><th>作用</th></tr></thead><tbody><tr><td><code>cactus-module-xxx-api</code></td><td>提供给其它模块的 API 定义</td></tr><tr><td><code>cactus-module-xxx-biz</code></td><td>模块的功能的具体实现</td></tr></tbody></table><p>例如说，<code>cactus-module-infra</code> 想要访问 <code>cactus-module-system</code> 的用户、部门等数据，需要引入 <code>cactus-module-system-api</code> 子模块。示例如下：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240117165549813.png" alt="image-20240117165549813" tabindex="0" loading="lazy"><figcaption>image-20240117165549813</figcaption></figure><blockquote><p>疑问：为什么设计 <code>cactus-module-xxx-api</code> 模块呢？</p><ol><li><strong>明确</strong>需要提供给其它模块的 API 定义，方便未来迁移微服务架构。</li><li>模块之间可能会存在相互引用的情况，虽然说从系统设计上要尽量避免，但是有时在快速迭代的情况下，可能会出现。此时，通过只引用对方模块的 API 子模块，解决相互引用导致 Maven 无法打包的问题。</li></ol></blockquote><p><code>cactus-module-xxx-api</code> 子模块的项目结构如下：</p><table><thead><tr><th>所在包</th><th>类</th><th>作用</th></tr></thead><tbody><tr><td><code>api</code></td><td>Api 接口</td><td>提供给其它模块的 API 接口</td></tr><tr><td><code>api</code></td><td>DTO 类</td><td>Api 接口的入参 ReqDTO、出参 RespDTO</td></tr><tr><td><code>enums</code></td><td>Enum 类</td><td>字段的枚举</td></tr><tr><td><code>enums</code></td><td>DictTypeConstants 类</td><td>数据字典的枚举</td></tr><tr><td><code>enums</code></td><td>ErrorCodeConstants 类</td><td>错误码的枚举</td></tr></tbody></table><p><code>cactus-module-xxx-biz</code> 子模块的项目结构如下：</p><table><thead><tr><th>所在包</th><th>类</th><th>作用</th></tr></thead><tbody><tr><td><code>api</code></td><td>ApiImpl 类</td><td>提供给其它模块的 API 实现类</td></tr><tr><td><code>controler.admin</code></td><td>Controller 类</td><td>提供给管理后台的 RESTful API，默认以 <code>admin-api/</code> 作为前缀。 例如 <code>admin-api/system/auth/login</code> 登录接口</td></tr><tr><td><code>controler.admin</code></td><td>VO 类</td><td>Admin Controller 接口的入参 ReqVO、出参 RespVO</td></tr><tr><td><code>controler.app</code></td><td>Controller 类，<strong>以 App 为前缀</strong></td><td>提供给用户 App 的 RESTful API，默认以 <code>app-api/</code> 作为前缀。 例如 <code>app-api/member/auth/login</code> 登录接口</td></tr><tr><td><code>controler.app</code></td><td>VO 类，<strong>以 App 为前缀</strong></td><td>App Controller 接口的入参 ReqVO、出参 RespVO</td></tr><tr><td><code>controler</code></td><td><code>.http</code> 文件</td><td><a href="">IDEA Http Client 插件 (opens new window)</a>，模拟请求 RESTful 接口</td></tr><tr><td><code>service</code></td><td>Service 接口</td><td>业务逻辑的接口定义</td></tr><tr><td><code>service</code></td><td>ServiceImpl 类</td><td>业务逻辑的实现类</td></tr><tr><td><code>dal</code></td><td>-</td><td>Data Access Layer，数据访问层</td></tr><tr><td><code>dal.dataobject</code></td><td>DO 类</td><td>Data Object，映射数据库表、或者 Redis 对象</td></tr><tr><td><code>dal.mysql</code></td><td>Mapper 接口</td><td>数据库的操作</td></tr><tr><td><code>dal.redis</code></td><td>RedisDAO 类</td><td>Redis 的操作</td></tr><tr><td><code>convert</code></td><td>Convert 接口</td><td>DTO / VO / DO 等对象之间的转换器</td></tr><tr><td><code>job</code></td><td>Job 类</td><td>定时任务</td></tr><tr><td><code>mq</code></td><td>-</td><td>Message Queue，消息队列</td></tr><tr><td><code>mq.message</code></td><td>Message 类</td><td>发送和消费的消息</td></tr><tr><td><code>mq.producer</code></td><td>Producer 类</td><td>消息的生产者</td></tr><tr><td><code>mq.consumer</code></td><td>Producer 类</td><td>消息的消费者</td></tr><tr><td><code>framework</code></td><td>-</td><td>模块自身的框架封装</td></tr></tbody></table><blockquote><p>疑问：为什么 Controller 分成 Admin 和 App 两种？</p><p>提供给 Admin 和 App 的 RESTful API 接口是不同的，拆分后更加清晰。</p></blockquote><blockquote><p>疑问：为什么 VO 分成 Admin 和 App 两种？</p><p>相同功能的 RESTful API 接口，对于 Admin 和 App 传入的参数、返回的结果都可能是不同的。例如说，Admin 查询某个用户的基本信息时，可以返回全部字段；而 App 查询时，不会返回 mobile 手机等敏感字段。</p></blockquote><blockquote><p>疑问：为什么 DO 不作为 Controller 的出入参？</p><ol><li>明确每个 RESTful API 接口的出入参。例如说，创建部门时，只需要传入 name、parentId 字段，使用 DO 接参就会导致 type、createTime、creator 等字段可以被传入，导致前端同学一脸懵逼。</li><li>每个 RESTful API 有自己独立的 VO，可以更好的设置 Swagger 注解、Validator 校验规则，而让 DO 保持整洁，专注映射好数据库表。</li></ol></blockquote><blockquote><p>疑问：为什么操作 Redis 需要通过 RedisDAO？</p><p>Service 直接使用 RedisTemplate 操作 Redis，导致大量 Redis 的操作细节和业务逻辑杂糅在一起，导致代码不够整洁。通过 RedisDAO 类，将每个 Redis Key 像一个数据表一样对待，清晰易维护。</p></blockquote><h2 id="mybatis-联表-分页查询" tabindex="-1"><a class="header-anchor" href="#mybatis-联表-分页查询"><span>MyBatis 联表&amp;分页查询</span></a></h2><p>对于需要链表查询的场景，建议也是写 MyBatis XML，使用方法比较简单。</p>',24),j={href:"https://mybatisplusjoin.com/",target:"_blank",rel:"noopener noreferrer"},U=l(`<p>这里，以查询 <code>system_users</code> 和 <code>system_dept</code> 联表，查询部门名为 <code>仙人球源码</code>、用户状态为开启的用户列表。</p><h3 id="案例一-字段平铺" tabindex="-1"><a class="header-anchor" href="#案例一-字段平铺"><span>案例一：字段平铺</span></a></h3><p>① 创建 AdminUserDetailDO 类，继承 AdminUserDO 类，并添加 <code>deptName</code> 平铺。代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Data</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> AdminUserDetailDO</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> AdminUserDO</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> deptName</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 在 AdminUserMapper 创建 selectListByStatusAndDeptName 方法，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Mapper</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> AdminUserMapper</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> BaseMapperX</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    default</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDetailDO</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> selectList2ByStatusAndDeptName</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Integer</span><span style="color:#E06C75;font-style:italic;"> status</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> deptName</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#61AFEF;"> selectJoinList</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdminUserDetailDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> MPJLambdaWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">&gt;() </span><span style="color:#7F848E;font-style:italic;">// 查询 List</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">selectAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 查询 system_users 表的 all 所有字段</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">selectAs</span><span style="color:#ABB2BF;">(DeptDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getName, AdminUserDetailDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getDeptName) </span><span style="color:#7F848E;font-style:italic;">// 查询 system_dept 表的 name 字段，使用 deptName 字段“部分”返回</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(AdminUserDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getStatus, status) </span><span style="color:#7F848E;font-style:italic;">// WHERE system_users.status = ? 【部门名为 \`仙人球源码\`】</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">leftJoin</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DeptDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, DeptDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getId, AdminUserDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getDeptId) </span><span style="color:#7F848E;font-style:italic;">// 联表 WHERE system_users.dept_id = system_dept.id </span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(DeptDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getName, deptName) </span><span style="color:#7F848E;font-style:italic;">// WHERE system_dept.name = ? 【用户状态为开启】</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例二-字段内嵌" tabindex="-1"><a class="header-anchor" href="#案例二-字段内嵌"><span>案例二：字段内嵌</span></a></h3><p>① 创建 AdminUserDetailDO 类，继承 AdminUserDO 类，并添加 <code>dept</code> 部门。代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Data</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> AdminUserDetail2DO</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> AdminUserDO</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#E5C07B;"> DeptDO</span><span style="color:#E06C75;"> dept</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 在 AdminUserMapper 创建 selectListByStatusAndDeptName 方法，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Mapper</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> AdminUserMapper</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> BaseMapperX</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    default</span><span style="color:#E5C07B;"> List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDetail2DO</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> selectListByStatusAndDeptName</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Integer</span><span style="color:#E06C75;font-style:italic;"> status</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;font-style:italic;"> deptName</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#61AFEF;"> selectJoinList</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdminUserDetail2DO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> MPJLambdaWrapper</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">&gt;()</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">selectAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">AdminUserDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">selectAssociation</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DeptDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, AdminUserDetail2DO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getDept) </span><span style="color:#7F848E;font-style:italic;">// 重点差异点：查询 system_dept 表的 name 字段，使用 dept 字段“整个”返回</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(AdminUserDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getStatus, status)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">leftJoin</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">DeptDO</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">class</span><span style="color:#ABB2BF;">, DeptDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getId, AdminUserDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getDeptId)</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">eq</span><span style="color:#ABB2BF;">(DeptDO</span><span style="color:#C678DD;">::</span><span style="color:#ABB2BF;">getName, deptName)</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前端项目" tabindex="-1"><a class="header-anchor" href="#前端项目"><span>前端项目</span></a></h2><p>采用开源 vue-element-plus-admin 模板</p>`,13),z={href:"https://gitee.com/kailong110120130/vue-element-plus-admin",target:"_blank",rel:"noopener noreferrer"},M={href:"https://kailong110120130.gitee.io/vue-element-plus-admin",target:"_blank",rel:"noopener noreferrer"},N={href:"https://element-plus-admin-doc.cn/guide/introduction.html",target:"_blank",rel:"noopener noreferrer"},V=l(`<h3 id="前后端联调需要更改的设置" tabindex="-1"><a class="header-anchor" href="#前后端联调需要更改的设置"><span><strong>前后端联调需要更改的设置</strong></span></a></h3><p>在项目根目录中找到</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把请求路径、传路径中的 ip:port 换成需要联调后台开发人员的地址</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">开发环境</span></span>
<span class="line"><span style="color:#E5C07B;">NODE_ENV</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">development</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">VITE_DEV</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">请求路径</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_BASE_URL</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;http://92.168.1.218:48080&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">上传路径</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_UPLOAD_URL</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;http://92.168.1.218:48080/admin-api/infra/file/upload&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">接口前缀</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_API_BASEPATH</span><span style="color:#56B6C2;">=/</span><span style="color:#E06C75;">dev</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">接口地址</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_API_URL</span><span style="color:#56B6C2;">=/</span><span style="color:#E06C75;">admin</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">打包路径</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_BASE_PATH</span><span style="color:#56B6C2;">=/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">是否删除debugger</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_DROP_DEBUGGER</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E5C07B;">是否删除console</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">log</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_DROP_CONSOLE</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">是否sourcemap</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_SOURCEMAP</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">输出路径</span></span>
<span class="line"><span style="color:#E5C07B;">VITE_OUT_DIR</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">dist</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如下图所示</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240123152905084.png" alt="image-20240123152905084" tabindex="0" loading="lazy"><figcaption>image-20240123152905084</figcaption></figure><h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git"><span>安装 git</span></a></h2><h3 id="生成ssh-key" tabindex="-1"><a class="header-anchor" href="#生成ssh-key"><span>生成ssh key</span></a></h3><p>在git窗口输入</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ssh-keygen</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> rsa</span><span style="color:#D19A66;"> -C</span><span style="color:#98C379;"> &quot;1183895890@qq.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后一直回车<br> 这个指令会要求你提供一个位置和文件名去存放键值对和密码，你可以点击Enter键去使用默认值。<br> 如图：</p>`,12),L={href:"https://lixuanfengs.github.io/2020/02/26/Git%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/d740562x323.png",target:"_blank",rel:"noopener noreferrer"},H=s("img",{src:"https://lixuanfengs.github.io/2020/02/26/Git服务器搭建/d740562x323.png",alt:"img",tabindex:"0",loading:"lazy"},null,-1),J=s("figcaption",null,"img",-1),G=l(`<p><strong>查看生成的公钥</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">cat</span><span style="color:#98C379;"> ~/.ssh/id_rsa.pub</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),K={href:"https://lixuanfengs.github.io/2020/02/26/Git%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/fce0a9e_564x114.png",target:"_blank",rel:"noopener noreferrer"},Z=s("img",{src:"https://lixuanfengs.github.io/2020/02/26/Git服务器搭建/fce0a9e_564x114.png",alt:"img",tabindex:"0",loading:"lazy"},null,-1),W=s("figcaption",null,"img",-1),X=l(`<p>复制这个公钥放到你的个人设置中的SSH/My SSH Keys下<br> 请完整拷贝从ssh-开始直到你的用户名和主机名为止的内容。</p><p>到这里的时候，你的公钥已经创建成功了.</p><p>最后把生成好的 SSH Keys 填入 gitlab 中 点击右上角的用户头像 settings &gt; SSH keys .</p><h3 id="克隆项目" tabindex="-1"><a class="header-anchor" href="#克隆项目"><span>克隆项目</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> http.sslverify=</span><span style="color:#D19A66;">false</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://gitlab.example.com/online_groups/onlineserviceplatform.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建分支" tabindex="-1"><a class="header-anchor" href="#创建分支"><span>创建分支</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> checkout</span><span style="color:#D19A66;"> -b</span><span style="color:#98C379;"> release-1.0</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> branch</span><span style="color:#98C379;"> 查看本地所有分支</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看和更改本地连接的远程仓库" tabindex="-1"><a class="header-anchor" href="#查看和更改本地连接的远程仓库"><span>查看和更改本地连接的远程仓库</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> 查看所有远程仓库，</span><span style="color:#98C379;"> git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> xxx</span><span style="color:#98C379;"> 查看指定远程仓库地址</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> rm</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> 删除远程仓库</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> remote</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> git@gitlab.example.com:online_groups/onlineserviceplatform.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pull 拉取服务器代码</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> http.sslverify=</span><span style="color:#D19A66;">false</span><span style="color:#98C379;"> pull</span><span style="color:#7F848E;font-style:italic;"> #提交代码之前先更新</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="push-向服务器推送代码" tabindex="-1"><a class="header-anchor" href="#push-向服务器推送代码"><span>push 向服务器推送代码</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> http.sslverify=</span><span style="color:#D19A66;">false</span><span style="color:#98C379;"> push</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> release-1.0</span><span style="color:#7F848E;font-style:italic;"> #把刚刚创建的分支提交到版本控制器，登录系统发起合并请求&gt;管理员通过&gt;合并分支完成</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="提交一个-pull-request-pr" tabindex="-1"><a class="header-anchor" href="#提交一个-pull-request-pr"><span>提交一个 Pull Request (PR)</span></a></h3><p>步骤如下：</p><ol><li><p><strong>创建一个分支：</strong></p><p>在你的本地仓库中创建一个新分支，用于进行修改和提交。这个分支通常是基于要修改的目标分支（例如 <code>main</code>）创建的。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> checkout</span><span style="color:#D19A66;"> -b</span><span style="color:#98C379;"> feature_branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>git switch</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> switch</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> feature_branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>进行修改：</strong></p><p>在新分支上进行你的修改，确保完成后进行提交。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;描述你的修改&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>推送分支到远程仓库：</strong></p><p>将新创建的分支推送到远程仓库。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> feature_branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>创建 Pull Request：</strong></p><p>打开你的远程仓库，选择你刚才推送的分支，并选择创建 Pull Request。在 PR 中，选择目标分支（通常是 <code>main</code>）作为要合并到的分支。</p></li><li><p><strong>填写 PR 描述：</strong></p><p>提供一个清晰而有意义的 PR 描述，解释你的修改、添加的功能或解决的问题。</p></li><li><p><strong>等待审查：</strong></p><p>团队成员会审查你的代码，并提出反馈。可能需要在 PR 中进行一些讨论和修改。</p></li><li><p><strong>合并 Pull Request：</strong></p><p>一旦审查通过，你或者其他有权限的团队成员可以将你的分支合并到目标分支。</p></li><li><p><strong>删除分支（可选）：</strong></p><p>一旦你的分支被合并，你可以选择删除本地和远程的该分支。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 本地删除分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> branch</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;"> feature_branch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 远程删除分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#98C379;"> origin</span><span style="color:#D19A66;"> --delete</span><span style="color:#98C379;"> feature_branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>这样，你就成功地提交了一个 Pull Request。这是一种标准的协作流程，确保了代码的质量和团队的协作。</p><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> branch</span><span style="color:#98C379;"> //查看分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> branch</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">nam</span><span style="color:#ABB2BF;">e&gt; </span><span style="color:#98C379;">//创建分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> checkout</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">nam</span><span style="color:#ABB2BF;">e&gt; </span><span style="color:#98C379;">//切换分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> checkout</span><span style="color:#D19A66;"> -b</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">nam</span><span style="color:#ABB2BF;">e&gt; </span><span style="color:#98C379;">//创建+切换分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> merge</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">nam</span><span style="color:#ABB2BF;">e&gt; </span><span style="color:#98C379;">//合并某分支到当前分支</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> branch</span><span style="color:#D19A66;"> -d</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">nam</span><span style="color:#ABB2BF;">e&gt; </span><span style="color:#98C379;">//删除分支</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> status</span><span style="color:#98C379;"> 查看当前状态</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> init</span><span style="color:#98C379;"> 初始化仓库</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> .</span><span style="color:#98C379;"> 把修改的文件放到本地暂存区</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> commit</span><span style="color:#D19A66;"> -m</span><span style="color:#98C379;"> &quot;描述&quot;</span><span style="color:#98C379;">  提交并且加注释</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> push</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> master</span><span style="color:#98C379;"> 把本地代码提交到远程仓库</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决冲突" tabindex="-1"><a class="header-anchor" href="#解决冲突"><span>解决冲突</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">1、服务器代码合并本地代码</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> stash</span><span style="color:#98C379;">     //暂存当前正在进行的工作。</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> pull</span><span style="color:#98C379;">   origin</span><span style="color:#98C379;"> master</span><span style="color:#98C379;"> //拉取服务器的代码</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> stash</span><span style="color:#98C379;"> pop</span><span style="color:#98C379;"> //合并暂存的代码</span></span>
<span class="line"><span style="color:#61AFEF;">2、服务器代码覆盖本地代码</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> reset</span><span style="color:#D19A66;"> --hard</span><span style="color:#98C379;">  //回滚到上一个版本</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> pull</span><span style="color:#98C379;"> origin</span><span style="color:#98C379;"> master</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提交代码到-github-出现问题" tabindex="-1"><a class="header-anchor" href="#提交代码到-github-出现问题"><span>提交代码到 github 出现问题</span></a></h3><p>解决方案如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">I</span><span style="color:#E06C75;"> had the same problem and it seems like something changed on my </span><span style="color:#E5C07B;">ISP</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;"> I</span><span style="color:#E06C75;"> will leave my solution here </span><span style="color:#C678DD;">for</span><span style="color:#E06C75;"> future </span><span style="color:#E5C07B;">reference</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;"> At</span><span style="color:#E06C75;"> first </span><span style="color:#E5C07B;">I</span><span style="color:#E06C75;"> checked my gitconfig</span><span style="color:#ABB2BF;">.</span></span>
<span class="line"><span style="color:#E06C75;">我也遇到了同样的问题，看来我的 ISP 发生了一些变化。我将我的解决方案留在这里以供将来参考。首先我检查了我的 gitconfig。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">$ cat </span><span style="color:#56B6C2;">~/</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">gitconfig</span></span>
<span class="line"><span style="color:#E06C75;">[user]</span></span>
<span class="line"><span style="color:#E06C75;">    name </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> ****</span></span>
<span class="line"><span style="color:#E06C75;">    email </span><span style="color:#56B6C2;">=</span><span style="color:#56B6C2;"> ***</span><span style="color:#E06C75;">@</span><span style="color:#56B6C2;">***</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span></span>
<span class="line"><span style="color:#E06C75;">[url </span><span style="color:#98C379;">&quot;git@github.com:&quot;</span><span style="color:#E06C75;">]</span></span>
<span class="line"><span style="color:#E06C75;">    insteadOf </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> https</span><span style="color:#C678DD;">:</span><span style="color:#7F848E;font-style:italic;">//github.com</span></span>
<span class="line"><span style="color:#E5C07B;">As</span><span style="color:#E06C75;"> it explains my requests from git clients are forwarding to git</span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> I</span><span style="color:#E06C75;"> tried to ping with the server with ssh</span><span style="color:#ABB2BF;">.</span></span>
<span class="line"><span style="color:#E06C75;">正如它解释的那样，我来自 git 客户端的请求正在转发到 git</span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> ，我尝试使用 ssh 与服务器进行 ping 操作。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">$ ssh </span><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">T</span><span style="color:#E06C75;"> git</span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span></span>
<span class="line"><span style="color:#E06C75;">ssh</span><span style="color:#C678DD;">:</span><span style="color:#E06C75;"> connect to host </span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span><span style="color:#E06C75;"> port </span><span style="color:#D19A66;">22</span><span style="color:#C678DD;">:</span><span style="color:#E5C07B;"> Connection</span><span style="color:#E06C75;"> timed out</span></span>
<span class="line"><span style="color:#E06C75;">So</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> I</span><span style="color:#E06C75;"> appears that </span><span style="color:#E5C07B;">I</span><span style="color:#E06C75;"> can not connect to host </span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span><span style="color:#E06C75;"> from my </span><span style="color:#E5C07B;">machine</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;"> So</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> I</span><span style="color:#E06C75;"> tried to connect the ssh port </span><span style="color:#E5C07B;">instead</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;"> This</span><span style="color:#E06C75;"> time connection was successful</span><span style="color:#ABB2BF;">.</span></span>
<span class="line"><span style="color:#E06C75;">所以，我似乎无法从我的机器连接到主机 </span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span><span style="color:#E06C75;">。所以，我尝试连接 ssh 端口。这次连接成功了。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">$ ssh </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">T </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">p </span><span style="color:#D19A66;">443</span><span style="color:#E06C75;"> git</span><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">ssh</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">github</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">com</span></span>
<span class="line"><span style="color:#E5C07B;">Hi</span><span style="color:#E06C75;"> raihankhan</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;"> You</span><span style="color:#98C379;">&#39;ve successfully authenticated, but GitHub does not provide shell access.</span></span>
<span class="line"><span style="color:#98C379;">So, I changed my ~/.gitconfig like the following and git push/pull/clone requests were back to working state!</span></span>
<span class="line"><span style="color:#98C379;">因此，我像下面这样更改了 ~/.gitconfig ，并且 git Push/pull/clone 请求恢复到工作状态！</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">[user]</span></span>
<span class="line"><span style="color:#98C379;">    name = *****</span></span>
<span class="line"><span style="color:#98C379;">    email = ***@*****.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">[url &quot;ssh://git@ssh.github.com:443/&quot;]</span></span>
<span class="line"><span style="color:#98C379;">    insteadOf = git@github.com:</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function $(Y,Q){const n=o("ExternalLinkIcon");return t(),i("div",null,[r,s("p",null,[s("a",d,[a("http://192.168.1.218/"),e(n)])]),g,s("p",null,[a("使用 "),s("a",u,[a("IDEA (opens new window)"),e(n)]),a("克隆 "),s("a",y,[a("http://192.168.1.19:8929/root/cactus-vue-pro.git"),e(n)]),a("仓库的最新代码，并给该仓库一个 Star。")]),b,m,h,v,B,s("p",null,[s("a",C,[f,e(n)]),a(" 是后端项目，提供管理后台、用户 APP 的 RESTful API 接口。")]),A,s("p",null,[a("第二步，执行 "),s("a",E,[a("CactusServerApplication (opens new window)"),e(n)]),a("类，进行启动。")]),F,D,s("p",null,[a("启动完成后，使用浏览器访问 "),s("a",x,[a("http://127.0.0.1:48080 (opens new window)"),e(n)]),a("地址，返回如下 JSON 字符串，说明成功。")]),k,s("p",null,[a("浏览器访问："),s("a",_,[a("https://app.apifox.com/user/login，然后使用微信扫码登陆。"),e(n)])]),w,q,O,I,s("p",null,[a("导入本地接口文档："),s("a",R,[a("http://127.0.0.1:48081/v3/api-docs"),e(n)])]),S,s("p",null,[a("浏览器访问 "),s("a",P,[a("http://127.0.0.1:48080/doc.html (opens new window)"),e(n)]),a("地址，使用 Knife4j 查看 API 接口文档。")]),T,s("p",null,[a("除了 XML 这种方式外，项目也集成了 "),s("a",j,[a("MyBatis Plus Join (opens new window)"),e(n)]),a("框架，通过 Java 代码实现联表查询。")]),U,s("p",null,[a("git 地址："),s("a",z,[a("https://gitee.com/kailong110120130/vue-element-plus-admin"),e(n)])]),s("p",null,[a("演示地址："),s("a",M,[a("https://kailong110120130.gitee.io/vue-element-plus-admin"),e(n)])]),s("p",null,[a("文档地址："),s("a",N,[a("https://element-plus-admin-doc.cn/guide/introduction.html"),e(n)])]),V,s("figure",null,[s("a",L,[H,e(n)]),J]),G,s("figure",null,[s("a",K,[Z,e(n)]),W]),X])}const as=p(c,[["render",$],["__file","Cactus-vue-pro 开发手册.html.vue"]]),ns=JSON.parse(`{"path":"/tutorial/Cactus-vue-pro%20%E7%B3%BB%E7%BB%9F/Cactus-vue-pro%20%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C.html","title":"Cactus-vue-pro 开发手册","lang":"zh-CN","frontmatter":{"title":"Cactus-vue-pro 开发手册","subtitle":"Cactus-vue-pro 开发手册","date":"2024-04-11T10:54:20.000Z","category":["cactus-vue-pro"],"tag":["cactus-vue-pro"],"order":1,"description":"演示系统访问地址 http://192.168.1.218/ gitlab 代码仓库访问地址 新用户注册 dsfsdfsdfsdfdsfsdfsdfsdf i5103513459i5103513459 注册完成后需要登录管理员账号进行用户的审核 image-20230925103613099image-20230925103613099 image-2...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/Cactus-vue-pro%20%E7%B3%BB%E7%BB%9F/Cactus-vue-pro%20%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"Cactus-vue-pro 开发手册"}],["meta",{"property":"og:description","content":"演示系统访问地址 http://192.168.1.218/ gitlab 代码仓库访问地址 新用户注册 dsfsdfsdfsdfdsfsdfsdfsdf i5103513459i5103513459 注册完成后需要登录管理员账号进行用户的审核 image-20230925103613099image-20230925103613099 image-2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/dsfsdfsdfsdf.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-26T02:12:39.000Z"}],["meta",{"property":"article:author","content":"Cactus li"}],["meta",{"property":"article:tag","content":"cactus-vue-pro"}],["meta",{"property":"article:published_time","content":"2024-04-11T10:54:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-26T02:12:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cactus-vue-pro 开发手册\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/dsfsdfsdfsdf.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/i5103513459.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103613099.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103653752.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103740824.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925103925878.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925104321903.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925104417399.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925105027968.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-202230925105042518.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20230925110606742.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111042421.png\\",\\"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230925111058204.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117162651217.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117163750094.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125164810915.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165012809.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165144825.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165407930.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240125165637901.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117164437679.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117164923974.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240117165549813.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240123152905084.png\\",\\"https://lixuanfengs.github.io/2020/02/26/Git服务器搭建/d740562x323.png\\",\\"https://lixuanfengs.github.io/2020/02/26/Git服务器搭建/fce0a9e_564x114.png\\"],\\"datePublished\\":\\"2024-04-11T10:54:20.000Z\\",\\"dateModified\\":\\"2024-04-26T02:12:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"演示系统访问地址","slug":"演示系统访问地址","link":"#演示系统访问地址","children":[]},{"level":2,"title":"gitlab 代码仓库访问地址","slug":"gitlab-代码仓库访问地址","link":"#gitlab-代码仓库访问地址","children":[]},{"level":2,"title":"新用户注册","slug":"新用户注册","link":"#新用户注册","children":[{"level":3,"title":"配置公钥","slug":"配置公钥","link":"#配置公钥","children":[]},{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]}]},{"level":2,"title":"克隆代码","slug":"克隆代码","link":"#克隆代码","children":[]},{"level":2,"title":"启动后端项目","slug":"启动后端项目","link":"#启动后端项目","children":[{"level":3,"title":"编译项目","slug":"编译项目","link":"#编译项目","children":[]},{"level":3,"title":"启动项目","slug":"启动项目","link":"#启动项目","children":[]}]},{"level":2,"title":"接口文档","slug":"接口文档","link":"#接口文档","children":[{"level":3,"title":"apifox 使用","slug":"apifox-使用","link":"#apifox-使用","children":[]},{"level":3,"title":"Knife4j 使用","slug":"knife4j-使用","link":"#knife4j-使用","children":[]}]},{"level":2,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[{"level":3,"title":"后端结构","slug":"后端结构","link":"#后端结构","children":[]}]},{"level":2,"title":"MyBatis 联表&分页查询","slug":"mybatis-联表-分页查询","link":"#mybatis-联表-分页查询","children":[{"level":3,"title":"案例一：字段平铺","slug":"案例一-字段平铺","link":"#案例一-字段平铺","children":[]},{"level":3,"title":"案例二：字段内嵌","slug":"案例二-字段内嵌","link":"#案例二-字段内嵌","children":[]}]},{"level":2,"title":"前端项目","slug":"前端项目","link":"#前端项目","children":[{"level":3,"title":"前后端联调需要更改的设置","slug":"前后端联调需要更改的设置","link":"#前后端联调需要更改的设置","children":[]}]},{"level":2,"title":"安装 git","slug":"安装-git","link":"#安装-git","children":[{"level":3,"title":"生成ssh key","slug":"生成ssh-key","link":"#生成ssh-key","children":[]},{"level":3,"title":"克隆项目","slug":"克隆项目","link":"#克隆项目","children":[]},{"level":3,"title":"创建分支","slug":"创建分支","link":"#创建分支","children":[]},{"level":3,"title":"查看和更改本地连接的远程仓库","slug":"查看和更改本地连接的远程仓库","link":"#查看和更改本地连接的远程仓库","children":[]},{"level":3,"title":"push 向服务器推送代码","slug":"push-向服务器推送代码","link":"#push-向服务器推送代码","children":[]},{"level":3,"title":"提交一个 Pull Request (PR)","slug":"提交一个-pull-request-pr","link":"#提交一个-pull-request-pr","children":[]},{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"解决冲突","slug":"解决冲突","link":"#解决冲突","children":[]},{"level":3,"title":"提交代码到 github 出现问题","slug":"提交代码到-github-出现问题","link":"#提交代码到-github-出现问题","children":[]}]}],"git":{"createdTime":1714097484000,"updatedTime":1714097559000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":2}]},"readingTime":{"minutes":12.64,"words":3791},"filePathRelative":"tutorial/Cactus-vue-pro 系统/Cactus-vue-pro 开发手册.md","localizedDate":"2024年4月11日","excerpt":"<h2>演示系统访问地址</h2>\\n<p><a href=\\"http://192.168.1.218/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://192.168.1.218/</a></p>\\n<h2>gitlab 代码仓库访问地址</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color:#282c34;color:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF\\">http://192.168.1.19:8929/</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{as as comp,ns as data};
