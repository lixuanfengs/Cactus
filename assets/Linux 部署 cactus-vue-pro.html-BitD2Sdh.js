import{_ as n,c as a,f as l,o as e}from"./app-BgOT0w6Z.js";const p={};function o(i,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-配置-mysql" tabindex="-1"><a class="header-anchor" href="#_1-配置-mysql"><span>1. 配置 MySQL</span></a></h2><h3 id="_1-1-安装-mysql-可选" tabindex="-1"><a class="header-anchor" href="#_1-1-安装-mysql-可选"><span>1.1 安装 MySQL（可选）</span></a></h3><p>友情提示：安装 MySQL 是可选步骤，也可以购买 MySQL 云服务。</p><p>① 执行如下命令，进行 MySQL 的安装。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">## ① 安装 MySQL 5.7 版本的软件源 https://dev.mysql.com/downloads/repo/yum/</span></span>
<span class="line"><span style="color:#61AFEF;">rpm</span><span style="color:#D19A66;"> -Uvh</span><span style="color:#98C379;"> https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ② 安装 MySQL Server 5.7 版本</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> mysql-server</span><span style="color:#D19A66;"> --nogpgcheck</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ③ 查看 MySQL 的安装版本。结果是 mysqld  Ver 5.7.37 for Linux on x86_64 (MySQL Community Server (GPL))</span></span>
<span class="line"><span style="color:#61AFEF;">mysqld</span><span style="color:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 修改 <code>/etc/my.cnf</code> 文件，在文末加上 <code>lower_case_table_names=1</code> 和 <code>validate_password=off</code> 配置，执行 <code>systemctl restart mysqld</code> 命令重启。</p><p>③ 执行 <code>grep password /var/log/mysqld.log</code> 命令，获得 MySQL 临时密码。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">2022-04-16T09:39:57.365086Z</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;"> [Note] A temporary password is generated </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> root@localhost: ZOKUaehW2e.e</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>④ 执行如下命令，修改 MySQL 的密码，设置允许远程连接。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">## ① 连接 MySQL Server 服务，并输入临时密码</span></span>
<span class="line"><span style="color:#61AFEF;">mysql</span><span style="color:#D19A66;"> -uroot</span><span style="color:#D19A66;"> -p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ② 修改密码，123456 可改成你想要的密码</span></span>
<span class="line"><span style="color:#61AFEF;">alter</span><span style="color:#98C379;"> user</span><span style="color:#98C379;"> &#39;root&#39;@&#39;localhost&#39;</span><span style="color:#98C379;"> identified</span><span style="color:#98C379;"> by</span><span style="color:#98C379;"> &#39;123456&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ③ 设置允许远程连接</span></span>
<span class="line"><span style="color:#61AFEF;">use</span><span style="color:#98C379;"> mysql</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">update</span><span style="color:#98C379;"> user</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> host</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> &#39;%&#39;</span><span style="color:#98C379;"> where</span><span style="color:#98C379;"> user</span><span style="color:#98C379;"> =</span><span style="color:#98C379;"> &#39;root&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">FLUSH</span><span style="color:#98C379;"> PRIVILEGES</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-导入-sql-脚本" tabindex="-1"><a class="header-anchor" href="#_1-2-导入-sql-脚本"><span>1.2 导入 SQL 脚本</span></a></h3><p>创建一个名字为 <code>cactus-vue-pro</code> 数据库，执行数据库对应的 <code>sql</code>目录下的 SQL 文件，进行初始化。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161116734.png" alt="image-20240403161116734" tabindex="0" loading="lazy"><figcaption>image-20240403161116734</figcaption></figure><h2 id="_2-配置-redis" tabindex="-1"><a class="header-anchor" href="#_2-配置-redis"><span>2. 配置 Redis</span></a></h2><p>友情提示：安装 Redis 是可选步骤，也可以购买 Redis 云服务。</p><p>执行如下命令，进行 Redis 的安装。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">## ① 安装 remi 软件源</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ② 安装最新 Redis 版本。如果想要安装指定版本，可使用 yum --enablerepo=remi install redis-6.0.6 -y 命令</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#D19A66;"> --enablerepo=remi</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> redis</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ③ 查看 Redis 的安装版本。结果是 Redis server v=6.2.6 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=4ab9a06393930489</span></span>
<span class="line"><span style="color:#61AFEF;">redis-server</span><span style="color:#D19A66;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## ④ 启动 Redis 服务</span></span>
<span class="line"><span style="color:#61AFEF;">systemctl</span><span style="color:#98C379;"> restart</span><span style="color:#98C379;"> redis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>端口是 6379，密码未设置</li></ul><h2 id="_3-部署后端" tabindex="-1"><a class="header-anchor" href="#_3-部署后端"><span>3. 部署后端</span></a></h2><h3 id="_3-1-修改配置" tabindex="-1"><a class="header-anchor" href="#_3-1-修改配置"><span>3.1 修改配置</span></a></h3><p>后端 dev 开发环境对应的是 <code>application-dev.yaml</code> 配置文件，主要是修改 MySQL 和 Redis 为你的地址。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161238610.png" alt="image-20240403161238610" tabindex="0" loading="lazy"><figcaption>image-20240403161238610</figcaption></figure><h3 id="_3-2-编译后端" tabindex="-1"><a class="header-anchor" href="#_3-2-编译后端"><span>3.2 编译后端</span></a></h3><p>在项目的根目录下，执行 <code>mvn clean package -Dmaven.test.skip=true</code> 命令，编译后端项目，构建出它的 Jar 包。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161319457.png" alt="image-20240403161319457" tabindex="0" loading="lazy"><figcaption>image-20240403161319457</figcaption></figure><p>疑问：-Dmaven.test.skip=true 是什么意思？</p><p>跳过单元测试的执行。如果你项目的单元测试写的不错，建议使用 <code>mvn clean package</code> 命令，执行单元测试，保证交付的质量。</p><h3 id="_3-3-上传-jar-包" tabindex="-1"><a class="header-anchor" href="#_3-3-上传-jar-包"><span>3.3 上传 Jar 包</span></a></h3><p>在 Linux 服务器上创建 <code>/work/projects/cactus-server</code> 目录，使用 <code>scp</code> 命令或者 FTP 工具，将 <code>cactus-server.jar</code> 上传到该目录下。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240904112632160.png" alt="image-20240904112632160" tabindex="0" loading="lazy"><figcaption>image-20240904112632160</figcaption></figure><p>疑问：如果构建 War 包，部署到 Tomcat 下？</p><p>并不推荐采用 War 包部署到 Tomcat 下。如果真的需要，可以参考 <a href="https://www.baeldung.com/spring-boot-war-tomcat-deploy" target="_blank" rel="noopener noreferrer">《Deploy a Spring Boot WAR into a Tomcat Server》 (opens new window)</a>文章。</p><h3 id="_3-4-编写脚本" tabindex="-1"><a class="header-anchor" href="#_3-4-编写脚本"><span>3.4 编写脚本</span></a></h3><p>在 <code>/work/projects/cactus-server</code> 目录下，新建 Shell 脚本 <code>deploy.sh</code>，用于启动后端项目。编写内容如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 当脚本中的任何命令以非零状态（即错误状态）退出时，脚本会立即终止</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#D19A66;"> -e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">DATE</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">date</span><span style="color:#98C379;"> +%Y%m%d%H%M</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 基础路径</span></span>
<span class="line"><span style="color:#E06C75;">BASE_PATH</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">/work/projects/cactus-server</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 服务名称。同时约定部署服务的 jar 包名字也为它。</span></span>
<span class="line"><span style="color:#E06C75;">SERVER_NAME</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">cactus-server</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 环境</span></span>
<span class="line"><span style="color:#E06C75;">PROFILES_ACTIVE</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># heapError 存放路径</span></span>
<span class="line"><span style="color:#E06C75;">HEAP_ERROR_PATH</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/heapError</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># JVM 参数</span></span>
<span class="line"><span style="color:#E06C75;">JAVA_OPS</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;-Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=</span><span style="color:#E06C75;">$HEAP_ERROR_PATH</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># SkyWalking Agent 配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#export SW_AGENT_NAME=$SERVER_NAME</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#export SW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.0.84:11800</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#export SW_GRPC_LOG_SERVER_HOST=192.168.0.84</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#export SW_AGENT_TRACE_IGNORE_PATH=&quot;Redisson/PING,/actuator/**,/admin/**&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">#export JAVA_AGENT=-javaagent:/work/skywalking/apache-skywalking-apm-bin/agent/skywalking-agent.jar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 停止：优雅关闭之前已经启动的服务</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> stop</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[stop] 开始停止 </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#E06C75;">    PID</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">ps</span><span style="color:#D19A66;"> -ef</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#E06C75;"> $BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> &quot;grep&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;{print $2}&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 如果 Java 服务启动中，则进行关闭</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#56B6C2;">-n</span><span style="color:#98C379;"> &quot;</span><span style="color:#E06C75;">$PID</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 正常关闭</span></span>
<span class="line"><span style="color:#56B6C2;">        echo</span><span style="color:#98C379;"> &quot;[stop] </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;"> 运行中，开始 kill [</span><span style="color:#E06C75;">$PID</span><span style="color:#98C379;">]&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">        kill</span><span style="color:#D19A66;"> -15</span><span style="color:#E06C75;"> $PID</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 等待最大 120 秒，直到关闭完成。</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 120</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">            do</span></span>
<span class="line"><span style="color:#61AFEF;">                sleep</span><span style="color:#D19A66;"> 1</span></span>
<span class="line"><span style="color:#E06C75;">                PID</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">$(</span><span style="color:#61AFEF;">ps</span><span style="color:#D19A66;"> -ef</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#E06C75;"> $BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> &quot;grep&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">awk</span><span style="color:#98C379;"> &#39;{print $2}&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#56B6C2;">-n</span><span style="color:#98C379;"> &quot;</span><span style="color:#E06C75;">$PID</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">                    echo</span><span style="color:#D19A66;"> -e</span><span style="color:#98C379;"> &quot;.\\c&quot;</span></span>
<span class="line"><span style="color:#C678DD;">                else</span></span>
<span class="line"><span style="color:#56B6C2;">                    echo</span><span style="color:#98C379;"> &#39;[stop] 停止 $BASE_PATH/$SERVER_NAME 成功&#39;</span></span>
<span class="line"><span style="color:#C678DD;">                    break</span></span>
<span class="line"><span style="color:#C678DD;">                fi</span></span>
<span class="line"><span style="color:#C678DD;">		    done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        # 如果正常关闭失败，那么进行强制 kill -9 进行关闭</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#56B6C2;">-n</span><span style="color:#98C379;"> &quot;</span><span style="color:#E06C75;">$PID</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">            echo</span><span style="color:#98C379;"> &quot;[stop] </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;"> 失败，强制 kill -9 </span><span style="color:#E06C75;">$PID</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">            kill</span><span style="color:#D19A66;"> -9</span><span style="color:#E06C75;"> $PID</span></span>
<span class="line"><span style="color:#C678DD;">        fi</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 如果 Java 服务未启动，则无需关闭</span></span>
<span class="line"><span style="color:#C678DD;">    else</span></span>
<span class="line"><span style="color:#56B6C2;">        echo</span><span style="color:#98C379;"> &quot;[stop] </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;"> 未启动，无需停止&quot;</span></span>
<span class="line"><span style="color:#C678DD;">    fi</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 启动：启动后端项目</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> start</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 开启启动前，打印启动参数</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[start] 开始启动 </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[start] JAVA_OPS: </span><span style="color:#E06C75;">$JAVA_OPS</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[start] JAVA_AGENT: </span><span style="color:#E06C75;">$JAVA_AGENT</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[start] PROFILES: </span><span style="color:#E06C75;">$PROFILES_ACTIVE</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 开始启动</span></span>
<span class="line"><span style="color:#61AFEF;">    nohup</span><span style="color:#98C379;"> java</span><span style="color:#D19A66;"> -server</span><span style="color:#E06C75;"> $JAVA_OPS</span><span style="color:#E06C75;"> $JAVA_AGENT</span><span style="color:#D19A66;"> -jar</span><span style="color:#E06C75;"> $BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;">.jar</span><span style="color:#D19A66;"> --spring.profiles.active=</span><span style="color:#E06C75;">$PROFILES_ACTIVE</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">nohup.out</span><span style="color:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;[start] 启动 </span><span style="color:#E06C75;">$BASE_PATH</span><span style="color:#98C379;">/</span><span style="color:#E06C75;">$SERVER_NAME</span><span style="color:#98C379;"> 完成&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 部署</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> deploy</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    cd</span><span style="color:#E06C75;"> $BASE_PATH</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 第一步：停止 Java 服务</span></span>
<span class="line"><span style="color:#61AFEF;">    stop</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 第二步：启动 Java 服务</span></span>
<span class="line"><span style="color:#61AFEF;">    start</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">deploy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>友情提示：</p><p>如果你想要修改脚本，主要关注 <code>BASE_PATH</code>、<code>PROFILES_ACTIVE</code>、<code>JAVA_OPS</code> 三个参数。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240909095336846.png" alt="image-20240909095336846" tabindex="0" loading="lazy"><figcaption>image-20240909095336846</figcaption></figure><h3 id="_3-5-启动后端" tabindex="-1"><a class="header-anchor" href="#_3-5-启动后端"><span>3.5 启动后端</span></a></h3><p>① 【可选】执行 <code>yum install -y java-1.8.0-openjdk</code> 命令，安装 OpenJDK <strong>8</strong>。</p><p>友情提示：如果已经安装 JDK，可不安装。建议使用的 JDK 版本为 8、11、17 这三个。</p><p>② 执行 <code>sh deploy.sh</code> 命令，启动后端项目。日志如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">[stop] 开始停止 /work/projects/cactus-server/cactus-server</span></span>
<span class="line"><span style="color:#ABB2BF;">[stop] /work/projects/cactus-server/cactus-server 未启动，无需停止</span></span>
<span class="line"><span style="color:#ABB2BF;">[start] 开始启动 /work/projects/cactus-server/cactus-server</span></span>
<span class="line"><span style="color:#ABB2BF;">[start] JAVA_OPS: -Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError -XX:</span><span style="color:#E06C75;">HeapDumpPath</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">/work/projects/cactus-server/heapError</span></span>
<span class="line"><span style="color:#ABB2BF;">[start] JAVA_AGENT:</span></span>
<span class="line"><span style="color:#ABB2BF;">[start] PROFILES: dev</span></span>
<span class="line"><span style="color:#ABB2BF;">[start] 启动 /work/projects/cactus-server/cactus-server 完成</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③ 执行 <code>tail -f nohup.out</code> 命令，查看启动日志。看到如下内容，说明启动完成：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">2022-04-13</span><span style="color:#98C379;"> 00:06:20.049</span><span style="color:#98C379;">  INFO</span><span style="color:#D19A66;"> 1395</span><span style="color:#D19A66;"> ---</span><span style="color:#ABB2BF;"> [main] [TID: N/A] c.i.yudao.server.YudaoServerApplication  </span><span style="color:#56B6C2;">:</span><span style="color:#ABB2BF;"> Started YudaoServerApplication in 35.315 seconds (</span><span style="color:#61AFEF;">JVM</span><span style="color:#98C379;"> running</span><span style="color:#98C379;"> for</span><span style="color:#D19A66;"> 36.282</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_4-部署前端" tabindex="-1"><a class="header-anchor" href="#_4-部署前端"><span>4. 部署前端</span></a></h2><h3 id="_4-1-修改配置" tabindex="-1"><a class="header-anchor" href="#_4-1-修改配置"><span>4.1 修改配置</span></a></h3><p>前端 dev 开发环境对应的是 <code>.env.dev</code>配置文件，主要是修改 <code>VUE_APP_BASE_API</code> 为你的后端项目的访问地址。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403164123099.png" alt="image-20240403164123099" tabindex="0" loading="lazy"><figcaption>image-20240403164123099</figcaption></figure><h3 id="_4-2-编译前端" tabindex="-1"><a class="header-anchor" href="#_4-2-编译前端"><span>4.2 编译前端</span></a></h3><p>友情提示：</p><p>下文的 <code>cactus-ui-admin-vue3</code> 目录，指的是你克隆前端项目后的地址！</p><p>在 <code>cactus-ui-admin-vue3</code> 目录下，执行 <code>npm run build:dev</code> 命令，编译前端项目，构建出它的 <code>dist</code> 文件，里面是 HTML、CSS、JavaScript 等静态文件。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403164849000.png" alt="image-20240403164849000" tabindex="0" loading="lazy"><figcaption>image-20240403164849000</figcaption></figure><p>如下想要打包其它环境，可使用如下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> build:prod</span><span style="color:#7F848E;font-style:italic;"> ## 打包 prod 生产环境</span></span>
<span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> build:stage</span><span style="color:#7F848E;font-style:italic;"> ## 打包 stage 预发布环境</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-上传-dist-文件" tabindex="-1"><a class="header-anchor" href="#_4-3-上传-dist-文件"><span>4.3 上传 <code>dist</code> 文件</span></a></h3><p>在 Linux 服务器上创建 <code>/sg-work/nginx/html/cactus-ui-admin-vue3</code> 目录，使用 <code>scp</code> 命令或者 FTP 工具，将 <code>dist</code> 上传到 <code>/sg-work/nginx/html</code> 目录下。如下图所示：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240403170912822.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_4-4-启动前端" tabindex="-1"><a class="header-anchor" href="#_4-4-启动前端"><span>4.4 启动前端？</span></a></h3><p>前端无法直接启动，而是通过 Nginx 转发读取 <code>/sg-work/nginx/html/cactus-ui-admin-vue3</code> 目录的静态文件。</p><h2 id="_5-配置-nginx" tabindex="-1"><a class="header-anchor" href="#_5-配置-nginx"><span>5. 配置 Nginx</span></a></h2><h3 id="_5-1-安装-nginx" tabindex="-1"><a class="header-anchor" href="#_5-1-安装-nginx"><span>5.1 安装 Nginx</span></a></h3><p>参考 <a href="https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/" target="_blank" rel="noopener noreferrer">Nginx 官方文档 (opens new window)</a>，安装 Nginx 服务。命令如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">## 添加 yum 源</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> epel-release</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> update</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 安装 nginx</span></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> nginx</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">## 启动 nginx </span></span>
<span class="line"><span style="color:#61AFEF;">nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nginx 默认配置文件是 <code>/etc/nginx/nginx.conf</code>。</p><hr><p>下面，来看两种 Nginx 的配置，分别满足服务器 IP、独立域名的不同场景。</p><h3 id="_5-2-方式一-服务器-ip-访问" tabindex="-1"><a class="header-anchor" href="#_5-2-方式一-服务器-ip-访问"><span>5.2 方式一：服务器 IP 访问</span></a></h3><p>① 修改 Nginx 配置，内容如下：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">worker_processes </span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">events</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    worker_connections </span><span style="color:#D19A66;"> 1024</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">http</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    include </span><span style="color:#ABB2BF;">      mime.types;</span></span>
<span class="line"><span style="color:#C678DD;">    default_type </span><span style="color:#ABB2BF;"> application/octet-stream;</span></span>
<span class="line"><span style="color:#C678DD;">    sendfile </span><span style="color:#D19A66;">       on</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    keepalive_timeout </span><span style="color:#D19A66;"> 65</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    gzip </span><span style="color:#D19A66;">on</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_min_length </span><span style="color:#D19A66;">1k</span><span style="color:#ABB2BF;">;     </span><span style="color:#7F848E;font-style:italic;"># 设置允许压缩的页面最小字节数</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_buffers </span><span style="color:#D19A66;">4</span><span style="color:#D19A66;"> 16k</span><span style="color:#ABB2BF;">;     </span><span style="color:#7F848E;font-style:italic;"># 用来存储 gzip 的压缩结果</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_http_version </span><span style="color:#D19A66;">1.1</span><span style="color:#ABB2BF;">;  </span><span style="color:#7F848E;font-style:italic;"># 识别 HTTP 协议版本</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_comp_level </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;      </span><span style="color:#7F848E;font-style:italic;"># 设置 gzip 的压缩比 1-9。1 压缩比最小但最快，而 9 相反</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_types </span><span style="color:#ABB2BF;">gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; </span><span style="color:#7F848E;font-style:italic;"># 指定压缩类型</span></span>
<span class="line"><span style="color:#C678DD;">    gzip_proxied </span><span style="color:#ABB2BF;">any;       </span><span style="color:#7F848E;font-style:italic;"># 无论后端服务器的 headers 头返回什么信息，都无条件启用压缩</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    server</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        listen </span><span style="color:#D19A66;">      80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        server_name </span><span style="color:#D19A66;"> 192.168.225.2</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！修改成你的外网 IP/域名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        location</span><span style="color:#ABB2BF;"> / { </span><span style="color:#7F848E;font-style:italic;">## 前端项目</span></span>
<span class="line"><span style="color:#C678DD;">            root </span><span style="color:#ABB2BF;">  /work/projects/cactus-ui-admin-vue3;</span></span>
<span class="line"><span style="color:#C678DD;">            index </span><span style="color:#ABB2BF;"> index.html index.htm;</span></span>
<span class="line"><span style="color:#C678DD;">            try_files </span><span style="color:#ABB2BF;">$</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;"> $</span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;">/ /index.html;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        location</span><span style="color:#ABB2BF;"> /admin-api/ { </span><span style="color:#7F848E;font-style:italic;">## 后端项目 - 管理后台</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_pass </span><span style="color:#ABB2BF;">http://localhost:48080/admin-api/; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！proxy_pass 需要设置为后端项目所在服务器的 IP</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">Host $</span><span style="color:#E06C75;">http_host</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">X-Real-IP $</span><span style="color:#E06C75;">remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">REMOTE-HOST $</span><span style="color:#E06C75;">remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">X-Forwarded-For $</span><span style="color:#E06C75;">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        location</span><span style="color:#ABB2BF;"> /app-api/ { </span><span style="color:#7F848E;font-style:italic;">## 后端项目 - 用户 App</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_pass </span><span style="color:#ABB2BF;">http://localhost:48080/app-api/; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！proxy_pass 需要设置为后端项目所在服务器的 IP</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">Host $</span><span style="color:#E06C75;">http_host</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">X-Real-IP $</span><span style="color:#E06C75;">remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">REMOTE-HOST $</span><span style="color:#E06C75;">remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            proxy_set_header </span><span style="color:#ABB2BF;">X-Forwarded-For $</span><span style="color:#E06C75;">proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 执行 <code>nginx -s reload</code> 命令，重新加载 Nginx 配置。</p><p>③ 请求 <a href="http://192.168.225.2/admin-api/" target="_blank" rel="noopener noreferrer">http://192.168.225.2/admin-api/ (opens new window)</a>地址，成功访问后端项目，返回结果如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">&quot;code&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">401</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">&quot;data&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">&quot;msg&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;账号未登录&quot;</span><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>④ 请求 <a href="http://192.168.225.2/" target="_blank" rel="noopener noreferrer">http://192.168.225.2 (opens new window)</a>地址，成功访问前端项目，返回前端界面如下：</p><p>⑤ 如果你使用到 WebSocket 的话，需要额外对 <code>/infra/ws</code> 路径进行配置，具体可见 <a href="https://t.zsxq.com/LQEfC" target="_blank" rel="noopener noreferrer">https://t.zsxq.com/LQEfC (opens new window)</a>链接。</p><h3 id="_5-3-方式二-独立域名访问" tabindex="-1"><a class="header-anchor" href="#_5-3-方式二-独立域名访问"><span>5.3 方式二：独立域名访问</span></a></h3><p>友情提示：在前端项目的编译时，需要把 <code>VUE_APP_BASE_API</code> 修改为后端项目对应的域名。</p><p>例如说，这里使用的是 <code>http://api.cactusli.cn</code></p><p>① 修改 Nginx 配置，内容如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">worker_processes</span><span style="color:#D19A66;">  1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">events</span><span style="color:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    worker_connections</span><span style="color:#D19A66;">  1024</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">http</span><span style="color:#98C379;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    include</span><span style="color:#98C379;">       mime.types</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    default_type</span><span style="color:#98C379;">  application/octet-stream</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    sendfile</span><span style="color:#98C379;">        on</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    keepalive_timeout</span><span style="color:#D19A66;">  65</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">    gzip</span><span style="color:#98C379;"> on</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_min_length</span><span style="color:#98C379;"> 1k</span><span style="color:#ABB2BF;">;     </span><span style="color:#7F848E;font-style:italic;"># 设置允许压缩的页面最小字节数</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_buffers</span><span style="color:#D19A66;"> 4</span><span style="color:#98C379;"> 16k</span><span style="color:#ABB2BF;">;     </span><span style="color:#7F848E;font-style:italic;"># 用来存储 gzip 的压缩结果</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_http_version</span><span style="color:#D19A66;"> 1.1</span><span style="color:#ABB2BF;">;  </span><span style="color:#7F848E;font-style:italic;"># 识别 HTTP 协议版本</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_comp_level</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">;      </span><span style="color:#7F848E;font-style:italic;"># 设置 gzip 的压缩比 1-9。1 压缩比最小但最快，而 9 相反</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_types</span><span style="color:#98C379;"> text/plain</span><span style="color:#98C379;"> application/x-javascript</span><span style="color:#98C379;"> text/css</span><span style="color:#98C379;"> application/xml</span><span style="color:#98C379;"> application/javascript</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;"># 指定压缩类型</span></span>
<span class="line"><span style="color:#61AFEF;">    gzip_proxied</span><span style="color:#98C379;"> any</span><span style="color:#ABB2BF;">;       </span><span style="color:#7F848E;font-style:italic;"># 无论后端服务器的 headers 头返回什么信息，都无条件启用压缩</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">    server</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;"> ## 前端项目</span></span>
<span class="line"><span style="color:#61AFEF;">        listen</span><span style="color:#D19A66;">       80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        server_name</span><span style="color:#98C379;">  admin.cactusli.cn</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！修改成你的前端域名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">        location</span><span style="color:#98C379;"> /</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;"> ## 前端项目</span></span>
<span class="line"><span style="color:#61AFEF;">            root</span><span style="color:#98C379;">   /work/projects/cactus-ui-admin-vue3</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            index</span><span style="color:#98C379;">  index.html</span><span style="color:#98C379;"> index.htm</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            try_files</span><span style="color:#E06C75;"> $uri</span><span style="color:#E06C75;"> $uri</span><span style="color:#98C379;">/</span><span style="color:#98C379;"> /index.html</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">    server</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;"> ## 后端项目</span></span>
<span class="line"><span style="color:#61AFEF;">        listen</span><span style="color:#D19A66;">       80</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">        server_name</span><span style="color:#98C379;">  api.iocoder.cn</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！修改成你的外网 IP/域名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        ## 不要使用 location / 转发到后端项目，因为 druid、admin 等监控，不需要外网可访问。或者增加 Nginx IP 白名单限制也可以。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">        location</span><span style="color:#98C379;"> /admin-api/</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;"> ## 后端项目 - 管理后台</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_pass</span><span style="color:#98C379;"> http://localhost:48080/admin-api/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！proxy_pass 需要设置为后端项目所在服务器的 IP</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> Host</span><span style="color:#E06C75;"> $http_host</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> X-Real-IP</span><span style="color:#E06C75;"> $remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> REMOTE-HOST</span><span style="color:#E06C75;"> $remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> X-Forwarded-For</span><span style="color:#E06C75;"> $proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">        location</span><span style="color:#98C379;"> /app-api/</span><span style="color:#98C379;"> {</span><span style="color:#7F848E;font-style:italic;"> ## 后端项目 - 用户 App</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_pass</span><span style="color:#98C379;"> http://localhost:48080/app-api/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">## 重要！！！proxy_pass 需要设置为后端项目所在服务器的 IP</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> Host</span><span style="color:#E06C75;"> $http_host</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> X-Real-IP</span><span style="color:#E06C75;"> $remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> REMOTE-HOST</span><span style="color:#E06C75;"> $remote_addr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">            proxy_set_header</span><span style="color:#98C379;"> X-Forwarded-For</span><span style="color:#E06C75;"> $proxy_add_x_forwarded_for</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>② 执行 <code>nginx -s reload</code> 命令，重新加载 Nginx 配置。</p><p>③ 请求 <a href="http://api.iocoder.cn/admin-api/" target="_blank" rel="noopener noreferrer">http://api.cactusli.cn/admin-api/ (opens new window)</a>地址，成功访问后端项目，返回结果如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">&quot;code&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">401</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">&quot;data&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">&quot;msg&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;账号未登录&quot;</span><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>④ 请求 <a href="http://admin.iocoder.cn/" target="_blank" rel="noopener noreferrer">http://admin.iocoder.cn (opens new window)</a>地址，成功访问前端项目，返回前端界面如下：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240909095227607.png" alt="image-20240909095227607" tabindex="0" loading="lazy"><figcaption>image-20240909095227607</figcaption></figure>`,86)]))}const t=n(p,[["render",o],["__file","Linux 部署 cactus-vue-pro.html.vue"]]),r=JSON.parse(`{"path":"/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/Linux%20%E9%83%A8%E7%BD%B2%20cactus-vue-pro.html","title":"Linux 部署 cactus-vue-pro","lang":"zh-CN","frontmatter":{"title":"Linux 部署 cactus-vue-pro","subtitle":"Linux 部署 cactus-vue-pro","date":"2024-04-03T15:36:20.000Z","category":["cactus-vue-pro"],"tag":["cactus-vue-pro"],"order":4,"description":"1. 配置 MySQL 1.1 安装 MySQL（可选） 友情提示：安装 MySQL 是可选步骤，也可以购买 MySQL 云服务。 ① 执行如下命令，进行 MySQL 的安装。 ② 修改 /etc/my.cnf 文件，在文末加上 lower_case_table_names=1 和 validate_password=off 配置，执行 systemc...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/Linux%20%E9%83%A8%E7%BD%B2%20cactus-vue-pro.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"Linux 部署 cactus-vue-pro"}],["meta",{"property":"og:description","content":"1. 配置 MySQL 1.1 安装 MySQL（可选） 友情提示：安装 MySQL 是可选步骤，也可以购买 MySQL 云服务。 ① 执行如下命令，进行 MySQL 的安装。 ② 修改 /etc/my.cnf 文件，在文末加上 lower_case_table_names=1 和 validate_password=off 配置，执行 systemc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161116734.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-23T07:07:24.000Z"}],["meta",{"property":"article:tag","content":"cactus-vue-pro"}],["meta",{"property":"article:published_time","content":"2024-04-03T15:36:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-23T07:07:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 部署 cactus-vue-pro\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161116734.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161238610.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403161319457.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240904112632160.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240909095336846.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403164123099.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403164849000.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240403170912822.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240909095227607.png\\"],\\"datePublished\\":\\"2024-04-03T15:36:20.000Z\\",\\"dateModified\\":\\"2024-09-23T07:07:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"1. 配置 MySQL","slug":"_1-配置-mysql","link":"#_1-配置-mysql","children":[{"level":3,"title":"1.1 安装 MySQL（可选）","slug":"_1-1-安装-mysql-可选","link":"#_1-1-安装-mysql-可选","children":[]},{"level":3,"title":"1.2 导入 SQL 脚本","slug":"_1-2-导入-sql-脚本","link":"#_1-2-导入-sql-脚本","children":[]}]},{"level":2,"title":"2. 配置 Redis","slug":"_2-配置-redis","link":"#_2-配置-redis","children":[]},{"level":2,"title":"3. 部署后端","slug":"_3-部署后端","link":"#_3-部署后端","children":[{"level":3,"title":"3.1 修改配置","slug":"_3-1-修改配置","link":"#_3-1-修改配置","children":[]},{"level":3,"title":"3.2 编译后端","slug":"_3-2-编译后端","link":"#_3-2-编译后端","children":[]},{"level":3,"title":"3.3 上传 Jar 包","slug":"_3-3-上传-jar-包","link":"#_3-3-上传-jar-包","children":[]},{"level":3,"title":"3.4 编写脚本","slug":"_3-4-编写脚本","link":"#_3-4-编写脚本","children":[]},{"level":3,"title":"3.5 启动后端","slug":"_3-5-启动后端","link":"#_3-5-启动后端","children":[]}]},{"level":2,"title":"4. 部署前端","slug":"_4-部署前端","link":"#_4-部署前端","children":[{"level":3,"title":"4.1 修改配置","slug":"_4-1-修改配置","link":"#_4-1-修改配置","children":[]},{"level":3,"title":"4.2 编译前端","slug":"_4-2-编译前端","link":"#_4-2-编译前端","children":[]},{"level":3,"title":"4.3 上传 dist 文件","slug":"_4-3-上传-dist-文件","link":"#_4-3-上传-dist-文件","children":[]},{"level":3,"title":"4.4 启动前端？","slug":"_4-4-启动前端","link":"#_4-4-启动前端","children":[]}]},{"level":2,"title":"5. 配置 Nginx","slug":"_5-配置-nginx","link":"#_5-配置-nginx","children":[{"level":3,"title":"5.1 安装 Nginx","slug":"_5-1-安装-nginx","link":"#_5-1-安装-nginx","children":[]},{"level":3,"title":"5.2 方式一：服务器 IP 访问","slug":"_5-2-方式一-服务器-ip-访问","link":"#_5-2-方式一-服务器-ip-访问","children":[]},{"level":3,"title":"5.3 方式二：独立域名访问","slug":"_5-3-方式二-独立域名访问","link":"#_5-3-方式二-独立域名访问","children":[]}]}],"git":{"createdTime":1725419632000,"updatedTime":1727075244000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":4}]},"readingTime":{"minutes":8.47,"words":2542},"filePathRelative":"tutorial/系统开发部署/Linux 部署 cactus-vue-pro.md","localizedDate":"2024年4月3日","excerpt":"<h2>1. 配置 MySQL</h2>\\n<h3>1.1 安装 MySQL（可选）</h3>\\n<p>友情提示：安装 MySQL 是可选步骤，也可以购买 MySQL 云服务。</p>\\n<p>① 执行如下命令，进行 MySQL 的安装。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"background-color:#282c34;color:#abb2bf\\"><pre class=\\"shiki one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## ① 安装 MySQL 5.7 版本的软件源 https://dev.mysql.com/downloads/repo/yum/</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">rpm</span><span style=\\"color:#D19A66\\"> -Uvh</span><span style=\\"color:#98C379\\"> https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## ② 安装 MySQL Server 5.7 版本</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">yum</span><span style=\\"color:#98C379\\"> install</span><span style=\\"color:#98C379\\"> mysql-server</span><span style=\\"color:#D19A66\\"> --nogpgcheck</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#7F848E;font-style:italic\\">## ③ 查看 MySQL 的安装版本。结果是 mysqld  Ver 5.7.37 for Linux on x86_64 (MySQL Community Server (GPL))</span></span>\\n<span class=\\"line\\"><span style=\\"color:#61AFEF\\">mysqld</span><span style=\\"color:#D19A66\\"> --version</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as comp,r as data};
