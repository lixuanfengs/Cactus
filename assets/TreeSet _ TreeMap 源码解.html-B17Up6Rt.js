import{_ as s,o as n,c as a,h as l}from"./app-BYwAopne.js";const p={},o=l(`<blockquote><p>本文主要对Map - TreeSet &amp; TreeMap 源码解析。</p></blockquote><ul><li>Java 7 - TreeSet &amp; TreeMap <ul><li><a href="#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D">总体介绍</a></li><li><a href="#%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86">预备知识</a></li><li><a href="#%E6%96%B9%E6%B3%95%E5%89%96%E6%9E%90">方法剖析</a></li><li><a href="#treeset">TreeSet</a></li></ul></li></ul><h2 id="java-7-treeset-treemap" tabindex="-1"><a class="header-anchor" href="#java-7-treeset-treemap"><span><a href="#java-7-treeset-treemap">#</a> Java 7 - TreeSet &amp; TreeMap</span></a></h2><h3 id="总体介绍" tabindex="-1"><a class="header-anchor" href="#总体介绍"><span><a href="#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D">#</a> 总体介绍</span></a></h3><p>之所以把<em>TreeSet</em>和<em>TreeMap</em>放在一起讲解，是因为二者在Java里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说<strong><em>TreeSet*里面有一个*TreeMap</em>(适配器模式)</strong>。因此本文将重点分析<em>TreeMap</em>。</p><p>Java <em>TreeMap</em>实现了<em>SortedMap</em>接口，也就是说会按照<code>key</code>的大小顺序对<em>Map</em>中的元素进行排序，<code>key</code>大小的评判可以通过其本身的自然顺序(natural ordering)，也可以通过构造时传入的比较器(Comparator)。</p><p><strong>TreeMap底层通过红黑树(Red-Black tree)实现</strong>，也就意味着<code>containsKey()</code>, <code>get()</code>, <code>put()</code>, <code>remove()</code>都有着<code>log(n)</code>的时间复杂度。其具体算法实现参照了《算法导论》。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_base.png" alt="TreeMap_base.png" tabindex="0" loading="lazy"><figcaption>TreeMap_base.png</figcaption></figure><p>出于性能原因，<em>TreeMap</em>是非同步的(not synchronized)，如果需要在多线程环境使用，需要程序员手动同步；或者通过如下方式将<em>TreeMap</em>包装成(wrapped)同步的:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span>SortedMap m = Collections.synchronizedSortedMap(new TreeMap(...));</span></span>
<span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>红黑树是一种近似平衡的二叉查找树，它能够确保任何一个节点的左右子树的高度差不会超过二者中较低那个的一倍</strong>。具体来说，红黑树是满足如下条件的二叉查找树(binary search tree):</p><ol><li>每个节点要么是红色，要么是黑色。</li><li>根节点必须是黑色</li><li>红色节点不能连续(也即是，红色节点的孩子和父亲都不能是红色)。</li><li>对于每个节点，从该点至<code>null</code>(树尾端)的任何路径，都含有相同个数的黑色节点。</li></ol><p>在树的结构发生改变时(插入或者删除操作)，往往会破坏上述条件3或条件4，需要通过调整使得查找树重新满足红黑树的约束条件。</p><h3 id="预备知识" tabindex="-1"><a class="header-anchor" href="#预备知识"><span><a href="#%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86">#</a> 预备知识</span></a></h3><p>前文说到当查找树的结构发生改变时，红黑树的约束条件可能被破坏，需要通过调整使得查找树重新满足红黑树的约束条件。调整可以分为两类: 一类是颜色调整，即改变某个节点的颜色；另一类是结构调整，即改变检索树的结构关系。结构调整过程包含两个基本操作 : <strong>左旋(Rotate Left)，右旋(RotateRight)</strong>。</p><h4 id="左旋" tabindex="-1"><a class="header-anchor" href="#左旋"><span><a href="#%E5%B7%A6%E6%97%8B">#</a> 左旋</span></a></h4><p>左旋的过程是将<code>x</code>的右子树绕<code>x</code>逆时针旋转，使得<code>x</code>的右子树成为<code>x</code>的父亲，同时修改相关节点的引用。旋转之后，二叉查找树的属性仍然满足。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_rotateLeft.png" alt="TreeMap_rotateLeft.png" tabindex="0" loading="lazy"><figcaption>TreeMap_rotateLeft.png</figcaption></figure><p><em>TreeMap</em>中左旋代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//Rotate Left</span></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> rotateLeft</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> p) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> r </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;">            r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;">            root </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> r</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> p)</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> r</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> r</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        r</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> r</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="右旋" tabindex="-1"><a class="header-anchor" href="#右旋"><span><a href="#%E5%8F%B3%E6%97%8B">#</a> 右旋</span></a></h4><p>右旋的过程是将<code>x</code>的左子树绕<code>x</code>顺时针旋转，使得<code>x</code>的左子树成为<code>x</code>的父亲，同时修改相关节点的引用。旋转之后，二叉查找树的属性仍然满足。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_rotateRight.png" alt="TreeMap_rotateRight.png" tabindex="0" loading="lazy"><figcaption>TreeMap_rotateRight.png</figcaption></figure><p><em>TreeMap</em>中右旋代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//Rotate Right</span></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> rotateRight</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> p) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> l </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> l</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">l</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) </span><span style="color:#E5C07B;">l</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        l</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;">            root </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> p)</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        l</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> l</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="寻找节点后继" tabindex="-1"><a class="header-anchor" href="#寻找节点后继"><span><a href="#%E5%AF%BB%E6%89%BE%E8%8A%82%E7%82%B9%E5%90%8E%E7%BB%A7">#</a> 寻找节点后继</span></a></h4><p>对于一棵二叉查找树，给定节点t，其后继(树中比大于t的最小的那个元素)可以通过如下方式找到:</p><blockquote><ol><li>t的右子树不空，则t的后继是其右子树中最小的那个元素。</li><li>t的右孩子为空，则t的后继是其第一个向左走的祖先。</li></ol></blockquote><p>后继节点在红黑树的删除操作中将会用到。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_successor.png" alt="TreeMap_successor.png" tabindex="0" loading="lazy"><figcaption>TreeMap_successor.png</figcaption></figure><p><em>TreeMap</em>中寻找节点后继的代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 寻找节点后继函数successor()</span></span>
<span class="line"><span style="color:#C678DD;">static</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E5C07B;"> TreeMap</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> successor</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> t) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (t </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span><span style="color:#7F848E;font-style:italic;">// 1. t的右子树不空，则t的后继是其右子树中最小的那个元素</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        while</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;">            p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span><span style="color:#7F848E;font-style:italic;">// 2. t的右孩子为空，则t的后继是其第一个向左走的祖先</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> ch </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> t</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        while</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> ch </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            ch </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">            p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法剖析" tabindex="-1"><a class="header-anchor" href="#方法剖析"><span><a href="#%E6%96%B9%E6%B3%95%E5%89%96%E6%9E%90">#</a> 方法剖析</span></a></h3><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span><a href="#get">#</a> get()</span></a></h4><p><code>get(Object key)</code>方法根据指定的<code>key</code>值返回对应的<code>value</code>，该方法调用了<code>getEntry(Object key)</code>得到相应的<code>entry</code>，然后返回<code>entry.value</code>。因此<code>getEntry()</code>是算法的核心。算法思想是根据<code>key</code>的自然顺序(或者比较器顺序)对二叉查找树进行查找，直到找到满足<code>k.compareTo(p.key) == 0</code>的<code>entry</code>。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_getEntry.png" alt="TreeMap_getEntry.png" tabindex="0" loading="lazy"><figcaption>TreeMap_getEntry.png</figcaption></figure><p>具体代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//getEntry()方法</span></span>
<span class="line"><span style="color:#C678DD;">final</span><span style="color:#E5C07B;"> Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> getEntry</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;"> key) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ......</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (key </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span><span style="color:#7F848E;font-style:italic;">//不允许key值为null</span></span>
<span class="line"><span style="color:#C678DD;">        throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> NullPointerException</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    Comparable</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#C678DD;"> super</span><span style="color:#E5C07B;"> K</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> k </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">Comparable</span><span style="color:#56B6C2;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;"> super</span><span style="color:#E06C75;"> K</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">) key</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//使用元素的自然顺序</span></span>
<span class="line"><span style="color:#E5C07B;">    Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> p </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> root</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        int</span><span style="color:#E06C75;"> cmp </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> k</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">compareTo</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">key</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (cmp </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">)</span><span style="color:#7F848E;font-style:italic;">//向左找</span></span>
<span class="line"><span style="color:#E06C75;">            p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (cmp </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">)</span><span style="color:#7F848E;font-style:italic;">//向右找</span></span>
<span class="line"><span style="color:#E06C75;">            p </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#E06C75;"> p</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="put" tabindex="-1"><a class="header-anchor" href="#put"><span><a href="#put">#</a> put()</span></a></h4><p><code>put(K key, V value)</code>方法是将指定的<code>key</code>, <code>value</code>对添加到<code>map</code>里。该方法首先会对<code>map</code>做一次查找，看是否包含该元组，如果已经包含则直接返回，查找过程类似于<code>getEntry()</code>方法；如果没有找到则会在红黑树中插入新的<code>entry</code>，如果插入之后破坏了红黑树的约束条件，还需要进行调整(旋转，改变某些节点的颜色)。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> V</span><span style="color:#61AFEF;"> put</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">K</span><span style="color:#E06C75;"> key</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> V</span><span style="color:#E06C75;"> value) {</span></span>
<span class="line"><span style="color:#ABB2BF;">	......</span></span>
<span class="line"><span style="color:#C678DD;">    int</span><span style="color:#E06C75;"> cmp</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (key </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">        throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> NullPointerException</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    Comparable</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#C678DD;"> super</span><span style="color:#E5C07B;"> K</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> k </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">Comparable</span><span style="color:#56B6C2;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#E5C07B;"> super</span><span style="color:#E06C75;"> K</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;">) key</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//使用元素的自然顺序</span></span>
<span class="line"><span style="color:#C678DD;">    do</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        parent </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> t</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        cmp </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> k</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">compareTo</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">key</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (cmp </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">) t </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//向左找</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (cmp </span><span style="color:#56B6C2;">&gt;</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">) t </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//向右找</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> return</span><span style="color:#E5C07B;"> t</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setValue</span><span style="color:#ABB2BF;">(value);</span></span>
<span class="line"><span style="color:#E06C75;">    } </span><span style="color:#C678DD;">while</span><span style="color:#E06C75;"> (t </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">    Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> e </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Entry</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">(key</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> value</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> parent)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//创建并插入新的entry</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (cmp </span><span style="color:#56B6C2;">&lt;</span><span style="color:#D19A66;"> 0</span><span style="color:#E06C75;">) </span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    else</span><span style="color:#E5C07B;"> parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> e</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">    fixAfterInsertion</span><span style="color:#E06C75;">(e)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//调整</span></span>
<span class="line"><span style="color:#E06C75;">    size</span><span style="color:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码的插入部分并不难理解: 首先在红黑树上找到合适的位置，然后创建新的<code>entry</code>并插入(当然，新插入的节点一定是树的叶子)。难点是调整函数<code>fixAfterInsertion()</code>，前面已经说过，调整往往需要1.改变某些节点的颜色，2.对某些节点进行旋转。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_put.png" alt="TreeMap_put.png" tabindex="0" loading="lazy"><figcaption>TreeMap_put.png</figcaption></figure><p>调整函数<code>fixAfterInsertion()</code>的具体代码如下，其中用到了上文中提到的<code>rotateLeft()</code>和<code>rotateRight()</code>函数。通过代码我们能够看到，情况2其实是落在情况3内的。情况4～情况6跟前三种情况是对称的，因此图解中并没有画出后三种情况，读者可以参考代码自行理解。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//红黑树调整函数fixAfterInsertion()</span></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> fixAfterInsertion</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> x) {</span></span>
<span class="line"><span style="color:#E5C07B;">    x</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> RED</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#E06C75;"> (x </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> x </span><span style="color:#56B6C2;">!=</span><span style="color:#E06C75;"> root </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E5C07B;"> x</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> RED) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x) </span><span style="color:#56B6C2;">==</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))) {</span></span>
<span class="line"><span style="color:#E5C07B;">            Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> y </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> rightOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(y) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> RED) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">              // 情况1</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(y</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                        // 情况1</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">      // 情况1</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                 // 情况1</span></span>
<span class="line"><span style="color:#E06C75;">            } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#E06C75;"> (x </span><span style="color:#56B6C2;">==</span><span style="color:#61AFEF;"> rightOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))) {</span></span>
<span class="line"><span style="color:#E06C75;">                    x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                       // 情况2</span></span>
<span class="line"><span style="color:#61AFEF;">                    rotateLeft</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                         // 情况2</span></span>
<span class="line"><span style="color:#E06C75;">                }</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">              // 情况3</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">      // 情况3</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateRight</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">        // 情况3</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#E06C75;">        } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> y </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(y) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> RED) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">              // 情况4</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(y</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                        // 情况4</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">      // 情况4</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                 // 情况4</span></span>
<span class="line"><span style="color:#E06C75;">            } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#E06C75;"> (x </span><span style="color:#56B6C2;">==</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))) {</span></span>
<span class="line"><span style="color:#E06C75;">                    x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                       // 情况5</span></span>
<span class="line"><span style="color:#61AFEF;">                    rotateRight</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                        // 情况5</span></span>
<span class="line"><span style="color:#E06C75;">                }</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">              // 情况6</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">      // 情况6</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateLeft</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">         // 情况6</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    root</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> BLACK</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remove" tabindex="-1"><a class="header-anchor" href="#remove"><span><a href="#remove">#</a> remove()</span></a></h4><p><code>remove(Object key)</code>的作用是删除<code>key</code>值对应的<code>entry</code>，该方法首先通过上文中提到的<code>getEntry(Object key)</code>方法找到<code>key</code>值对应的<code>entry</code>，然后调用<code>deleteEntry(Entry&lt;K,V&gt; entry)</code>删除对应的<code>entry</code>。由于删除操作会改变红黑树的结构，有可能破坏红黑树的约束条件，因此有可能要进行调整。</p><p><code>getEntry()</code>函数前面已经讲解过，这里重点放<code>deleteEntry()</code>上，该函数删除指定的<code>entry</code>并在红黑树的约束被破坏时进行调用<code>fixAfterDeletion(Entry&lt;K,V&gt; x)</code>进行调整。</p><p><strong>由于红黑树是一棵增强版的二叉查找树，红黑树的删除操作跟普通二叉查找树的删除操作也就非常相似，唯一的区别是红黑树在节点删除之后可能需要进行调整</strong>。现在考虑一棵普通二叉查找树的删除过程，可以简单分为两种情况:</p><blockquote><ol><li>删除点p的左右子树都为空，或者只有一棵子树非空。</li><li>删除点p的左右子树都非空。</li></ol></blockquote><p>对于上述情况1，处理起来比较简单，直接将p删除(左右子树都为空时)，或者用非空子树替代p(只有一棵子树非空时)；对于情况2，可以用p的后继s(树中大于x的最小的那个元素)代替p，然后使用情况1删除s(此时s一定满足情况1.可以画画看)。</p><p>基于以上逻辑，红黑树的节点删除函数<code>deleteEntry()</code>代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 红黑树entry删除函数deleteEntry()</span></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> deleteEntry</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> p) {</span></span>
<span class="line"><span style="color:#E06C75;">    modCount</span><span style="color:#ABB2BF;">++;</span></span>
<span class="line"><span style="color:#E06C75;">    size</span><span style="color:#ABB2BF;">--;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span><span style="color:#7F848E;font-style:italic;">// 2. 删除点p的左右子树都非空。</span></span>
<span class="line"><span style="color:#E5C07B;">        Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> s </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> successor</span><span style="color:#E06C75;">(p)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">// 后继</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">key</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">key</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        p </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> s</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E5C07B;">    Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> replacement </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#C678DD;"> ?</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#C678DD;"> :</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#E06C75;">)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#E06C75;"> (replacement </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span><span style="color:#7F848E;font-style:italic;">// 1. 删除点p只有一棵子树非空。</span></span>
<span class="line"><span style="color:#E5C07B;">        replacement</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E06C75;">            root </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> replacement</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;">  =</span><span style="color:#E06C75;"> replacement</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        else</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> replacement</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">        p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> BLACK)</span></span>
<span class="line"><span style="color:#61AFEF;">            fixAfterDeletion</span><span style="color:#E06C75;">(replacement)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">// 调整</span></span>
<span class="line"><span style="color:#E06C75;">    } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        root </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> { </span><span style="color:#7F848E;font-style:italic;">// 1. 删除点p的左右子树都为空</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">color</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> BLACK)</span></span>
<span class="line"><span style="color:#61AFEF;">            fixAfterDeletion</span><span style="color:#E06C75;">(p)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">// 调整</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;">                p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">left</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            else</span><span style="color:#C678DD;"> if</span><span style="color:#E06C75;"> (p </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#E5C07B;">                p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">right</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">            p</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">parent</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码中占据大量代码行的，是用来修改父子节点间引用关系的代码，其逻辑并不难理解。下面着重讲解删除后调整函数<code>fixAfterDeletion()</code>。首先请思考一下，删除了哪些点才会导致调整？<strong>只有删除点是BLACK的时候，才会触发调整函数</strong>，因为删除RED节点不会破坏红黑树的任何约束，而删除BLACK节点会破坏规则4。</p><p>跟上文中讲过的<code>fixAfterInsertion()</code>函数一样，这里也要分成若干种情况。记住，<strong>无论有多少情况，具体的调整操作只有两种: 1.改变某些节点的颜色，2.对某些节点进行旋转。</strong></p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_fixAfterDeletion.png" alt="TreeMap_fixAfterDeletion.png" tabindex="0" loading="lazy"><figcaption>TreeMap_fixAfterDeletion.png</figcaption></figure><p>上述图解的总体思想是: 将情况1首先转换成情况2，或者转换成情况3和情况4。当然，该图解并不意味着调整过程一定是从情况1开始。通过后续代码我们还会发现几个有趣的规则: a).如果是由情况1之后紧接着进入的情况2，那么情况2之后一定会退出循环(因为x为红色)；b).一旦进入情况3和情况4，一定会退出循环(因为x为root)。</p><p>删除后调整函数<code>fixAfterDeletion()</code>的具体代码如下，其中用到了上文中提到的<code>rotateLeft()</code>和<code>rotateRight()</code>函数。通过代码我们能够看到，情况3其实是落在情况4内的。情况5～情况8跟前四种情况是对称的，因此图解中并没有画出后四种情况，读者可以参考代码自行理解。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> fixAfterDeletion</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Entry</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">V</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> x) {</span></span>
<span class="line"><span style="color:#C678DD;">    while</span><span style="color:#E06C75;"> (x </span><span style="color:#56B6C2;">!=</span><span style="color:#E06C75;"> root </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#61AFEF;"> colorOf</span><span style="color:#E06C75;">(x) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#E06C75;"> (x </span><span style="color:#56B6C2;">==</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))) {</span></span>
<span class="line"><span style="color:#E5C07B;">            Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> rightOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(sib) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> RED) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                   // 情况1</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">             // 情况1</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateLeft</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                // 情况1</span></span>
<span class="line"><span style="color:#E06C75;">                sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> rightOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">             // 情况1</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">leftOf</span><span style="color:#E06C75;">(sib))  </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK </span><span style="color:#56B6C2;">&amp;&amp;</span></span>
<span class="line"><span style="color:#61AFEF;">                colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">rightOf</span><span style="color:#E06C75;">(sib)) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                     // 情况2</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                        // 情况2</span></span>
<span class="line"><span style="color:#E06C75;">            } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">rightOf</span><span style="color:#E06C75;">(sib)) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK) {</span></span>
<span class="line"><span style="color:#61AFEF;">                    setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">leftOf</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">       // 情况3</span></span>
<span class="line"><span style="color:#61AFEF;">                    setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                 // 情况3</span></span>
<span class="line"><span style="color:#61AFEF;">                    rotateRight</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                   // 情况3</span></span>
<span class="line"><span style="color:#E06C75;">                    sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> rightOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">         // 情况3</span></span>
<span class="line"><span style="color:#E06C75;">                }</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">    // 情况4</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">           // 情况4</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">rightOf</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">          // 情况4</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateLeft</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                // 情况4</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> root</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                               // 情况4</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#E06C75;">        } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> { </span><span style="color:#7F848E;font-style:italic;">// 跟前四种情况对称</span></span>
<span class="line"><span style="color:#E5C07B;">            Entry</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">V</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(sib) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> RED) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                   // 情况5</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">             // 情况5</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateRight</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">               // 情况5</span></span>
<span class="line"><span style="color:#E06C75;">                sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">              // 情况5</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">rightOf</span><span style="color:#E06C75;">(sib)) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK </span><span style="color:#56B6C2;">&amp;&amp;</span></span>
<span class="line"><span style="color:#61AFEF;">                colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">leftOf</span><span style="color:#E06C75;">(sib)) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK) {</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                     // 情况6</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                        // 情况6</span></span>
<span class="line"><span style="color:#E06C75;">            } </span><span style="color:#C678DD;">else</span><span style="color:#E06C75;"> {</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#E06C75;"> (</span><span style="color:#61AFEF;">colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">leftOf</span><span style="color:#E06C75;">(sib)) </span><span style="color:#56B6C2;">==</span><span style="color:#E06C75;"> BLACK) {</span></span>
<span class="line"><span style="color:#61AFEF;">                    setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">rightOf</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">      // 情况7</span></span>
<span class="line"><span style="color:#61AFEF;">                    setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> RED)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                 // 情况7</span></span>
<span class="line"><span style="color:#61AFEF;">                    rotateLeft</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                    // 情况7</span></span>
<span class="line"><span style="color:#E06C75;">                    sib </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> leftOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">          // 情况7</span></span>
<span class="line"><span style="color:#E06C75;">                }</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(sib</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;"> colorOf</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">    // 情况8</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">           // 情况8</span></span>
<span class="line"><span style="color:#61AFEF;">                setColor</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">leftOf</span><span style="color:#E06C75;">(sib)</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">           // 情况8</span></span>
<span class="line"><span style="color:#61AFEF;">                rotateRight</span><span style="color:#E06C75;">(</span><span style="color:#61AFEF;">parentOf</span><span style="color:#E06C75;">(x))</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">               // 情况8</span></span>
<span class="line"><span style="color:#E06C75;">                x </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> root</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">                               // 情况8</span></span>
<span class="line"><span style="color:#E06C75;">            }</span></span>
<span class="line"><span style="color:#E06C75;">        }</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    setColor</span><span style="color:#E06C75;">(x</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> BLACK)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treeset" tabindex="-1"><a class="header-anchor" href="#treeset"><span><a href="#treeset">#</a> TreeSet</span></a></h3><p>前面已经说过<code>TreeSet</code>是对<code>TreeMap</code>的简单包装，对<code>TreeSet</code>的函数调用都会转换成合适的<code>TreeMap</code>方法，因此<code>TreeSet</code>的实现非常简单。这里不再赘述。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// TreeSet是对TreeMap的简单包装</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> TreeSet</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> AbstractSet</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">    implements</span><span style="color:#E5C07B;"> NavigableSet</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;,</span><span style="color:#E5C07B;"> Cloneable</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> java.io.</span><span style="color:#E5C07B;">Serializable</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">	......</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> transient</span><span style="color:#E5C07B;"> NavigableMap</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> m</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // Dummy value to associate with an Object in the backing Map</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> Object</span><span style="color:#E06C75;"> PRESENT </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Object</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#61AFEF;"> TreeSet</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">m</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> TreeMap</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt;();</span><span style="color:#7F848E;font-style:italic;">// TreeSet里面有一个TreeMap</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ......</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">E</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(e, PRESENT)</span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ......</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,62),e=[o];function t(r,c){return n(),a("div",null,e)}const i=s(p,[["render",t],["__file","TreeSet _ TreeMap 源码解.html.vue"]]),B=JSON.parse(`{"path":"/posts/Java/Collection/TreeSet%20_%20TreeMap%20%E6%BA%90%E7%A0%81%E8%A7%A3.html","title":"TreeSet & TreeMap 源码解析","lang":"zh-CN","frontmatter":{"title":"TreeSet & TreeMap 源码解析","subtitle":"Java，Java开发，Java 体系","date":"2024-03-06T10:15:26.000Z","category":["Java"],"tag":["Java","Collection"],"order":8,"description":"本文主要对Map - TreeSet & TreeMap 源码解析。 Java 7 - TreeSet & TreeMap 总体介绍 预备知识 方法剖析 TreeSet # Java 7 - TreeSet & TreeMap # 总体介绍 之所以把TreeSet和TreeMap放在一起讲解，是因为二者在Java里有着相同的实现，前者仅仅是对后者做了一...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/posts/Java/Collection/TreeSet%20_%20TreeMap%20%E6%BA%90%E7%A0%81%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"TreeSet & TreeMap 源码解析"}],["meta",{"property":"og:description","content":"本文主要对Map - TreeSet & TreeMap 源码解析。 Java 7 - TreeSet & TreeMap 总体介绍 预备知识 方法剖析 TreeSet # Java 7 - TreeSet & TreeMap # 总体介绍 之所以把TreeSet和TreeMap放在一起讲解，是因为二者在Java里有着相同的实现，前者仅仅是对后者做了一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_base.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-08T03:51:56.000Z"}],["meta",{"property":"article:author","content":"Cactus li"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Collection"}],["meta",{"property":"article:published_time","content":"2024-03-06T10:15:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-08T03:51:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TreeSet & TreeMap 源码解析\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_base.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_rotateLeft.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_rotateRight.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_successor.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_getEntry.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_put.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/Java/TreeMap_fixAfterDeletion.png\\"],\\"datePublished\\":\\"2024-03-06T10:15:26.000Z\\",\\"dateModified\\":\\"2024-03-08T03:51:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"# Java 7 - TreeSet & TreeMap","slug":"java-7-treeset-treemap","link":"#java-7-treeset-treemap","children":[{"level":3,"title":"# 总体介绍","slug":"总体介绍","link":"#总体介绍","children":[]},{"level":3,"title":"# 预备知识","slug":"预备知识","link":"#预备知识","children":[]},{"level":3,"title":"# 方法剖析","slug":"方法剖析","link":"#方法剖析","children":[]},{"level":3,"title":"# TreeSet","slug":"treeset","link":"#treeset","children":[]}]}],"git":{"createdTime":1709869916000,"updatedTime":1709869916000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":1}]},"readingTime":{"minutes":11.29,"words":3387},"filePathRelative":"posts/Java/Collection/TreeSet & TreeMap 源码解.md","localizedDate":"2024年3月6日","excerpt":"<blockquote>\\n<p>本文主要对Map - TreeSet &amp; TreeMap 源码解析。</p>\\n</blockquote>\\n<ul>\\n<li>Java 7 - TreeSet &amp; TreeMap\\n<ul>\\n<li><a href=\\"#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D\\">总体介绍</a></li>\\n<li><a href=\\"#%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86\\">预备知识</a></li>\\n<li><a href=\\"#%E6%96%B9%E6%B3%95%E5%89%96%E6%9E%90\\">方法剖析</a></li>\\n<li><a href=\\"#treeset\\">TreeSet</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{i as comp,B as data};
