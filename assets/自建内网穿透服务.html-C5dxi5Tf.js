import{_ as s,c as e,f as a,o as l}from"./app-DtbNkrIe.js";const t={};function n(h,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h2 id="自建内网穿透服务-easytier" tabindex="-1"><a class="header-anchor" href="#自建内网穿透服务-easytier"><span>自建内网穿透服务 EasyTier</span></a></h2><p>一个简单、安全、去中心化的内网穿透 VPN 组网方案，使用 Rust 语言和 Tokio 框架实现。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ol><li><p><strong>下载预编译的二进制文件</strong></p><p>访问 <a href="https://github.com/KKRainbow/EasyTier/releases" target="_blank" rel="noopener noreferrer">GitHub Release 页面</a> 下载适用于您操作系统的二进制文件。Release 压缩包中同时包含命令行程序和图形界面程序。</p></li><li><p><strong>通过 <a href="http://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a> 安装</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>通过源码安装</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/KKRainbow/EasyTier.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><blockquote><p>下文仅描述命令行工具的使用，图形界面程序可参考下述概念自行配置。</p></blockquote><p>确保已按照 <a href="https://github.com/EasyTier/EasyTier/blob/main/README_CN.md#%E5%AE%89%E8%A3%85" target="_blank" rel="noopener noreferrer">安装指南</a> 安装 EasyTier，并且 easytier-core 和 easytier-cli 两个命令都已经可用。</p><h3 id="双节点组网" tabindex="-1"><a class="header-anchor" href="#双节点组网"><span>双节点组网</span></a></h3><p>假设双节点的网络拓扑如下</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240511172954755.png" alt="image-20240511172954755" tabindex="0" loading="lazy"><figcaption>image-20240511172954755</figcaption></figure><p>在节点 A 上执行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令执行成功会有如下打印。</p><p>[<img src="https://lixuanfengs.github.io/blog-images/vp/web/image-2.png" alt="alt text" loading="lazy"></p><p>在节点 B 执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --peers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> udp://22.1.1.1:11010</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>测试联通性</p><p>两个节点应成功连接并能够在虚拟子网内通信</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ping</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 easytier-cli 查看子网中的节点信息</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">easytier-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> peer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><a href="https://github.com/EasyTier/EasyTier/blob/main/assets/image.png" target="_blank" rel="noopener noreferrer"><img src="https://lixuanfengs.github.io/blog-images/vp/web/image.png" alt="alt text" tabindex="0" loading="lazy"></a><figcaption>alt text</figcaption></figure><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">easytier-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><a href="https://github.com/EasyTier/EasyTier/blob/main/assets/image-1.png" target="_blank" rel="noopener noreferrer"><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-1.png" alt="alt text" tabindex="0" loading="lazy"></a><figcaption>alt text</figcaption></figure><hr><h3 id="多节点组网" tabindex="-1"><a class="header-anchor" href="#多节点组网"><span>多节点组网</span></a></h3><p>基于刚才的双节点组网例子，如果有更多的节点需要加入虚拟网络，可以使用如下命令。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --peers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> udp://22.1.1.1:11010</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>--peers </code> 参数可以填写任意一个已经在虚拟网络中的节点的监听地址。</p><hr><h3 id="子网代理-点对网-配置" tabindex="-1"><a class="header-anchor" href="#子网代理-点对网-配置"><span>子网代理（点对网）配置</span></a></h3><p>假设网络拓扑如下，节点 B 想将其可访问的子网 10.1.1.0/24 共享给其他节点。</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240511173028549.png" alt="image-20240511173028549" tabindex="0" loading="lazy"><figcaption>image-20240511173028549</figcaption></figure><p>则节点 B 的 easytier 启动参数为（新增 -n 参数）</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10.1.1.0/24</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>子网代理信息会自动同步到虚拟网络的每个节点，各个节点会自动配置相应的路由，节点 A 可以通过如下命令检查子网代理是否生效。</p><ol><li><p>检查路由信息是否已经同步，proxy_cidrs 列展示了被代理的子网。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">easytier-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/EasyTier-01.png" alt="EasyTier-01" tabindex="0" loading="lazy"><figcaption>EasyTier-01</figcaption></figure></li><li><p>测试节点 A 是否可访问被代理子网下的节点</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ping</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.1.1.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><hr><h3 id="无公网ip组网" tabindex="-1"><a class="header-anchor" href="#无公网ip组网"><span>无公网IP组网</span></a></h3><p>EasyTier 支持共享公网节点进行组网。目前已部署共享的公网节点 <code>tcp://easytier.public.kkrainbow.top:11010</code>。</p><p>使用共享节点时，需要每个入网节点提供相同的 <code>--network-name</code> 和 <code>--network-secret</code> 参数，作为网络的唯一标识。</p><p>以双节点为例，节点 A 执行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network-name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network-secret</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://easytier.public.kkrainbow.top:11010</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>节点 B 执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network-name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --network-secret</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> abc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://easytier.public.kkrainbow.top:11010</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令执行成功后，节点 A 即可通过虚拟 IP 10.144.144.2 访问节点 B。</p><hr><h3 id="使用-wireguard-客户端接入" tabindex="-1"><a class="header-anchor" href="#使用-wireguard-客户端接入"><span>使用 WireGuard 客户端接入</span></a></h3><p>EasyTier 可以用作 WireGuard 服务端，让任意安装了 WireGuard 客户端的设备访问 EasyTier 网络。对于目前 EasyTier 不支持的平台 （如 iOS、Android 等），可以使用这种方式接入 EasyTier 网络。</p><p>假设网络拓扑如下：</p><figure><img src="https://lixuanfengs.github.io/blog-images/vp/web/image-20240511173110462.png" alt="image-20240511173110462" tabindex="0" loading="lazy"><figcaption>image-20240511173110462</figcaption></figure><p>我们需要 iPhone 通过节点 A 访问 EasyTier 网络，则可进行如下配置：</p><p>在节点 A 的 easytier-core 命令中，加入 --vpn-portal 参数，指定 WireGuard 服务监听的端口，以及 WireGuard 网络使用的网段。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以下参数的含义为： 监听 0.0.0.0:11013 端口，WireGuard 使用 10.14.14.0/24 网段</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> easytier-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ipv4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.144.144.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --vpn-portal</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg://0.0.0.0:11013/10.14.14.0/24</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>easytier-core 启动成功后，使用 easytier-cli 获取 WireGuard Client 的配置。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">easytier-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vpn-portal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">portal_name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wireguard</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">############### client_config_start ###############</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Interface]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PrivateKey</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9VDvlaIC9XHUvRuE06hD2CEDrtGF+0lDthgr9SZfIho=</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Address</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10.14.14.0/32</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # should assign an ip from this cidr manually</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Peer]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PublicKey</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zhrZQg4QdPZs8CajT3r4fmzcNsWpBL9ImQCUsnlXyGM=</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AllowedIPs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10.144.144.0/24,10.14.14.0/24</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Endpoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:11013</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # should be the public ip(or domain) of the vpn server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PersistentKeepalive</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 25</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">############### client_config_end ###############</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">connected_clients:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 Client Config 前，需要将 Interface Address 和 Peer Endpoint 分别修改为客户端的 IP 和 EasyTier 节点的 IP。将配置文件导入 WireGuard 客户端，即可访问 EasyTier 网络。</p><hr><h3 id="其他配置" tabindex="-1"><a class="header-anchor" href="#其他配置"><span>其他配置</span></a></h3><p>可使用 <code>easytier-core --help</code> 查看全部配置项</p>`,60)]))}const p=s(t,[["render",n],["__file","自建内网穿透服务.html.vue"]]),d=JSON.parse(`{"path":"/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1.html","title":"自建内网穿透服务","lang":"zh-CN","frontmatter":{"title":"自建内网穿透服务","subtitle":"自建内网穿透服务","date":"2024-04-03T15:36:20.000Z","category":["easyTier"],"tag":["easyTier"],"order":6,"description":"自建内网穿透服务 EasyTier 一个简单、安全、去中心化的内网穿透 VPN 组网方案，使用 Rust 语言和 Tokio 框架实现。 安装 下载预编译的二进制文件 访问 GitHub Release 页面 下载适用于您操作系统的二进制文件。Release 压缩包中同时包含命令行程序和图形界面程序。 通过 crates.io 安装 通过源码安装 快速...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"自建内网穿透服务"}],["meta",{"property":"og:description","content":"自建内网穿透服务 EasyTier 一个简单、安全、去中心化的内网穿透 VPN 组网方案，使用 Rust 语言和 Tokio 框架实现。 安装 下载预编译的二进制文件 访问 GitHub Release 页面 下载适用于您操作系统的二进制文件。Release 压缩包中同时包含命令行程序和图形界面程序。 通过 crates.io 安装 通过源码安装 快速..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/vp/web/image-20240511172954755.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-17T02:57:50.000Z"}],["meta",{"property":"article:tag","content":"easyTier"}],["meta",{"property":"article:published_time","content":"2024-04-03T15:36:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-17T02:57:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自建内网穿透服务\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240511172954755.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-2.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-1.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240511173028549.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/EasyTier-01.png\\",\\"https://lixuanfengs.github.io/blog-images/vp/web/image-20240511173110462.png\\"],\\"datePublished\\":\\"2024-04-03T15:36:20.000Z\\",\\"dateModified\\":\\"2024-10-17T02:57:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"自建内网穿透服务 EasyTier","slug":"自建内网穿透服务-easytier","link":"#自建内网穿透服务-easytier","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"双节点组网","slug":"双节点组网","link":"#双节点组网","children":[]},{"level":3,"title":"多节点组网","slug":"多节点组网","link":"#多节点组网","children":[]},{"level":3,"title":"子网代理（点对网）配置","slug":"子网代理-点对网-配置","link":"#子网代理-点对网-配置","children":[]},{"level":3,"title":"无公网IP组网","slug":"无公网ip组网","link":"#无公网ip组网","children":[]},{"level":3,"title":"使用 WireGuard 客户端接入","slug":"使用-wireguard-客户端接入","link":"#使用-wireguard-客户端接入","children":[]},{"level":3,"title":"其他配置","slug":"其他配置","link":"#其他配置","children":[]}]}],"git":{"createdTime":1715393296000,"updatedTime":1729133870000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":4}]},"readingTime":{"minutes":3.5,"words":1051},"filePathRelative":"tutorial/系统开发部署/自建内网穿透服务.md","localizedDate":"2024年4月3日","excerpt":"<h2>自建内网穿透服务 EasyTier</h2>\\n<p>一个简单、安全、去中心化的内网穿透 VPN 组网方案，使用 Rust 语言和 Tokio 框架实现。</p>\\n<h2>安装</h2>\\n<ol>\\n<li>\\n<p><strong>下载预编译的二进制文件</strong></p>\\n<p>访问 <a href=\\"https://github.com/KKRainbow/EasyTier/releases\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitHub Release 页面</a> 下载适用于您操作系统的二进制文件。Release 压缩包中同时包含命令行程序和图形界面程序。</p>\\n</li>\\n<li>\\n<p><strong>通过 <a href=\\"http://crates.io\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">crates.io</a> 安装</strong></p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">cargo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> easytier</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>通过源码安装</strong></p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">cargo</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --git</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> https://github.com/KKRainbow/EasyTier.git</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}`);export{p as comp,d as data};
