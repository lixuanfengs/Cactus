import{_ as s,o as n,c as a,h as l}from"./app-Cpl0HuRl.js";const e={},o=l(`<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p><code>Spring Security</code> 提供了默认的认证规则，同时也支持各种自定义配置。本文档的重点在于深入研究 <code>Spring Security</code> 中表单登录的相关自定义配置。</p><h2 id="_2-自定义登录页" tabindex="-1"><a class="header-anchor" href="#_2-自定义登录页"><span>2. 自定义登录页</span></a></h2><p>对于未认证的请求，Spring Security 会将其重定向到默认的登录页面。同时，也支持自定义登录页面。首先，可以创建一个简单的登录页 <code>login.html</code>，并将其放置在 <code>resources\\static</code> 目录下。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;en&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;登录页面&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">form</span><span style="color:#D19A66;"> action</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;/login&quot;</span><span style="color:#D19A66;"> method</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;post&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    用户名：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">/&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    密码： &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#ABB2BF;">/&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;submit&quot;</span><span style="color:#D19A66;"> value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;登录&quot;</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置类中，设置表单登录的<code>loginPage</code>、<code>loginProcessingUrl</code>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">Configuration</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 开启 Spring Security，debug：是否开启Debug模式</span></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#E5C07B;">EnableWebSecurity</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">debug</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> false</span><span style="color:#E06C75;">)</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> CactusSecurityConfig</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> SecurityFilterChain</span><span style="color:#61AFEF;"> securityFilterChain</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpSecurity</span><span style="color:#E06C75;font-style:italic;"> http</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> Exception</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">        http</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 配置所有的Http请求必须认证后才能访问</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">authorizeHttpRequests</span><span style="color:#ABB2BF;">((authorize) </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> authorize</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">requestMatchers</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">permitAll</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">anyRequest</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">authenticated</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                )</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启Basic认证</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">httpBasic</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">withDefaults</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(formLoginConfigurer </span><span style="color:#C678DD;">-&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">                        formLoginConfigurer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                                            .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login&quot;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> http</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">build</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 注入自定义 UserDetailsService 实现类</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> UserDetailsService</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#E5C07B;">    CactusUserDetailsService</span><span style="color:#61AFEF;"> cactusUserDetailsService</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> CactusUserDetailsService</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 密码器</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Bean</span></span>
<span class="line"><span style="color:#E5C07B;">    PasswordEncoder</span><span style="color:#61AFEF;"> passwordEncoder</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> BCryptPasswordEncoder</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//    @Bean</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//    CactusOncePerRequestFilter oncePerRequestFilter() {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//        return new CactusOncePerRequestFilter();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问测试接口，会跳转到自定义登录页：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240124111318387.png" alt="image-20240124111318387" tabindex="0" loading="lazy"><figcaption>image-20240124111318387</figcaption></figure><h2 id="_3-自定义登录请求处理路径" tabindex="-1"><a class="header-anchor" href="#_3-自定义登录请求处理路径"><span>3. 自定义登录请求处理路径</span></a></h2><p><code>Spring Security</code>默认对<code>POST /login</code>的请求进行认证处理，也支持自定义<strong>登录请求处理路径</strong>。</p><p>修改表单登录<code>loginProcessingUrl</code>为自定义路径：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">        http</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 配置所有的Http请求必须认证后才能访问</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">authorizeHttpRequests</span><span style="color:#ABB2BF;">((authorize) </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> authorize</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">requestMatchers</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">permitAll</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">anyRequest</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">authenticated</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">                )</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启Basic认证</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">httpBasic</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">withDefaults</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(formLoginConfigurer </span><span style="color:#C678DD;">-&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">                        formLoginConfigurer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                                            .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">));</span><span style="color:#7F848E;font-style:italic;"> // 自定义登录请求路径 URL</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面中也同步修改提交表单时的请求路径,ji</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">form</span><span style="color:#D19A66;"> action</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#D19A66;"> method</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;POST&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    用户名：&lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;username&quot;</span><span style="color:#ABB2BF;">/&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    密码： &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;password&quot;</span><span style="color:#ABB2BF;">/&gt;&lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;submit&quot;</span><span style="color:#D19A66;"> value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;登录&quot;</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">form</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意 POST 可不能写成小的了，这里是区分大小写</p></blockquote><p>重启项目，进行登录，可以发现当前<strong>用户名密码认证过滤器</strong>中处理登录的路径变为了我们的自定义：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240125172357920.png" alt="image-20240125172357920" tabindex="0" loading="lazy"><figcaption>image-20240125172357920</figcaption></figure><h2 id="_4-自定义用户名密码参数名称" tabindex="-1"><a class="header-anchor" href="#_4-自定义用户名密码参数名称"><span>4. 自定义用户名密码参数名称</span></a></h2><p>默认表单登录中用户名密码参数名称为<code>username</code>、<code>password</code>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">	public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> SPRING_SECURITY_FORM_USERNAME_KEY </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;username&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	public</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;"> SPRING_SECURITY_FORM_PASSWORD_KEY </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;password&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置类中设置自定义参数名称即可：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">))</span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义登录页中也需要修改参数名：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240125172702273.png" alt="image-20240125172702273" tabindex="0" loading="lazy"><figcaption>image-20240125172702273</figcaption></figure><h2 id="_5-自定义登录成功跳转地址" tabindex="-1"><a class="header-anchor" href="#_5-自定义登录成功跳转地址"><span>5. 自定义登录成功跳转地址</span></a></h2><p>如果通过其他访问地址跳转到登录页，登录成功后，默认会返回到原始的地址。但如果直接访问登录页，则会跳转到根路径 <code>/</code>。在这种情况下，Spring Boot会自动查找是否存在 <code>index.html</code>，如果不存在则显示空白页。</p><p>为了自定义登录成功后的跳转地址，可以通过配置 <code>successForwardUrl</code> 来实现。这时使用的是请求转发。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义用户名参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//自定义密码参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">successForwardUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/index&quot;</span><span style="color:#ABB2BF;">))</span><span style="color:#7F848E;font-style:italic;"> // 自定义登录成功后转发的地址（请求转发，地址栏不变）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以配置<code>defaultSuccessUrl</code>，使用的是重定向：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义用户名参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//自定义密码参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">defaultSuccessUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/index&quot;</span><span style="color:#ABB2BF;">))</span><span style="color:#7F848E;font-style:italic;"> // 自定义登录成功后重定向的地址（重定向，地址栏变），会优先跳转到登陆前访问的页面，也可以设置总是跳转到该地址</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-自定义登录失败跳转地址" tabindex="-1"><a class="header-anchor" href="#_6-自定义登录失败跳转地址"><span>6. 自定义登录失败跳转地址</span></a></h2><p>默认情况下，认证失败后会重定向到 <code>/login?error</code>，然后再次重定向到<strong>登录页</strong>并显示错误信息。</p><p>与自定义登录成功跳转地址相似，你也可以通过配置认证失败时的跳转地址来实现。这样的配置方式与之前提到的 <code>successForwardUrl</code> 类似。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义用户名参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//自定义密码参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">defaultSuccessUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/index&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录成功后重定向的地址（重定向，地址栏变），会优先跳转到登陆前访问的页面，也可以设置总是跳转到该地址</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">failureForwardUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login/failure&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录失败后跳转的地址（转发，地址栏不变）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        //.failureUrl(&quot;/login/failure&quot;) // 自定义登录失败后重定向的地址（重定向，地址栏变）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        </span></span>
<span class="line"><span style="color:#ABB2BF;">                )</span><span style="color:#E06C75;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-自定义认证成功处理器" tabindex="-1"><a class="header-anchor" href="#_7-自定义认证成功处理器"><span>7. 自定义认证成功处理器</span></a></h2><p>默认情况下，登录成功后会跳转到首页或者登录前访问的地址，同时也可以自定义跳转路径。</p><p>然而，随着现代应用的发展，许多应用都采用前后端分离的架构，通过JSON实现交互。在这种情况下，后端可能不包含任何页面，也无需处理页面跳转。相反，它只需要通知前端登录成功，并返回用户信息，由前端决定是否进行页面跳转。</p><p>在登录流程中，登录成功后会调用认证成功处理器（默认为 <code>SavedRequestAwareAuthenticationSuccessHandler</code>）来处理页面跳转。这个处理器的默认行为是跳转到之前访问的地址。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">	protected</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> successfulAuthentication</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#E06C75;"> request</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> HttpServletResponse</span><span style="color:#E06C75;"> response</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> FilterChain</span><span style="color:#E06C75;"> chain</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">			Authentication</span><span style="color:#E06C75;"> authResult) throws IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> ServletException {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 把认证信息封装到 SecurityContext 中</span></span>
<span class="line"><span style="color:#E5C07B;">		SecurityContext</span><span style="color:#E06C75;"> context </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">securityContextHolderStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createEmptyContext</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">		context</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAuthentication</span><span style="color:#ABB2BF;">(authResult);</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">securityContextHolderStrategy</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setContext</span><span style="color:#ABB2BF;">(context);</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">securityContextRepository</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">saveContext</span><span style="color:#ABB2BF;">(context, request, response);</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isDebugEnabled</span><span style="color:#ABB2BF;">()</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">debug</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">LogMessage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Set SecurityContextHolder to %s&quot;</span><span style="color:#ABB2BF;">, authResult));</span></span>
<span class="line"><span style="color:#E06C75;">		}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //  rememberMe 处理</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">rememberMeServices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loginSuccess</span><span style="color:#ABB2BF;">(request, response, authResult);</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#E06C75;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">eventPublisher</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> null</span><span style="color:#E06C75;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 发布认证成功事件</span></span>
<span class="line"><span style="color:#E5C07B;">			this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">eventPublisher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">publishEvent</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> InteractiveAuthenticationSuccessEvent</span><span style="color:#ABB2BF;">(authResult, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getClass</span><span style="color:#ABB2BF;">()));</span></span>
<span class="line"><span style="color:#E06C75;">		}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 调用成功处理器，重定向到登录前 URL</span></span>
<span class="line"><span style="color:#E5C07B;">		this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">successHandler</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onAuthenticationSuccess</span><span style="color:#ABB2BF;">(request, response, authResult);</span></span>
<span class="line"><span style="color:#E06C75;">	}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么只需要自定义认证成功处理器，就可以直接实现<code>JSON</code>返回了，<code>AuthenticationSuccessHandler </code>用于处理用户身份验证成功后的处理策略，实现可以随心所欲：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> AuthenticationSuccessHandler</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">	default</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onAuthenticationSuccess</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#E06C75;font-style:italic;"> request</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">HttpServletResponse</span><span style="color:#E06C75;font-style:italic;"> response</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">FilterChain</span><span style="color:#E06C75;font-style:italic;"> chain</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">			Authentication</span><span style="color:#E06C75;font-style:italic;"> authentication</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> ServletException</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">		onAuthenticationSuccess</span><span style="color:#ABB2BF;">(request, response, authentication);</span></span>
<span class="line"><span style="color:#E5C07B;">		chain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">doFilter</span><span style="color:#ABB2BF;">(request, response);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 当用户已成功通过身份验证时调用</span></span>
<span class="line"><span style="color:#C678DD;">	void</span><span style="color:#61AFEF;"> onAuthenticationSuccess</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#E06C75;font-style:italic;"> request</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">HttpServletResponse</span><span style="color:#E06C75;font-style:italic;"> response</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">			Authentication</span><span style="color:#E06C75;font-style:italic;"> authentication</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;"> throws</span><span style="color:#E5C07B;"> IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> ServletException</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义登录成功后直接返回 <code>JSON</code>：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * 登录成功后直接返回 JSON</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> request</span><span style="color:#7F848E;font-style:italic;">        请求</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> response</span><span style="color:#7F848E;font-style:italic;">       响应</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> authentication</span><span style="color:#7F848E;font-style:italic;"> 成功认证的用户信息</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onAuthenticationSuccess</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#E06C75;"> request</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> HttpServletResponse</span><span style="color:#E06C75;"> response</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Authentication</span><span style="color:#E06C75;"> authentication) throws IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> ServletException {</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setContentType</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;application/json;charset=utf-8&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;"> // 返回JSON</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setStatus</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpStatus</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">OK</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">value</span><span style="color:#ABB2BF;">());</span><span style="color:#7F848E;font-style:italic;">  // 状态码 200</span></span>
<span class="line"><span style="color:#E5C07B;">        Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> result </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> HashMap</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // 返回结果</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;msg&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;登录成功&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;code&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">, authentication);</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getWriter</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSONUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJsonStr</span><span style="color:#ABB2BF;">(result));</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置表单登录：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义用户名参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//自定义密码参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">successHandler</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> JsonAuthenticationSuccessHandler</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>apifox 测试结果如下：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126100851292.png" alt="image-20240126100851292" tabindex="0" loading="lazy"><figcaption>image-20240126100851292</figcaption></figure><h2 id="_8-自定义认证失败处理器" tabindex="-1"><a class="header-anchor" href="#_8-自定义认证失败处理器"><span>8. 自定义认证失败处理器</span></a></h2><p>登录失败时，默认还是会跳转到内部登录页：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126101110509.png" alt="image-20240126101110509" tabindex="0" loading="lazy"><figcaption>image-20240126101110509</figcaption></figure><p>在前后端分离时，还是需要返回<code>JSON</code>，由前端去处理，同理定义一个认证失败处理器即可：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    @</span><span style="color:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> onAuthenticationFailure</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">HttpServletRequest</span><span style="color:#E06C75;"> request</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> HttpServletResponse</span><span style="color:#E06C75;"> response</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> AuthenticationException</span><span style="color:#E06C75;"> exception) throws IOException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> ServletException {</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setContentType</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;application/json;charset=utf-8&quot;</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;"> // 返回JSON</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setStatus</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">HttpStatus</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">BAD_REQUEST</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">value</span><span style="color:#ABB2BF;">());</span><span style="color:#7F848E;font-style:italic;">  // 状态码 400</span></span>
<span class="line"><span style="color:#E5C07B;">        Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> result </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> HashMap</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">()</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;"> // 返回结果</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;msg&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;登录失败&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;code&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;data&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">exception</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getMessage</span><span style="color:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#E5C07B;">        response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getWriter</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">write</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSONUtil</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJsonStr</span><span style="color:#ABB2BF;">(result));</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把配置项加入表单登录配置：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">                // 开启表单登录</span></span>
<span class="line"><span style="color:#ABB2BF;">                .</span><span style="color:#61AFEF;">formLogin</span><span style="color:#ABB2BF;">(form </span><span style="color:#C678DD;">-&gt;</span><span style="color:#ABB2BF;"> form</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginPage</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/login.html&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录页面（注意要同步配置 loginProcessingUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">loginProcessingUrl</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/custom/login&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义登录请求路径 URL</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">usernameParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 自定义用户名参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">passwordParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;pwd&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//自定义密码参数名称</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">successHandler</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> JsonAuthenticationSuccessHandler</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#ABB2BF;">                        .</span><span style="color:#61AFEF;">failureHandler</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> JsonAuthenticationFailureHandler</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果如下：</p><figure><img src="https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126101142844.png" alt="image-20240126101142844" tabindex="0" loading="lazy"><figcaption>image-20240126101142844</figcaption></figure>`,57),p=[o];function t(c,r){return n(),a("div",null,p)}const B=s(e,[["render",t],["__file","Spring Security 6.x 系列【7】认证篇之表单登录的自定义配置.html.vue"]]),y=JSON.parse(`{"path":"/tutorial/Spring%20Security%206.x%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/Spring%20Security%206.x%20%E7%B3%BB%E5%88%97%E3%80%907%E3%80%91%E8%AE%A4%E8%AF%81%E7%AF%87%E4%B9%8B%E8%A1%A8%E5%8D%95%E7%99%BB%E5%BD%95%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.html","title":"认证篇之表单登录的自定义配置","lang":"zh-CN","frontmatter":{"title":"认证篇之表单登录的自定义配置","subtitle":"认证篇之表单登录的自定义配置","date":"2024-04-11T10:54:20.000Z","category":["Spring Security"],"tag":["Spring Security"],"order":7,"description":"1. 简介 Spring Security 提供了默认的认证规则，同时也支持各种自定义配置。本文档的重点在于深入研究 Spring Security 中表单登录的相关自定义配置。 2. 自定义登录页 对于未认证的请求，Spring Security 会将其重定向到默认的登录页面。同时，也支持自定义登录页面。首先，可以创建一个简单的登录页 login.h...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/Spring%20Security%206.x%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/Spring%20Security%206.x%20%E7%B3%BB%E5%88%97%E3%80%907%E3%80%91%E8%AE%A4%E8%AF%81%E7%AF%87%E4%B9%8B%E8%A1%A8%E5%8D%95%E7%99%BB%E5%BD%95%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"认证篇之表单登录的自定义配置"}],["meta",{"property":"og:description","content":"1. 简介 Spring Security 提供了默认的认证规则，同时也支持各种自定义配置。本文档的重点在于深入研究 Spring Security 中表单登录的相关自定义配置。 2. 自定义登录页 对于未认证的请求，Spring Security 会将其重定向到默认的登录页面。同时，也支持自定义登录页面。首先，可以创建一个简单的登录页 login.h..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240124111318387.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T10:23:30.000Z"}],["meta",{"property":"article:author","content":"Cactus li"}],["meta",{"property":"article:tag","content":"Spring Security"}],["meta",{"property":"article:published_time","content":"2024-04-11T10:54:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T10:23:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认证篇之表单登录的自定义配置\\",\\"image\\":[\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240124111318387.png\\",\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240125172357920.png\\",\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240125172702273.png\\",\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126100851292.png\\",\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126101110509.png\\",\\"https://lixuanfengs.github.io/blog-images/Spring-Security6.x/image-20240126101142844.png\\"],\\"datePublished\\":\\"2024-04-11T10:54:20.000Z\\",\\"dateModified\\":\\"2024-08-09T10:23:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 自定义登录页","slug":"_2-自定义登录页","link":"#_2-自定义登录页","children":[]},{"level":2,"title":"3. 自定义登录请求处理路径","slug":"_3-自定义登录请求处理路径","link":"#_3-自定义登录请求处理路径","children":[]},{"level":2,"title":"4. 自定义用户名密码参数名称","slug":"_4-自定义用户名密码参数名称","link":"#_4-自定义用户名密码参数名称","children":[]},{"level":2,"title":"5. 自定义登录成功跳转地址","slug":"_5-自定义登录成功跳转地址","link":"#_5-自定义登录成功跳转地址","children":[]},{"level":2,"title":"6. 自定义登录失败跳转地址","slug":"_6-自定义登录失败跳转地址","link":"#_6-自定义登录失败跳转地址","children":[]},{"level":2,"title":"7. 自定义认证成功处理器","slug":"_7-自定义认证成功处理器","link":"#_7-自定义认证成功处理器","children":[]},{"level":2,"title":"8. 自定义认证失败处理器","slug":"_8-自定义认证失败处理器","link":"#_8-自定义认证失败处理器","children":[]}],"git":{"createdTime":1722310024000,"updatedTime":1723199010000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":2}]},"readingTime":{"minutes":7.35,"words":2204},"filePathRelative":"tutorial/Spring Security 6.x 使用教程/Spring Security 6.x 系列【7】认证篇之表单登录的自定义配置.md","localizedDate":"2024年4月11日","excerpt":"<h2>1. 简介</h2>\\n<p><code>Spring Security</code> 提供了默认的认证规则，同时也支持各种自定义配置。本文档的重点在于深入研究 <code>Spring Security</code> 中表单登录的相关自定义配置。</p>\\n<h2>2. 自定义登录页</h2>\\n<p>对于未认证的请求，Spring Security 会将其重定向到默认的登录页面。同时，也支持自定义登录页面。首先，可以创建一个简单的登录页 <code>login.html</code>，并将其放置在 <code>resources\\\\static</code> 目录下。</p>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color:#282c34;color:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;!</span><span style=\\"color:#E06C75\\">DOCTYPE</span><span style=\\"color:#D19A66\\"> html</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75\\">html</span><span style=\\"color:#D19A66\\"> lang</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"en\\"</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75\\">head</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">    &lt;</span><span style=\\"color:#E06C75\\">meta</span><span style=\\"color:#D19A66\\"> charset</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"UTF-8\\"</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">    &lt;</span><span style=\\"color:#E06C75\\">title</span><span style=\\"color:#ABB2BF\\">&gt;登录页面&lt;/</span><span style=\\"color:#E06C75\\">title</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;/</span><span style=\\"color:#E06C75\\">head</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75\\">body</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;</span><span style=\\"color:#E06C75\\">form</span><span style=\\"color:#D19A66\\"> action</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"/login\\"</span><span style=\\"color:#D19A66\\"> method</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"post\\"</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">    用户名：&lt;</span><span style=\\"color:#E06C75\\">input</span><span style=\\"color:#D19A66\\"> type</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"text\\"</span><span style=\\"color:#D19A66\\"> name</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"username\\"</span><span style=\\"color:#ABB2BF\\">/&gt;&lt;</span><span style=\\"color:#E06C75\\">br</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">    密码： &lt;</span><span style=\\"color:#E06C75\\">input</span><span style=\\"color:#D19A66\\"> type</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"password\\"</span><span style=\\"color:#D19A66\\"> name</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"password\\"</span><span style=\\"color:#ABB2BF\\">/&gt;&lt;</span><span style=\\"color:#E06C75\\">br</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">    &lt;</span><span style=\\"color:#E06C75\\">input</span><span style=\\"color:#D19A66\\"> type</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"submit\\"</span><span style=\\"color:#D19A66\\"> value</span><span style=\\"color:#ABB2BF\\">=</span><span style=\\"color:#98C379\\">\\"登录\\"</span><span style=\\"color:#ABB2BF\\">/&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;/</span><span style=\\"color:#E06C75\\">form</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;/</span><span style=\\"color:#E06C75\\">body</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">&lt;/</span><span style=\\"color:#E06C75\\">html</span><span style=\\"color:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{B as comp,y as data};
