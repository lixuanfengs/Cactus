import{_ as i,c as a,g as e,o as n}from"./app-CfWePvJy.js";const l={};function t(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h2 id="使用-docker-部署服务端" tabindex="-1"><a class="header-anchor" href="#使用-docker-部署服务端"><span>使用 Docker 部署服务端</span></a></h2><h3 id="_1-环境要求" tabindex="-1"><a class="header-anchor" href="#_1-环境要求"><span>1. 环境要求</span></a></h3><p>您需要安装 Docker/Podman 才能将 rustdesk-server 作为 Docker 容器运行。如有疑问，请按照本<a href="https://docs.docker.com/engine/install" target="_blank" rel="noopener noreferrer">指南</a>安装 Docker ，以确保其为最新版本！</p><p>请确保在防火墙中打开这些端口：</p><ul><li><strong>hbbs：</strong><ul><li><code>21114</code>（TCP）：用于Web控制台，仅在<code>Pro</code>版本中可用。</li><li><code>21115</code>（TCP）：用于NAT类型测试。</li><li><code>21116</code>（TCP/UDP）：<strong>请注意，<code>21116</code>TCP 和 UDP 都应该启用。</strong> <code>21116/UDP</code>用于 ID 注册和心跳服务。<code>21116/TCP</code>用于 TCP 打洞和连接服务。</li><li><code>21118</code>（TCP）：用于支持Web客户端。</li></ul></li><li><strong>hbbr：</strong><ul><li><code>21117</code>（TCP）：用于中继服务。</li><li><code>21119</code>（TCP）：用于支持Web客户端。</li></ul></li></ul><p><em>如果不需要Web客户端支持，可以关闭相应<code>21118</code>端口<code>21119</code>。</em></p><h3 id="_2-docker-示例" tabindex="-1"><a class="header-anchor" href="#_2-docker-示例"><span>2. Docker 示例</span></a></h3><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk/rustdesk-server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./data:/root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -td</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --net=host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unless-stopped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk/rustdesk-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./data:/root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -td</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --net=host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unless-stopped</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk/rustdesk-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbr</span></span></code></pre></div><blockquote><p><code>--net=host</code>仅适用于<strong>Linux 系统</strong>，这使得<code>hbbs</code>/<code>hbbr</code>查看真实的传入 IP 地址，而不是容器 IP (172.17.0.1)。如果<code>--net=host</code>运行正常，<code>-p</code>则不使用这些选项。如果在 Windows 系统中，请省略<code>sudo</code>和<code>--net=host</code>。</p><p><strong><code>--net=host</code>如果您的平台遇到连接问题，请删除。</strong></p></blockquote><p><code>--net=host</code> 模式直接使用了宿主机的网络，这样的好处是不需要管理端口，而且可以查看每个连接的 IP 地址，如果希望自定义端口使用以下命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 先启动 hbbr 容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbr</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./rust-desk:/root</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 30007:21117</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk/rustdesk-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动完成后再启动 hbbs 容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hbbs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./rust-desk:/root</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 30005:21115</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 30006:21116/tcp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 30006:21116/udp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk/rustdesk-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-docker-compose-示例" tabindex="-1"><a class="header-anchor" href="#_3-docker-compose-示例"><span>3. Docker Compose 示例</span></a></h3><p>要按照此处所述运行 Docker 文件，<code>compose.yml</code>您需要安装<a href="https://docs.docker.com/compose/" target="_blank" rel="noopener noreferrer">Docker Compose</a>。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cat &gt; rustdesk-compose.yml &lt;&lt;EOF</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  hbbs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rustdesk/rustdesk-server:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./data:/root</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    depends_on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  hbbr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rustdesk/rustdesk-server:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./data:/root</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您需要进行配置更改，例如设置 ALWAYS_USE_RELAY=Y，您可以使用 docker-compose.yml 中的环境</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cat &gt; rustdesk-compose.yml &lt;&lt;EOF</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  hbbs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rustdesk/rustdesk-server:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ALWAYS_USE_RELAY=Y</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./data:/root</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    depends_on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  hbbr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rustdesk/rustdesk-server:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hbbr</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./data:/root</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;host&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行命令安装程序：</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compose</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustdesk-compose.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span></code></pre></div><p>到这里 RustDesk 服务端其实就已经部署完成了，部署完成后当前目录会多一个 rust-desk 的目录，通过查看该目录下的 <code>.pub </code> 查看 KEY，后面会用到：</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./data/id_ed25519.pub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">T07pESbNfyozhAEKQNpRkVPwEayOPl598q5Vf5ZA</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span></span></code></pre></div><h2 id="客户端配置说明" tabindex="-1"><a class="header-anchor" href="#客户端配置说明"><span>客户端配置说明</span></a></h2><p>访问 <a href="https://github.com/rustdesk/rustdesk/releases/tag/1.4.0" target="_blank" rel="noopener noreferrer">Github</a> 下载官方提供的客户端，这里我用 win 系统举例，推荐下载 MSI 安装程序。</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250716105200167.png" alt="image-20250716105200167" tabindex="0" loading="lazy"><figcaption>image-20250716105200167</figcaption></figure><p>分别在控制端和被控端安装完成后打开软件，依次点击右上角设置、网络、解锁网络设置，然后点击 ID/中继服务器：</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250716105420155.png" alt="image-20250716105420155" tabindex="0" loading="lazy"><figcaption>image-20250716105420155</figcaption></figure><p>ID 服务器填写 21116端口，中继服务器填写 21117 端口，API 服务器留空即可，KEY 填写刚刚在服务端查看的 KEY，控制端和被控段都需要这么配置:</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250716151902535.png" alt="image-20250716151902535" tabindex="0" loading="lazy"><figcaption>image-20250716151902535</figcaption></figure><p>配置完成后点击保存，回到主界面就能看到下面是就绪的状态了:</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250716151944289.png" alt="image-20250716151944289" tabindex="0" loading="lazy"><figcaption>image-20250716151944289</figcaption></figure><p>然后直接输入被控端的 ID 点击连接，输入连接密码，就可以进行远程连接了！</p><figure><img src="https://beauties.eu.org/blogimg/main/img1/image-20250716152212135.png" alt="image-20250716152212135" tabindex="0" loading="lazy"><figcaption>image-20250716152212135</figcaption></figure>`,31)]))}const p=i(l,[["render",t]]),r=JSON.parse(`{"path":"/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%BB%BARustDesk%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%95%99%E7%A8%8B.html","title":"自建RustDesk 远程桌面教程","lang":"zh-CN","frontmatter":{"title":"自建RustDesk 远程桌面教程","subtitle":"devops","date":"2025-06-03T14:06:01.000Z","category":["devops"],"tag":["RustDesk"],"order":12,"description":"使用 Docker 部署服务端 1. 环境要求 您需要安装 Docker/Podman 才能将 rustdesk-server 作为 Docker 容器运行。如有疑问，请按照本指南安装 Docker ，以确保其为最新版本！ 请确保在防火墙中打开这些端口： hbbs： 21114（TCP）：用于Web控制台，仅在Pro版本中可用。 21115（TCP）：...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/tutorial/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%BB%BARustDesk%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%95%99%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"自建RustDesk 远程桌面教程"}],["meta",{"property":"og:description","content":"使用 Docker 部署服务端 1. 环境要求 您需要安装 Docker/Podman 才能将 rustdesk-server 作为 Docker 容器运行。如有疑问，请按照本指南安装 Docker ，以确保其为最新版本！ 请确保在防火墙中打开这些端口： hbbs： 21114（TCP）：用于Web控制台，仅在Pro版本中可用。 21115（TCP）：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://beauties.eu.org/blogimg/main/img1/image-20250716105200167.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-16T07:24:23.000Z"}],["meta",{"property":"article:tag","content":"RustDesk"}],["meta",{"property":"article:published_time","content":"2025-06-03T14:06:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-16T07:24:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自建RustDesk 远程桌面教程\\",\\"image\\":[\\"https://beauties.eu.org/blogimg/main/img1/image-20250716105200167.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250716105420155.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250716151902535.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250716151944289.png\\",\\"https://beauties.eu.org/blogimg/main/img1/image-20250716152212135.png\\"],\\"datePublished\\":\\"2025-06-03T14:06:01.000Z\\",\\"dateModified\\":\\"2025-07-16T07:24:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"使用 Docker 部署服务端","slug":"使用-docker-部署服务端","link":"#使用-docker-部署服务端","children":[{"level":3,"title":"1. 环境要求","slug":"_1-环境要求","link":"#_1-环境要求","children":[]},{"level":3,"title":"2. Docker 示例","slug":"_2-docker-示例","link":"#_2-docker-示例","children":[]},{"level":3,"title":"3. Docker Compose 示例","slug":"_3-docker-compose-示例","link":"#_3-docker-compose-示例","children":[]}]},{"level":2,"title":"客户端配置说明","slug":"客户端配置说明","link":"#客户端配置说明","children":[]}],"git":{"createdTime":1752650663000,"updatedTime":1752650663000,"contributors":[{"name":"Dell","username":"Dell","email":"1183895890@qq.com","commits":1,"url":"https://github.com/Dell"}]},"readingTime":{"minutes":2.95,"words":884},"filePathRelative":"tutorial/系统开发部署/自建RustDesk远程桌面教程.md","localizedDate":"2025年6月3日","excerpt":"<h2>使用 Docker 部署服务端</h2>\\n<h3>1. 环境要求</h3>\\n<p>您需要安装 Docker/Podman 才能将 rustdesk-server 作为 Docker 容器运行。如有疑问，请按照本<a href=\\"https://docs.docker.com/engine/install\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">指南</a>安装 Docker ，以确保其为最新版本！</p>\\n<p>请确保在防火墙中打开这些端口：</p>\\n<ul>\\n<li><strong>hbbs：</strong>\\n<ul>\\n<li><code>21114</code>（TCP）：用于Web控制台，仅在<code>Pro</code>版本中可用。</li>\\n<li><code>21115</code>（TCP）：用于NAT类型测试。</li>\\n<li><code>21116</code>（TCP/UDP）：<strong>请注意，<code>21116</code>TCP 和 UDP 都应该启用。</strong> <code>21116/UDP</code>用于 ID 注册和心跳服务。<code>21116/TCP</code>用于 TCP 打洞和连接服务。</li>\\n<li><code>21118</code>（TCP）：用于支持Web客户端。</li>\\n</ul>\\n</li>\\n<li><strong>hbbr：</strong>\\n<ul>\\n<li><code>21117</code>（TCP）：用于中继服务。</li>\\n<li><code>21119</code>（TCP）：用于支持Web客户端。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{p as comp,r as data};
