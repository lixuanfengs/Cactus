import{_ as s,o as a,c as n,e as l}from"./app-C_ZwgGqh.js";const e={},o=l(`<blockquote><p>本文主要对 WeakHashMap源码解析 源码解析。</p></blockquote><ul><li>WeakHashMap 源码解析 <ul><li>Java 7- WeakHashMap <ul><li><a href="#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D">总体介绍</a></li><li><a href="#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0">具体实现</a></li><li><a href="#weak-hashset">Weak HashSet?</a></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0">参考文章</a></li></ul></li></ul></li></ul><h2 id="java-7-weakhashmap" tabindex="-1"><a class="header-anchor" href="#java-7-weakhashmap"><span><a href="#java-7-weakhashmap">#</a> Java 7- WeakHashMap</span></a></h2><h3 id="总体介绍" tabindex="-1"><a class="header-anchor" href="#总体介绍"><span><a href="#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D">#</a> 总体介绍</span></a></h3><p>在Java集合框架系列文章的最后，笔者打算介绍一个特殊的成员: <em>WeakHashMap</em>，从名字可以看出它是某种 <em>Map</em>。它的特殊之处在于 <em>WeakHashMap</em> 里的<code>entry</code>可能会被GC自动删除，即使程序员没有调用<code>remove()</code>或者<code>clear()</code>方法。</p><p>更直观的说，当使用 <em>WeakHashMap</em> 时，即使没有显示的添加或删除任何元素，也可能发生如下情况:</p><blockquote><ul><li>调用两次<code>size()</code>方法返回不同的值；</li><li>两次调用<code>isEmpty()</code>方法，第一次返回<code>false</code>，第二次返回<code>true</code>；</li><li>两次调用<code>containsKey()</code>方法，第一次返回<code>true</code>，第二次返回<code>false</code>，尽管两次使用的是同一个<code>key</code>；</li><li>两次调用<code>get()</code>方法，第一次返回一个<code>value</code>，第二次返回<code>null</code>，尽管两次使用的是同一个对象。</li></ul></blockquote><p>遇到这么奇葩的现象，你是不是觉得使用者一定会疯掉? 其实不然，<strong>WeakHashMap 的这个特点特别适用于需要缓存的场景</strong>。在缓存场景下，由于内存是有限的，不能缓存所有对象；对象缓存命中可以提高系统效率，但缓存MISS也不会造成错误，因为可以通过计算重新得到。</p><p>要明白 <em>WeakHashMap</em> 的工作原理，还需要引入一个概念 : <strong>弱引用(WeakReference)</strong>。我们都知道Java中内存是通过GC自动管理的，GC会在程序运行过程中自动判断哪些对象是可以被回收的，并在合适的时机进行内存释放。GC判断某个对象是否可被回收的依据是，<strong>是否有有效的引用指向该对象</strong>。如果没有有效引用指向该对象(基本意味着不存在访问该对象的方式)，那么该对象就是可回收的。这里的<strong>有效引用</strong> 并不包括<strong>弱引用</strong>。也就是说，<strong>虽然弱引用可以用来访问对象，但进行垃圾回收时弱引用并不会被考虑在内，仅有弱引用指向的对象仍然会被GC回收</strong>。</p><p><em>WeakHashMap</em> 内部是通过弱引用来管理<code>entry</code>的，弱引用的特性对应到 <em>WeakHashMap</em> 上意味着什么呢？<strong>将一对<code>key, value</code>放入到 *WeakHashMap* 里并不能避免该<code>key</code>值被GC回收，除非在 *WeakHashMap* 之外还有对该<code>key</code>的强引用</strong>。</p><p>关于强引用，弱引用等概念以后再具体讲解，这里只需要知道Java中引用也是分种类的，并且不同种类的引用对GC的影响不同就够了。</p><h3 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现"><span><a href="#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0">#</a> 具体实现</span></a></h3><p>WeakHashMap的存储结构类似于<a href="">Map - HashSet &amp; HashMap 源码解析</a>，这里不再赘述。</p><p>关于强弱引用的管理方式，博主将会另开专题单独讲解。</p><h3 id="weak-hashset" tabindex="-1"><a class="header-anchor" href="#weak-hashset"><span><a href="#weak-hashset">#</a> Weak HashSet?</span></a></h3><p>如果你看过前几篇关于 <em>Map</em> 和 <em>Set</em> 的讲解，一定会问: 既然有 <em>WeakHashMap</em>，是否有 <em>WeekHashSet</em> 呢? 答案是没有:( 。不过Java <em>Collections</em>工具类给出了解决方案，<code>Collections.newSetFromMap(Map&lt;E,Boolean&gt; map)</code>方法可以将任何 <em>Map</em>包装成一个<em>Set</em>。通过如下方式可以快速得到一个 <em>Weak HashSet</em>:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 将WeakHashMap包装成一个Set</span></span>
<span class="line"><span style="color:#E5C07B;">Set</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> weakHashSet </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Collections</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">newSetFromMap</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#E5C07B;"> WeakHashMap</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Boolean</span><span style="color:#ABB2BF;">&gt;());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不出你所料，<code>newSetFromMap()</code>方法只是对传入的 <em>Map</em>做了简单包装:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Collections.newSetFromMap()用于将任何Map包装成一个Set</span></span>
<span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> static</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;">E</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E5C07B;"> Set</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">E</span><span style="color:#56B6C2;">&gt;</span><span style="color:#61AFEF;"> newSetFromMap</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">E</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> Boolean</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> map) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> SetFromMap</span><span style="color:#ABB2BF;">&lt;&gt;</span><span style="color:#E06C75;">(map)</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">private</span><span style="color:#C678DD;"> static</span><span style="color:#C678DD;"> class</span><span style="color:#E5C07B;"> SetFromMap</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> AbstractSet</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">    implements</span><span style="color:#E5C07B;"> Set</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;,</span><span style="color:#E5C07B;"> Serializable</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> final</span><span style="color:#E5C07B;"> Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;"> Boolean</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> m</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">  // The backing map</span></span>
<span class="line"><span style="color:#C678DD;">    private</span><span style="color:#C678DD;"> transient</span><span style="color:#E5C07B;"> Set</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> s</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">       // Its keySet</span></span>
<span class="line"><span style="color:#61AFEF;">    SetFromMap</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Map</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Boolean</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"><span style="color:#C678DD;">            throw</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> IllegalArgumentException</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Map is non-empty&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        m </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> map;</span></span>
<span class="line"><span style="color:#ABB2BF;">        s </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keySet</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> clear</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">               {        </span><span style="color:#E5C07B;">m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> int</span><span style="color:#61AFEF;"> size</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">                 { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">size</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> isEmpty</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">          { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isEmpty</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> contains</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;font-style:italic;"> o</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">containsKey</span><span style="color:#ABB2BF;">(o); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> remove</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;font-style:italic;"> o</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">   { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">remove</span><span style="color:#ABB2BF;">(o) </span><span style="color:#56B6C2;">!=</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">; }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> add</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">E</span><span style="color:#E06C75;font-style:italic;"> e</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> m</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">put</span><span style="color:#ABB2BF;">(e, </span><span style="color:#E5C07B;">Boolean</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">TRUE</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">; }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> Iterator</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">E</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#61AFEF;"> iterator</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">     { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">iterator</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> Object</span><span style="color:#61AFEF;">[] toArray</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">         { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toArray</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E5C07B;"> T</span><span style="color:#61AFEF;">[] toArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[] </span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">     { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toArray</span><span style="color:#ABB2BF;">(a); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#E5C07B;"> String</span><span style="color:#61AFEF;"> toString</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">          { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> int</span><span style="color:#61AFEF;"> hashCode</span><span style="color:#ABB2BF;">()</span><span style="color:#ABB2BF;">             { </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hashCode</span><span style="color:#ABB2BF;">(); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> equals</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#E06C75;font-style:italic;"> o</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">   { </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> o </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> this</span><span style="color:#56B6C2;"> ||</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">equals</span><span style="color:#ABB2BF;">(o); }</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> containsAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Collection</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">c</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;"> {</span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">containsAll</span><span style="color:#ABB2BF;">(c);}</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> removeAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Collection</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">c</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">   {</span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeAll</span><span style="color:#ABB2BF;">(c);}</span></span>
<span class="line"><span style="color:#C678DD;">    public</span><span style="color:#C678DD;"> boolean</span><span style="color:#61AFEF;"> retainAll</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Collection</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#E06C75;font-style:italic;">c</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">   {</span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> s</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">retainAll</span><span style="color:#ABB2BF;">(c);}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // addAll is the only inherited implementation</span></span>
<span class="line"><span style="color:#ABB2BF;">    ......</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),p=[o];function t(c,r){return a(),n("div",null,p)}const i=s(e,[["render",t],["__file","WeakHashMap 源码解析.html.vue"]]),y=JSON.parse(`{"path":"/posts/Java/Collection/WeakHashMap%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html","title":"WeakHashMap 源码解析","lang":"zh-CN","frontmatter":{"title":"WeakHashMap 源码解析","subtitle":"Java，Java开发，Java 体系","date":"2024-03-06T10:15:26.000Z","category":["Java"],"tag":["Java","Collection"],"order":9,"description":"本文主要对 WeakHashMap源码解析 源码解析。 WeakHashMap 源码解析 Java 7- WeakHashMap 总体介绍 具体实现 Weak HashSet? 参考文章 # Java 7- WeakHashMap # 总体介绍 在Java集合框架系列文章的最后，笔者打算介绍一个特殊的成员: WeakHashMap，从名字可以看出它是某...","head":[["meta",{"property":"og:url","content":"https://cactusli.net/posts/Java/Collection/WeakHashMap%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"Cactus's Blog"}],["meta",{"property":"og:title","content":"WeakHashMap 源码解析"}],["meta",{"property":"og:description","content":"本文主要对 WeakHashMap源码解析 源码解析。 WeakHashMap 源码解析 Java 7- WeakHashMap 总体介绍 具体实现 Weak HashSet? 参考文章 # Java 7- WeakHashMap # 总体介绍 在Java集合框架系列文章的最后，笔者打算介绍一个特殊的成员: WeakHashMap，从名字可以看出它是某..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-08T03:51:56.000Z"}],["meta",{"property":"article:author","content":"Cactus li"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Collection"}],["meta",{"property":"article:published_time","content":"2024-03-06T10:15:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-08T03:51:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WeakHashMap 源码解析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-06T10:15:26.000Z\\",\\"dateModified\\":\\"2024-03-08T03:51:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cactus li\\",\\"url\\":\\"https://cactusli.net\\"}]}"]]},"headers":[{"level":2,"title":"# Java 7- WeakHashMap","slug":"java-7-weakhashmap","link":"#java-7-weakhashmap","children":[{"level":3,"title":"# 总体介绍","slug":"总体介绍","link":"#总体介绍","children":[]},{"level":3,"title":"# 具体实现","slug":"具体实现","link":"#具体实现","children":[]},{"level":3,"title":"# Weak HashSet?","slug":"weak-hashset","link":"#weak-hashset","children":[]}]}],"git":{"createdTime":1709869916000,"updatedTime":1709869916000,"contributors":[{"name":"lixuanfengs","email":"1183895890@qq.com","commits":1}]},"readingTime":{"minutes":3.7,"words":1109},"filePathRelative":"posts/Java/Collection/WeakHashMap 源码解析.md","localizedDate":"2024年3月6日","excerpt":"<blockquote>\\n<p>本文主要对 WeakHashMap源码解析 源码解析。</p>\\n</blockquote>\\n<ul>\\n<li>WeakHashMap 源码解析\\n<ul>\\n<li>Java 7- WeakHashMap\\n<ul>\\n<li><a href=\\"#%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D\\">总体介绍</a></li>\\n<li><a href=\\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\\">具体实现</a></li>\\n<li><a href=\\"#weak-hashset\\">Weak HashSet?</a></li>\\n<li><a href=\\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\\">参考文章</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{i as comp,y as data};
